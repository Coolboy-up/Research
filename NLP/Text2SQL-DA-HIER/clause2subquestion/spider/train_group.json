{"db_id": "inn_1", "sub_sql": "group by t1.room having count reservations > 60", "question": "Find the names of rooms that have been reserved for more than 60 times.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count(*)  >  60", "sub_ques": "rooms that have been reserved for more than 60 times", "sun_sql_new": "group by t1.room having count reservations more than 60"}
{"db_id": "inn_1", "sub_sql": "group by t1.room having count reservations > 60", "question": "What are the names of rooms whose reservation frequency exceeds 60 times?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count(*)  >  60", "sub_ques": "rooms whose reservation frequency exceeds 60 times", "sun_sql_new": "group by t1.room having count reservations more than 60"}
{"db_id": "local_govt_mdm", "sub_sql": "group by t1.cmi_cross_ref_id having count council_tax >= 1", "question": "What is the cmi cross reference id that is related to at least one council tax entry? List the cross reference id and source system code.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.cmi_cross_ref_id ,  T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count(*)  >=  1", "sub_ques": "cmi cross reference id that is related to at least one council tax entry", "sun_sql_new": "group by t1.cmi_cross_ref_id having count council_tax no less than 1"}
{"db_id": "party_host", "sub_sql": "group by nationality order by count nationality desc limit 1", "question": "Show the most common nationality of hosts.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count nationality desc limit 1", "query": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the most common nationality of hosts", "sun_sql_new": "group by nationality order by count nationality desc limit 1"}
{"db_id": "party_host", "sub_sql": "group by nationality order by count nationality desc limit 1", "question": "Which nationality has the most hosts?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count nationality desc limit 1", "query": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "nationality has the most hosts", "sun_sql_new": "group by nationality order by count nationality desc limit 1"}
{"db_id": "storm_record", "sub_sql": "group by t1.storm_id order by count affected_region desc limit 1", "question": "What is the storm name and max speed which affected the greatest number of regions?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count affected_region desc limit 1", "query": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the storm name which affected the greatest number of regions", "sun_sql_new": "group by t1.storm_id order by count affected_region desc limit 1"}
{"db_id": "storm_record", "sub_sql": "group by t1.storm_id order by count affected_region desc limit 1", "question": "Return the name and max speed of the storm that affected the most regions.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count affected_region desc limit 1", "query": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the storm that affected the most regions", "sun_sql_new": "group by t1.storm_id order by count affected_region desc limit 1"}
{"db_id": "storm_record", "sub_sql": "group by t1.region_id having count affected_region >= 2", "question": "Show the region name with at least two storms.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2", "sub_ques": "region name with at least two storms", "sun_sql_new": "group by t1.region_id having count affected_region no less than 2"}
{"db_id": "storm_record", "sub_sql": "group by t1.region_id having count affected_region >= 2", "question": "What are the names of regions with two or more storms?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2", "sub_ques": "regions with two or more storms", "sun_sql_new": "group by t1.region_id having count affected_region no less than 2"}
{"db_id": "election", "sub_sql": "group by t1.county_id having count election >= 2", "question": "Show the names of counties that have at least two delegates.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2", "sub_ques": "counties that have at least two delegates", "sun_sql_new": "group by t1.county_id having count election no less than 2"}
{"db_id": "election", "sub_sql": "group by t1.county_id having count election >= 2", "question": "Which counties have two or more delegates? Give me the county names.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2", "sub_ques": "counties have two or more delegates", "sun_sql_new": "group by t1.county_id having count election no less than 2"}
{"db_id": "election", "sub_sql": "group by party having count * >= 2", "question": "Show the name of the party that has at least two records.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2", "sub_ques": "party that has at least two records", "sun_sql_new": "group by party having count * no less than 2"}
{"db_id": "election", "sub_sql": "group by party having count * >= 2", "question": "Which party has two or more records?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2", "sub_ques": "party has two or more records", "sun_sql_new": "group by party having count * no less than 2"}
{"db_id": "election", "sub_sql": "group by t1.party order by count election desc limit 1", "question": "Show the name of the party that has the most delegates.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count election desc limit 1", "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "party that has the most delegates", "sun_sql_new": "group by t1.party order by count election desc limit 1"}
{"db_id": "election", "sub_sql": "group by t1.party order by count election desc limit 1", "question": "Which party has the largest number of delegates?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count election desc limit 1", "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "party has the largest number of delegates", "sun_sql_new": "group by t1.party order by count election desc limit 1"}
{"db_id": "election", "sub_sql": "group by governor order by count party desc limit 1", "question": "Show the people that have been governor the most times.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count party desc limit 1", "query": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "people that have been governor the most times", "sun_sql_new": "group by governor order by count party desc limit 1"}
{"db_id": "election", "sub_sql": "group by governor order by count party desc limit 1", "question": "Which people severed as governor most frequently?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count party desc limit 1", "query": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "people severed as governor most frequently", "sun_sql_new": "group by governor order by count party desc limit 1"}
{"db_id": "election", "sub_sql": "group by comptroller order by count party desc limit 1", "question": "Show the people that have been comptroller the most times and the corresponding number of times.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count party desc limit 1", "query": "SELECT Comptroller ,  COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "comptroller the most times and the corresponding number of times", "sun_sql_new": "group by comptroller order by count party desc limit 1"}
{"db_id": "election", "sub_sql": "group by comptroller order by count party desc limit 1", "question": "Which people severed as comptroller most frequently? Give me the name of the person and the frequency count.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count party desc limit 1", "query": "SELECT Comptroller ,  COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "people severed as comptroller most frequently", "sun_sql_new": "group by comptroller order by count party desc limit 1"}
{"db_id": "news_report", "sub_sql": "group by nationality order by count journalist desc limit 1", "question": "Show the most common nationality for journalists.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count journalist desc limit 1", "query": "SELECT Nationality FROM journalist GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the most common nationality for journalists", "sun_sql_new": "group by nationality order by count journalist desc limit 1"}
{"db_id": "news_report", "sub_sql": "group by t3.name having count event > 1", "question": "Show the names of journalists that have reported more than one event.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T3.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name HAVING COUNT(*)  >  1", "sub_ques": "names of journalists that have reported more than one event", "sun_sql_new": "group by t3.name having count event more than 1"}
{"db_id": "restaurant_1", "sub_sql": "group by advisor order by count advisor desc limit 1", "question": "Which Advisor has most of students? List advisor and the number of students.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count advisor desc limit 1", "query": "SELECT Advisor ,  count(*) FROM Student GROUP BY Advisor ORDER BY count(Advisor) DESC LIMIT 1;", "sub_ques": "advisor has most of students", "sun_sql_new": "group by advisor order by count advisor desc limit 1"}
{"db_id": "restaurant_1", "sub_sql": "group by major order by count major asc limit 1", "question": "Which major has least number of students? List the major and the number of students.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count major asc limit 1", "query": "SELECT Major ,  count(*) FROM Student GROUP BY Major ORDER BY count(Major) ASC LIMIT 1;", "sub_ques": "major has least number of students", "sun_sql_new": "group by major order by count major asc limit 1"}
{"db_id": "restaurant_1", "sub_sql": "group by type_of_restaurant.restypeid having restaurant_type.restypename = sandwich", "question": "How many restaurant is the Sandwich type restaurant?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT count(*) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich'", "sub_ques": "restaurant is the Sandwich type restaurant", "sun_sql_new": "group by type_of_restaurant.restypeid having restaurant_type.restypename equal to sandwich"}
{"db_id": "restaurant_1", "sub_sql": "group by restaurant.resid order by sum visits_restaurant.spent asc limit 1", "question": "At which restaurant did the students spend the least amount of time? List restaurant and the time students spent on in total.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by sum spent asc limit 1", "query": "SELECT Restaurant.ResName ,  sum(Visits_Restaurant.Spent) FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID GROUP BY Restaurant.ResID ORDER BY sum(Visits_Restaurant.Spent) ASC LIMIT 1;", "sub_ques": "restaurant did the students spend the least amount of time", "sun_sql_new": "group by restaurant.resid order by sum visits_restaurant.spent asc limit 1"}
{"db_id": "restaurant_1", "sub_sql": "group by student.stuid order by count Visits_Restaurant desc limit 1", "question": "Which student visited restaurant most often? List student's first name and last name.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Visits_Restaurant desc limit 1", "query": "SELECT Student.Fname , Student.Lname FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID GROUP BY Student.StuID ORDER BY count(*) DESC LIMIT 1;", "sub_ques": "student visited restaurant most often", "sun_sql_new": "group by student.stuid order by count Visits_Restaurant desc limit 1"}
{"db_id": "customer_deliveries", "sub_sql": "group by t2.product_id order by count regular_order_products desc limit 1", "question": "Find the name and price of the product that has been ordered the greatest number of times.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count regular_order_products desc limit 1", "query": "SELECT t1.product_name ,   t1.product_price FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t2.product_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "product that has been ordered the greatest number of times", "sun_sql_new": "group by t2.product_id order by count regular_order_products desc limit 1"}
{"db_id": "customer_deliveries", "sub_sql": "group by payment_method order by count payment_method desc limit 1", "question": "Find the payment method that is used most frequently.", "sub_sql_type": "null null agg col col null null limv", "sub_sql_new": "order by count payment method desc limit 1", "query": "SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the payment method that is used most frequently", "sun_sql_new": "group by payment_method order by count payment_method desc limit 1"}
{"db_id": "customer_deliveries", "sub_sql": "group by t1.route_id order by count Delivery_Routes desc limit 1", "question": "Find the name of route that has the highest number of deliveries.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Delivery_Routes desc limit 1", "query": "SELECT t1.route_name FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id  =  t2.route_id GROUP BY t1.route_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "route that has the highest number of deliveries", "sun_sql_new": "group by t1.route_id order by count Delivery_Routes desc limit 1"}
{"db_id": "icfp_1", "sub_sql": "group by t1.country order by count papers desc limit 1", "question": "Retrieve the country that has published the most papers.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count papers desc limit 1", "query": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.country ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the country that has published the most papers", "sun_sql_new": "group by t1.country order by count papers desc limit 1"}
{"db_id": "icfp_1", "sub_sql": "group by t1.country order by count papers desc limit 1", "question": "Find the country that the most papers are affiliated with.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count papers desc limit 1", "query": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.country ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the country that the most papers are affiliated with", "sun_sql_new": "group by t1.country order by count papers desc limit 1"}
{"db_id": "icfp_1", "sub_sql": "group by t1.name order by count papers desc limit 1", "question": "Find the name of the organization that has published the largest number of papers.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count papers desc limit 1", "query": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the name of the organization that has published the largest number of papers", "sun_sql_new": "group by t1.name order by count papers desc limit 1"}
{"db_id": "icfp_1", "sub_sql": "group by t1.name order by count papers desc limit 1", "question": "Which institution has the most papers? Find the name of the institution.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count papers desc limit 1", "query": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1", "sub_ques": "institution has the most papers", "sun_sql_new": "group by t1.name order by count papers desc limit 1"}
{"db_id": "sakila_1", "sub_sql": "group by first_name order by count actor desc limit 1", "question": "What is the most popular first name of the actors?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count actor desc limit 1", "query": "SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the most popular first name of the actors", "sun_sql_new": "group by first_name order by count actor desc limit 1"}
{"db_id": "sakila_1", "sub_sql": "group by first_name order by count actor desc limit 1", "question": "Return the most common first name among all actors.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count actor desc limit 1", "query": "SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the most common first name among all actors", "sun_sql_new": "group by first_name order by count actor desc limit 1"}
{"db_id": "sakila_1", "sub_sql": "group by district having count address >= 2", "question": "Which districts have at least two addresses?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2", "sub_ques": "districts have at least two addresses", "sun_sql_new": "group by district having count address no less than 2"}
{"db_id": "sakila_1", "sub_sql": "group by district having count address >= 2", "question": "Give the districts which have two or more addresses.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2", "sub_ques": "districts which have two or more addresses", "sun_sql_new": "group by district having count address no less than 2"}
{"db_id": "sakila_1", "sub_sql": "group by t1.city_id order by count address desc limit 1", "question": "Which city has the most addresses? List the city name, number of addresses, and city id.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count address desc limit 1", "query": "SELECT T2.city ,  count(*) ,  T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "city has the most addresses", "sun_sql_new": "group by t1.city_id order by count address desc limit 1"}
{"db_id": "sakila_1", "sub_sql": "group by t1.city_id order by count address desc limit 1", "question": "What are the city name, id, and number of addresses corresponding to the city with the most addressed?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count address desc limit 1", "query": "SELECT T2.city ,  count(*) ,  T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the city with the most addressed", "sun_sql_new": "group by t1.city_id order by count address desc limit 1"}
{"db_id": "sakila_1", "sub_sql": "group by t2.country_id having count city >= 3", "question": "Which countries have at least 3 cities?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3", "sub_ques": "countries have at least 3 cities", "sun_sql_new": "group by t2.country_id having count city no less than 3"}
{"db_id": "sakila_1", "sub_sql": "group by t2.country_id having count city >= 3", "question": "What are the countries that contain 3 or more cities?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3", "sub_ques": "countries that contain 3 or more cities", "sun_sql_new": "group by t2.country_id having count city no less than 3"}
{"db_id": "sakila_1", "sub_sql": "group by t2.film_id order by count film_actor desc limit 1", "question": "Which film has the most number of actors or actresses? List the film name, film id and description.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count film_actor desc limit 1", "query": "SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "film has the most number of actors or actresses", "sun_sql_new": "group by t2.film_id order by count film_actor desc limit 1"}
{"db_id": "sakila_1", "sub_sql": "group by t2.film_id order by count film_actor desc limit 1", "question": "What are the title, id, and description of the movie with the greatest number of actors?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count film_actor desc limit 1", "query": "SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the movie with the greatest number of actors", "sun_sql_new": "group by t2.film_id order by count film_actor desc limit 1"}
{"db_id": "sakila_1", "sub_sql": "group by t2.actor_id order by count film_actor desc limit 1", "question": "Which film actor (actress) starred the most films? List his or her first name, last name and actor id.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count film_actor desc limit 1", "query": "SELECT T2.first_name ,  T2.last_name ,  T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "film actor ( actress ) starred the most films", "sun_sql_new": "group by t2.actor_id order by count film_actor desc limit 1"}
{"db_id": "sakila_1", "sub_sql": "group by t2.actor_id order by count film_actor desc limit 1", "question": "Return the full name and id of the actor or actress who starred in the greatest number of films.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count film_actor desc limit 1", "query": "SELECT T2.first_name ,  T2.last_name ,  T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the actor or actress who starred in the greatest number", "sun_sql_new": "group by t2.actor_id order by count film_actor desc limit 1"}
{"db_id": "sakila_1", "sub_sql": "group by t2.actor_id having count film_actor > 30", "question": "Which film actors (actresses) played a role in more than 30 films? List his or her first name and last name.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30", "sub_ques": "film actors (actresses) played a role in more than 30 films", "sun_sql_new": "group by t2.actor_id having count film_actor more than 30"}
{"db_id": "sakila_1", "sub_sql": "group by t2.actor_id having count film_actor > 30", "question": "What are the full names of actors who had roles in more than 30 films?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30", "sub_ques": "actors who had roles in more than 30 films", "sun_sql_new": "group by t2.actor_id having count film_actor more than 30"}
{"db_id": "sakila_1", "sub_sql": "group by store_id order by count inventory desc limit 1", "question": "Which store owns most items?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count inventory desc limit 1", "query": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "store owns most items", "sun_sql_new": "group by store_id order by count inventory desc limit 1"}
{"db_id": "sakila_1", "sub_sql": "group by store_id order by count inventory desc limit 1", "question": "What is the id of the store that has the most items in inventory?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count inventory desc limit 1", "query": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "storm that has the most items in inventory", "sun_sql_new": "group by store_id order by count inventory desc limit 1"}
{"db_id": "sakila_1", "sub_sql": "group by t1.customer_id order by sum amount asc limit 1", "question": "Which customer, who has made at least one payment, has spent the least money? List his or her first name, last name, and the id.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by sum amount asc limit 1", "query": "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1", "sub_ques": "customer , who has made at least one payment , has spent the least money", "sun_sql_new": "group by t1.customer_id order by sum amount asc limit 1"}
{"db_id": "sakila_1", "sub_sql": "group by t1.customer_id order by sum amount asc limit 1", "question": "What is the full name and id of the customer who has the lowest total amount of payment?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by sum amount asc limit 1", "query": "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1", "sub_ques": "the customer who has the lowest total amount of payment", "sun_sql_new": "group by t1.customer_id order by sum amount asc limit 1"}
{"db_id": "sakila_1", "sub_sql": "group by t1.film_id order by count inventory desc limit 1", "question": "Which film has the most copies in the inventory? List both title and id.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count inventory desc limit 1", "query": "SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "film has the most copies in the inventory", "sun_sql_new": "group by t1.film_id order by count inventory desc limit 1"}
{"db_id": "sakila_1", "sub_sql": "group by t1.film_id order by count inventory desc limit 1", "question": "What is the title and id of the film that has the greatest number of copies in inventory?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count inventory desc limit 1", "query": "SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the film that has the greatest number of copies in inventory", "sun_sql_new": "group by t1.film_id order by count inventory desc limit 1"}
{"db_id": "sakila_1", "sub_sql": "group by t2.inventory_id order by count inventory desc limit 1", "question": "What is the film title and inventory id of the item in the inventory which was rented most frequently?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count inventory desc limit 1", "query": "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "inventory id of the item in the inventory which was rented most frequently", "sun_sql_new": "group by t2.inventory_id order by count inventory desc limit 1"}
{"db_id": "sakila_1", "sub_sql": "group by t2.inventory_id order by count inventory desc limit 1", "question": "Return the title and inventory id of the film that is rented most often.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count inventory desc limit 1", "query": "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "inventory id of the film that is rented most often", "sun_sql_new": "group by t2.inventory_id order by count inventory desc limit 1"}
{"db_id": "sakila_1", "sub_sql": "group by t1.staff_id order by count payment asc limit 1", "question": "Which staff handled least number of payments? List the full name and the id.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count payment asc limit 1", "query": "SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1", "sub_ques": "staff handled least number of payments", "sun_sql_new": "group by t1.staff_id order by count payment asc limit 1"}
{"db_id": "sakila_1", "sub_sql": "group by t1.staff_id order by count payment asc limit 1", "question": "Give the full name and staff id of the staff who has handled the fewest payments.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count payment asc limit 1", "query": "SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1", "sub_ques": "the staff who has handled the fewest payments", "sun_sql_new": "group by t1.staff_id order by count payment asc limit 1"}
{"db_id": "sakila_1", "sub_sql": "group by store_id order by count customer desc limit 1", "question": "Which store has most the customers?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count customer desc limit 1", "query": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "store has most the customers", "sun_sql_new": "group by store_id order by count customer desc limit 1"}
{"db_id": "sakila_1", "sub_sql": "group by store_id order by count customer desc limit 1", "question": "Return the id of the store with the most customers.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count customer desc limit 1", "query": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the store with the most customers", "sun_sql_new": "group by store_id order by count customer desc limit 1"}
{"db_id": "loan_1", "sub_sql": "group by t1.cust_name order by sum t2.amount", "question": "List the name of all different customers who have some loan sorted by their total loan amount.", "sub_sql_type": "null null agg col", "sub_sql_new": "order by sum amount", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount)", "sub_ques": "the name of all different customers who have some loan sorted by their total loan amount", "sun_sql_new": "group by t1.cust_name order by sum t2.amount"}
{"db_id": "loan_1", "sub_sql": "group by t1.cust_name order by sum t2.amount", "question": "What are the names of the different customers who have taken out a loan, ordered by the total amount that they have taken?", "sub_sql_type": "null null agg col", "sub_sql_new": "order by sum amount", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount)", "sub_ques": "the names of the different customers who have taken out a loan , ordered by the total amount", "sun_sql_new": "group by t1.cust_name order by sum t2.amount"}
{"db_id": "loan_1", "sub_sql": "group by t1.cust_name order by sum t2.amount desc limit 1", "question": "Find the name of customer who has the highest amount of loans.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by sum amount desc limit 1", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount) DESC LIMIT 1", "sub_ques": "the name of customer who has the highest amount of loans", "sun_sql_new": "group by t1.cust_name order by sum t2.amount desc limit 1"}
{"db_id": "loan_1", "sub_sql": "group by t1.cust_name order by sum t2.amount desc limit 1", "question": "What is the name of the customer who has greatest total loan amount?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by sum amount desc limit 1", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount) DESC LIMIT 1", "sub_ques": "the name of the customer who has greatest total loan amount", "sun_sql_new": "group by t1.cust_name order by sum t2.amount desc limit 1"}
{"db_id": "loan_1", "sub_sql": "group by state order by sum no_of_customers desc limit 1", "question": "Find the state which has the most number of customers.", "sub_sql_type": "null null agg col col col null null limv", "sub_sql_new": "order by sum no of customers desc limit 1", "query": "SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1", "sub_ques": "the state which has the most number of customers", "sun_sql_new": "group by state order by sum no_of_customers desc limit 1"}
{"db_id": "loan_1", "sub_sql": "group by state order by sum no_of_customers desc limit 1", "question": "Which state has the greatest total number of bank customers?", "sub_sql_type": "null null agg col col col null null limv", "sub_sql_new": "order by sum no of customers desc limit 1", "query": "SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1", "sub_ques": "state has the greatest total number of bank customers", "sun_sql_new": "group by state order by sum no_of_customers desc limit 1"}
{"db_id": "loan_1", "sub_sql": "group by t1.cust_name having count loan > 1", "question": "Find the name of customers who have more than one loan.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING count(*)  >  1", "sub_ques": "name of customers who have more than one loan", "sun_sql_new": "group by t1.cust_name having count loan more than 1"}
{"db_id": "loan_1", "sub_sql": "group by t1.cust_name having count loan > 1", "question": "What are the names of customers who have taken out more than one loan?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING count(*)  >  1", "sub_ques": "names of customers who have taken out more than one loan", "sun_sql_new": "group by t1.cust_name having count loan more than 1"}
{"db_id": "loan_1", "sub_sql": "group by t1.cust_name having sum t2.amount > 5000", "question": "Find the name and account balance of the customers who have loans with a total amount of more than 5000.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.cust_name ,  T1.acc_bal FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000", "sub_ques": "the customers who have loans with a total amount of more than 5000", "sun_sql_new": "group by t1.cust_name having sum t2.amount more than 5000"}
{"db_id": "loan_1", "sub_sql": "group by t1.cust_name having sum t2.amount > 5000", "question": "What are the names and account balances for customers who have taken a total amount of more than 5000 in loans?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.cust_name ,  T1.acc_bal FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000", "sub_ques": "customers who have taken a total amount of more than 5000 in loans", "sun_sql_new": "group by t1.cust_name having sum t2.amount more than 5000"}
{"db_id": "loan_1", "sub_sql": "group by t1.bname order by sum t2.amount desc limit 1", "question": "Find the name of bank branch that provided the greatest total amount of loans.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by sum amount desc limit 1", "query": "SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1", "sub_ques": "the name of bank branch that provided the greatest total amount of loans", "sun_sql_new": "group by t1.bname order by sum t2.amount desc limit 1"}
{"db_id": "loan_1", "sub_sql": "group by t1.bname order by sum t2.amount desc limit 1", "question": "What is the name of the bank branch that has lent the greatest amount?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by sum amount desc limit 1", "query": "SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1", "sub_ques": "the name of the bank branch that has lent the greatest amount", "sun_sql_new": "group by t1.bname order by sum t2.amount desc limit 1"}
{"db_id": "loan_1", "sub_sql": "group by t2.bname order by sum t1.amount desc limit 1", "question": "Find the name of bank branch that provided the greatest total amount of loans to customers with credit score is less than 100.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by sum amount desc limit 1", "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1", "sub_ques": "the name of bank branch that provided the greatest total amount of loans", "sun_sql_new": "group by t2.bname order by sum t1.amount desc limit 1"}
{"db_id": "loan_1", "sub_sql": "group by t2.bname order by sum t1.amount desc limit 1", "question": "What is the name of the bank branch that has lended the largest total amount in loans, specifically to customers with credit scores below 100?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by sum amount desc limit 1", "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1", "sub_ques": "the name of the bank branch that has lended the largest total amount in loans", "sun_sql_new": "group by t2.bname order by sum t1.amount desc limit 1"}
{"db_id": "behavior_monitoring", "sub_sql": "group by t1.student_id order by count Assessment_Notes desc limit 1", "question": "Find the id and first name of the student that has the most number of assessment notes?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Assessment_Notes desc limit 1", "query": "SELECT T1.student_id ,  T2.first_name FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the student that has the most number of assessment notes", "sun_sql_new": "group by t1.student_id order by count Assessment_Notes desc limit 1"}
{"db_id": "behavior_monitoring", "sub_sql": "group by t1.teacher_id order by count Assessment_Notes desc limit 3", "question": "Find the ids and first names of the 3 teachers that have the most number of assessment notes?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Assessment_Notes desc limit 3", "query": "SELECT T1.teacher_id ,  T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 3", "sub_ques": "the 3 teachers that have the most number of assessment notes", "sun_sql_new": "group by t1.teacher_id order by count Assessment_Notes desc limit 3"}
{"db_id": "behavior_monitoring", "sub_sql": "group by t1.student_id order by count Behavior_Incident desc limit 1", "question": "Find the id and last name of the student that has the most behavior incidents?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Behavior_Incident desc limit 1", "query": "SELECT T1.student_id ,  T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the student that has the most behavior incidents", "sun_sql_new": "group by t1.student_id order by count Behavior_Incident desc limit 1"}
{"db_id": "behavior_monitoring", "sub_sql": "group by t1.teacher_id order by count Behavior_Incident desc limit 1", "question": "Find the id and last name of the teacher that has the most detentions with detention type code \\\\\\\\\\\\\\\"AFTER\\\\\\\\\\\\\\\"?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Behavior_Incident desc limit 1", "query": "SELECT T1.teacher_id ,  T2.last_name FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T1.detention_type_code  =  \\\\\\\\\\\\\\\"AFTER\\\\\\\\\\\\\\\" GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the teacher that has the most detentions", "sun_sql_new": "group by t1.teacher_id order by count Behavior_Incident desc limit 1"}
{"db_id": "behavior_monitoring", "sub_sql": "group by t1.student_id order by avg monthly_rental desc limit 1", "question": "What are the id and first name of the student whose addresses have the highest average monthly rental?", "sub_sql_type": "null null agg col col null null limv", "sub_sql_new": "order by avg monthly rental desc limit 1", "query": "SELECT T1.student_id ,  T2.first_name FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY AVG(monthly_rental) DESC LIMIT 1", "sub_ques": "the student whose addresses have the highest average monthly rental", "sun_sql_new": "group by t1.student_id order by avg monthly_rental desc limit 1"}
{"db_id": "behavior_monitoring", "sub_sql": "group by t2.address_id order by avg monthly_rental desc limit 1", "question": "Find the id and city of the student address with the highest average monthly rental.", "sub_sql_type": "null null agg col col null null limv", "sub_sql_new": "order by avg monthly rental desc limit 1", "query": "SELECT T2.address_id ,  T1.city FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id GROUP BY T2.address_id ORDER BY AVG(monthly_rental) DESC LIMIT 1", "sub_ques": "the student address with the highest average monthly rental", "sun_sql_new": "group by t2.address_id order by avg monthly_rental desc limit 1"}
{"db_id": "behavior_monitoring", "sub_sql": "group by t1.incident_type_code order by count Behavior_Incident desc limit 1", "question": "What are the code and description of the most frequent behavior incident type?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Behavior_Incident desc limit 1", "query": "SELECT T1.incident_type_code ,  T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code  =  T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "description of the most frequent behavior incident type", "sun_sql_new": "group by t1.incident_type_code order by count Behavior_Incident desc limit 1"}
{"db_id": "behavior_monitoring", "sub_sql": "group by t1.detention_type_code order by count Behavior_Incident asc limit 1", "question": "What are the code and description of the least frequent detention type ?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Behavior_Incident asc limit 1", "query": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1", "sub_ques": "description of the least frequent detention type", "sun_sql_new": "group by t1.detention_type_code order by count Behavior_Incident asc limit 1"}
{"db_id": "assets_maintenance", "sub_sql": "group by t1.engineer_id order by count Engineer_Visits desc limit 1", "question": "Which engineer has visited the most times? Show the engineer id, first name and last name.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Engineer_Visits desc limit 1", "query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "engineer has visited the most times", "sun_sql_new": "group by t1.engineer_id order by count Engineer_Visits desc limit 1"}
{"db_id": "assets_maintenance", "sub_sql": "group by t1.part_id having count Part_Faults > 2", "question": "Which parts have more than 2 faults? Show the part name and id.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.part_name ,  T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_id HAVING count(*)  >  2", "sub_ques": "parts have more than 2 faults", "sun_sql_new": "group by t1.part_id having count Part_Faults more than 2"}
{"db_id": "assets_maintenance", "sub_sql": "group by t1.fault_log_entry_id order by count Fault_Log desc limit 1", "question": "How many engineer visits are required at most for a single fault log? List the number and the log entry id.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Fault_Log desc limit 1", "query": "SELECT count(*) ,  T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "engineer visits are required at most for a single fault log", "sun_sql_new": "group by t1.fault_log_entry_id order by count Fault_Log desc limit 1"}
{"db_id": "assets_maintenance", "sub_sql": "group by t1.part_id order by count Part_Faults desc limit 1", "question": "Which part fault requires the most number of skills to fix? List part id and name.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Part_Faults desc limit 1", "query": "SELECT T1.part_id ,  T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id  =  T3.part_fault_id GROUP BY T1.part_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "part fault requires the most number of skills to fix ?", "sun_sql_new": "group by t1.part_id order by count Part_Faults desc limit 1"}
{"db_id": "assets_maintenance", "sub_sql": "group by t1.part_name order by count Part_Faults asc limit 1", "question": "Which kind of part has the least number of faults? List the part name.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Part_Faults asc limit 1", "query": "SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name ORDER BY count(*) ASC LIMIT 1", "sub_ques": "part has the least number of faults", "sun_sql_new": "group by t1.part_name order by count Part_Faults asc limit 1"}
{"db_id": "assets_maintenance", "sub_sql": "group by t1.engineer_id order by count Engineer_Visits asc limit 1", "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Engineer_Visits asc limit 1", "query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1", "sub_ques": "engineer makes the least number of visits", "sun_sql_new": "group by t1.engineer_id order by count Engineer_Visits asc limit 1"}
{"db_id": "assets_maintenance", "sub_sql": "group by t1.fault_log_entry_id order by count Fault_Log desc limit 1", "question": "Which fault log included the most number of faulty parts? List the fault log id, description and record time.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Fault_Log desc limit 1", "query": "SELECT T1.fault_log_entry_id ,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "fault log included the most number of faulty parts", "sun_sql_new": "group by t1.fault_log_entry_id order by count Fault_Log desc limit 1"}
{"db_id": "assets_maintenance", "sub_sql": "group by t1.skill_id order by count Skills_Required_To_Fix desc limit 1", "question": "Which skill is used in fixing the most number of faults? List the skill id and description.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Skills_Required_To_Fix desc limit 1", "query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "skill is used in fixing the most number of faults", "sun_sql_new": "group by t1.skill_id order by count Skills_Required_To_Fix desc limit 1"}
{"db_id": "assets_maintenance", "sub_sql": "group by gender order by count staff desc limit 1", "question": "Which gender makes up the majority of the staff?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count staff desc limit 1", "query": "SELECT gender FROM staff GROUP BY gender ORDER BY count(*) DESC LIMIT 1", "sub_ques": "gender makes up the majority of the staff", "sun_sql_new": "group by gender order by count staff desc limit 1"}
{"db_id": "station_weather", "sub_sql": "group by t2.train_id order by count route desc limit 1", "question": "Find the name of the train whose route runs through greatest number of stations.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count route desc limit 1", "query": "SELECT t1.name FROM train AS t1 JOIN route AS t2 ON t1.id  =  t2.train_id GROUP BY t2.train_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "train whose route runs through greatest number of stations", "sun_sql_new": "group by t2.train_id order by count route desc limit 1"}
{"db_id": "station_weather", "sub_sql": "group by t1.station_id order by avg high_temperature desc limit 1", "question": "Find the id and local authority of the station with has the highest average high temperature.", "sub_sql_type": "null null agg col col null null limv", "sub_sql_new": "order by avg high temperature desc limit 1", "query": "SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id ORDER BY avg(high_temperature) DESC LIMIT 1", "sub_ques": "the station with has the highest average high temperature", "sun_sql_new": "group by t1.station_id order by avg high_temperature desc limit 1"}
{"db_id": "station_weather", "sub_sql": "group by t1.station_id having max t1.precipitation > 50", "question": "Find the id and local authority of the station whose maximum precipitation is higher than 50.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id HAVING max(t1.precipitation)  >  50", "sub_ques": "the station whose maximum precipitation is higher than 50", "sun_sql_new": "group by t1.station_id having max t1.precipitation more than 50"}
{"db_id": "station_weather", "sub_sql": "group by origin having count train > 1", "question": "Find the origins from which more than 1 train starts.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT origin FROM train GROUP BY origin HAVING count(*)  >  1", "sub_ques": "origins from which more than 1 train starts", "sun_sql_new": "group by origin having count train more than 1"}
{"db_id": "college_1", "sub_sql": "group by school_code having count dept_name < 5", "question": "Find the number of different departments in each school whose number of different departments is less than 5.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5", "sub_ques": "school whose number of different departments is less than 5", "sun_sql_new": "group by school_code having count dept_name less than 5"}
{"db_id": "college_1", "sub_sql": "group by school_code having count dept_name < 5", "question": "How many different departments are there in each school that has less than 5 apartments?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5", "sub_ques": "school that has less than 5 apartments", "sun_sql_new": "group by school_code having count dept_name less than 5"}
{"db_id": "college_1", "sub_sql": "group by class_room having count class >= 2", "question": "Find the number of classes offered for all class rooms that held at least 2 classes.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT count(*) ,  class_room FROM CLASS GROUP BY class_room HAVING count(*)  >=  2", "sub_ques": "class rooms that held at least 2 classes", "sun_sql_new": "group by class_room having count class no less than 2"}
{"db_id": "college_1", "sub_sql": "group by class_room having count class >= 2", "question": "For each classroom with at least 2 classes, how many classes are offered?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT count(*) ,  class_room FROM CLASS GROUP BY class_room HAVING count(*)  >=  2", "sub_ques": "For each classroom with at least 2 classes", "sun_sql_new": "group by class_room having count class no less than 2"}
{"db_id": "college_1", "sub_sql": "group by emp_jobcode order by count employee desc limit 1", "question": "Find the count and code of the job has most employees.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count employee desc limit 1", "query": "SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1", "sub_ques": "code of the job has most employees", "sun_sql_new": "group by emp_jobcode order by count employee desc limit 1"}
{"db_id": "college_1", "sub_sql": "group by emp_jobcode order by count employee desc limit 1", "question": "What is the count and code of the job with the most employee?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count employee desc limit 1", "query": "SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1", "sub_ques": "code of the job with the most employee", "sun_sql_new": "group by emp_jobcode order by count employee desc limit 1"}
{"db_id": "college_1", "sub_sql": "group by t1.school_code order by count professor limit 1", "question": "Which school has the smallest amount of professors?", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count professor limit 1", "query": "SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code ORDER BY count(*) LIMIT 1", "sub_ques": "school has the smallest amount of professors", "sun_sql_new": "group by t1.school_code order by count professor limit 1"}
{"db_id": "college_1", "sub_sql": "group by t1.school_code order by count professor limit 1", "question": "Which school has the fewest professors?", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count professor limit 1", "query": "SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code ORDER BY count(*) LIMIT 1", "sub_ques": "school has the fewest professors", "sun_sql_new": "group by t1.school_code order by count professor limit 1"}
{"db_id": "college_1", "sub_sql": "group by t1.dept_code order by avg t1.stu_gpa desc limit 1", "question": "What is the name and the average gpa of department whose students have the highest average gpa?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by avg stu_gpa desc limit 1", "query": "SELECT T2.dept_name ,  avg(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY avg(T1.stu_gpa) DESC LIMIT 1", "sub_ques": "department whose students have the highest average gpa", "sun_sql_new": "group by t1.dept_code order by avg t1.stu_gpa desc limit 1"}
{"db_id": "college_1", "sub_sql": "group by t1.dept_code order by avg t1.stu_gpa desc limit 1", "question": "Which department has the highest average student GPA, and what is the average gpa?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by avg stu_gpa desc limit 1", "query": "SELECT T2.dept_name ,  avg(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY avg(T1.stu_gpa) DESC LIMIT 1", "sub_ques": "department has the highest average student gpa", "sun_sql_new": "group by t1.dept_code order by avg t1.stu_gpa desc limit 1"}
{"db_id": "college_1", "sub_sql": "group by t1.dept_code order by sum t1.crs_credit desc limit 1", "question": "Find the name of the department that offers the largest number of credits of all classes.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by sum crs_credit desc limit 1", "query": "SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T1.dept_code  =  T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1", "sub_ques": "the department that offers the largest number of credits", "sun_sql_new": "group by t1.dept_code order by sum t1.crs_credit desc limit 1"}
{"db_id": "college_1", "sub_sql": "group by t1.dept_code order by sum t1.crs_credit desc limit 1", "question": "Which department offers the most credits all together?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by sum crs_credit desc limit 1", "query": "SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T1.dept_code  =  T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1", "sub_ques": "department offers the most credits all together", "sun_sql_new": "group by t1.dept_code order by sum t1.crs_credit desc limit 1"}
{"db_id": "college_1", "sub_sql": "group by t3.dept_code order by count enroll desc limit 1", "question": "What is the name of the department that has the largest number of students enrolled?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count enroll desc limit 1", "query": "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "department that has the largest number of students enrolled", "sun_sql_new": "group by t3.dept_code order by count enroll desc limit 1"}
{"db_id": "college_1", "sub_sql": "group by t3.dept_code order by count enroll desc limit 1", "question": "What is the name of the department with the most students enrolled?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count enroll desc limit 1", "query": "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the department with the most students enrolled", "sun_sql_new": "group by t3.dept_code order by count enroll desc limit 1"}
{"db_id": "college_1", "sub_sql": "group by t1.dept_code order by count professor limit 1", "question": "What is the name of department where has the smallest number of professors?", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count professor limit 1", "query": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1", "sub_ques": "department where has the smallest number of professors", "sun_sql_new": "group by t1.dept_code order by count professor limit 1"}
{"db_id": "college_1", "sub_sql": "group by t1.dept_code order by count professor limit 1", "question": "What is the name of the department with the fewest professors?", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count professor limit 1", "query": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1", "sub_ques": "the department with the fewest professors", "sun_sql_new": "group by t1.dept_code order by count professor limit 1"}
{"db_id": "college_1", "sub_sql": "group by t1.dept_code order by count professor desc limit 1", "question": "What is the name of department where has the largest number of professors with a Ph.D. degree?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count professor desc limit 1", "query": "SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "department where has the largest number of professors", "sun_sql_new": "group by t1.dept_code order by count professor desc limit 1"}
{"db_id": "college_1", "sub_sql": "group by t1.dept_code order by count professor desc limit 1", "question": "Which department has the most professors with a Ph.D.?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count professor desc limit 1", "query": "SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "department has the most professors", "sun_sql_new": "group by t1.dept_code order by count professor desc limit 1"}
{"db_id": "college_1", "sub_sql": "group by t1.dept_code order by count student desc limit 1", "question": "Find the name and address of the department that has the highest number of students.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count student desc limit 1", "query": "SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the department that has the highest number of students", "sun_sql_new": "group by t1.dept_code order by count student desc limit 1"}
{"db_id": "college_1", "sub_sql": "group by t1.dept_code order by count student desc limit 1", "question": "What is the name and address of the department with the most students?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count student desc limit 1", "query": "SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the department with the most students", "sun_sql_new": "group by t1.dept_code order by count student desc limit 1"}
{"db_id": "college_1", "sub_sql": "group by t1.dept_code order by count student desc limit 3", "question": "Find the name, address, number of students in the departments that have the top 3 highest number of students.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count student desc limit 3", "query": "SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3", "sub_ques": "the departments that have the top 3 highest number of students", "sun_sql_new": "group by t1.dept_code order by count student desc limit 3"}
{"db_id": "college_1", "sub_sql": "group by t1.dept_code order by count student desc limit 3", "question": "What is the name, address, and number of students in the departments that have the 3 most students?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count student desc limit 3", "query": "SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3", "sub_ques": "the departments that have the 3 most students", "sun_sql_new": "group by t1.dept_code order by count student desc limit 3"}
{"db_id": "college_1", "sub_sql": "group by t1.prof_num having count class > 1", "question": "Find the first names of professors who are teaching more than one class.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num GROUP BY T1.prof_num HAVING count(*)  >  1", "sub_ques": "professors who are teaching more than one class", "sun_sql_new": "group by t1.prof_num having count class more than 1"}
{"db_id": "college_1", "sub_sql": "group by t1.prof_num having count class > 1", "question": "What are the first names of all professors who teach more than one class?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num GROUP BY T1.prof_num HAVING count(*)  >  1", "sub_ques": "professors who teach more than one class", "sun_sql_new": "group by t1.prof_num having count class more than 1"}
{"db_id": "college_1", "sub_sql": "group by t2.stu_num having count class = 1", "question": "Find the first names of students who took exactly one class.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num GROUP BY T2.stu_num HAVING count(*)  =  1", "sub_ques": "students who took exactly one class", "sun_sql_new": "group by t2.stu_num having count class equal to 1"}
{"db_id": "college_1", "sub_sql": "group by t2.stu_num having count enroll = 1", "question": "What are the first names of student who only took one course?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num GROUP BY T2.stu_num HAVING count(*)  =  1", "sub_ques": "student who only took one course", "sun_sql_new": "group by t2.stu_num having count enroll equal to 1"}
{"db_id": "sports_competition", "sub_sql": "group by name having avg points >= 20", "question": "List the position of players with average number of points scored by players of that position bigger than 20.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20", "sub_ques": "players with average number of points scored by players of that position bigger than 20", "sun_sql_new": "group by name having avg points no less than 20"}
{"db_id": "sports_competition", "sub_sql": "group by name having avg points >= 20", "question": "What are the positions of players whose average number of points scored by that position is larger than 20?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20", "sub_ques": "players whose average number of points scored by that position is larger than 20", "sun_sql_new": "group by name having avg points no less than 20"}
{"db_id": "sports_competition", "sub_sql": "group by competition_type order by count competition desc limit 1", "question": "List the most common type of competition.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count competition desc limit 1", "query": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the most common type of competition", "sun_sql_new": "group by competition_type order by count competition desc limit 1"}
{"db_id": "sports_competition", "sub_sql": "group by competition_type order by count competition desc limit 1", "question": "What is the most common competition type?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count competition desc limit 1", "query": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the most common competition type", "sun_sql_new": "group by competition_type order by count competition desc limit 1"}
{"db_id": "sports_competition", "sub_sql": "group by competition_type having count competition <= 5", "question": "List the types of competition that have at most five competitions of that type.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5", "sub_ques": "types of competition that have at most five competitions of that type", "sun_sql_new": "group by competition_type having count competition no more than 5"}
{"db_id": "sports_competition", "sub_sql": "group by competition_type having count competition <= 5", "question": "What are the types of competition that have most 5 competitions for that type?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5", "sub_ques": "types of competition that have most 5 competitions for that type", "sun_sql_new": "group by competition_type having count competition no more than 5"}
{"db_id": "sports_competition", "sub_sql": "group by country order by count competition desc limit 1", "question": "which country did participated in the most number of Tournament competitions?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count competition desc limit 1", "query": "SELECT country FROM competition WHERE competition_type  =  'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1", "sub_ques": "country did participated in the most number of competitions", "sun_sql_new": "group by country order by count competition desc limit 1"}
{"db_id": "sports_competition", "sub_sql": "group by country order by count competition desc limit 1", "question": "what is the name of the country that participated in the most tournament competitions?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count competition desc limit 1", "query": "SELECT country FROM competition WHERE competition_type  =  'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1", "sub_ques": "country that participated in the most competitions", "sun_sql_new": "group by country order by count competition desc limit 1"}
{"db_id": "hr_1", "sub_sql": "group by department_id having count commission_pct > 10", "question": "display those departments where more than ten employees work who got a commission percentage.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10", "sub_ques": "departments where more than ten employees work who got a commission percentage", "sun_sql_new": "group by department_id having count commission_pct more than 10"}
{"db_id": "hr_1", "sub_sql": "group by department_id having count commission_pct > 10", "question": "What are the department ids for which more than 10 employees had a commission?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10", "sub_ques": "department ids for which more than 10 employees had a commission", "sun_sql_new": "group by department_id having count commission_pct more than 10"}
{"db_id": "hr_1", "sub_sql": "group by employee_id having count job_history >= 2", "question": "display the ID for those employees who did two or more jobs in the past.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2", "sub_ques": "those employees who did two or more jobs in the past", "sun_sql_new": "group by employee_id having count job_history no less than 2"}
{"db_id": "hr_1", "sub_sql": "group by employee_id having count job_history >= 2", "question": "What are the employee ids for employees who have held two or more jobs?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2", "sub_ques": "employees who have held two or more jobs", "sun_sql_new": "group by employee_id having count job_history no less than 2"}
{"db_id": "hr_1", "sub_sql": "group by employee_id having count job_history >= 2", "question": "display the ID for those employees who did two or more jobs in the past.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2", "sub_ques": "employees who did two or more jobs in the past", "sun_sql_new": "group by employee_id having count job_history no less than 2"}
{"db_id": "hr_1", "sub_sql": "group by employee_id having count job_history >= 2", "question": "What are the employee ids for those who had two or more jobs.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2", "sub_ques": "employee ids for those who had two or more jobs", "sun_sql_new": "group by employee_id having count job_history no less than 2"}
{"db_id": "hr_1", "sub_sql": "group by job_id having avg salary > 8000", "question": "Find the job ID for those jobs which average salary is above 8000.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000", "sub_ques": "obs which average salary is above 8000", "sun_sql_new": "group by job_id having avg salary more than 8000"}
{"db_id": "hr_1", "sub_sql": "group by job_id having avg salary > 8000", "question": "What are the job ids corresponding to jobs with average salary above 8000?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000", "sub_ques": "jobs with average salary above 8000", "sun_sql_new": "group by job_id having avg salary more than 8000"}
{"db_id": "hr_1", "sub_sql": "group by department_id having count employees >= 2", "question": "display the department id and the total salary for those departments which contains at least two employees.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2", "sub_ques": "those departments which contains at least two employees", "sun_sql_new": "group by department_id having count employees no less than 2"}
{"db_id": "hr_1", "sub_sql": "group by department_id having count employees >= 2", "question": "What are total salaries and department id for each department that has more than 2 employees?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2", "sub_ques": "each department that has more than 2 employees", "sun_sql_new": "group by department_id having count employees no less than 2"}
{"db_id": "music_1", "sub_sql": "group by formats order by count files desc limit 1", "question": "What is the most popular file format?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count files desc limit 1", "query": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1", "sub_ques": "the most popular file format", "sun_sql_new": "group by formats order by count files desc limit 1"}
{"db_id": "music_1", "sub_sql": "group by formats order by count files desc limit 1", "question": "Find the file format that is used by the most files.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count files desc limit 1", "query": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1", "sub_ques": "the file format that is used by the most files", "sun_sql_new": "group by formats order by count files desc limit 1"}
{"db_id": "music_1", "sub_sql": "group by languages order by count song desc limit 1", "question": "What is the language used most often in the songs?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count song desc limit 1", "query": "SELECT languages FROM song GROUP BY languages ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the language used most often in the songs", "sun_sql_new": "group by languages order by count song desc limit 1"}
{"db_id": "music_1", "sub_sql": "group by languages order by count song desc limit 1", "question": "What are the languages that are used most often in songs?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count song desc limit 1", "query": "SELECT languages FROM song GROUP BY languages ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the languages that are used most often in songs", "sun_sql_new": "group by languages order by count song desc limit 1"}
{"db_id": "music_1", "sub_sql": "group by languages order by count song desc limit 1", "question": "What is the language that was used most often in songs with resolution above 500?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count song desc limit 1", "query": "SELECT languages FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the language that was used most often in songs", "sun_sql_new": "group by languages order by count song desc limit 1"}
{"db_id": "music_1", "sub_sql": "group by languages order by count song desc limit 1", "question": "What is the name of the artist, for each language, that has the most songs with a higher resolution than 500?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count song desc limit 1", "query": "SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1", "sub_ques": "language , that has the most songs", "sun_sql_new": "group by languages order by count song desc limit 1"}
{"db_id": "music_1", "sub_sql": "order by t2.languages", "question": "What are the maximum duration and resolution of all songs, for each language, ordered alphabetically by language?", "sub_sql_type": "null null col", "sub_sql_new": "order by languages", "query": "SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages", "sub_ques": "ordered alphabetically by language", "sun_sql_new": "order by t2.languages"}
{"db_id": "music_1", "sub_sql": "order by t2.genre_is", "question": "What are the shortest duration and lowest rating of songs grouped by genre and ordered by genre?", "sub_sql_type": "null null col col", "sub_sql_new": "order by genre is", "query": "SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is", "sub_ques": "ordered by genre", "sun_sql_new": "order by t2.genre_is"}
{"db_id": "music_1", "sub_sql": "order by t2.genre_is", "question": "What is the shortest and most poorly rated song for each genre, ordered alphabetically by genre?", "sub_sql_type": "null null col col", "sub_sql_new": "order by genre is", "query": "SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is", "sub_ques": "ordered alphabetically by genre", "sun_sql_new": "order by t2.genre_is"}
{"db_id": "music_1", "sub_sql": "group by t2.artist_name having count song >= 1", "question": "Find the names and number of works of all artists who have at least one English songs.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \\\\\\\\\\\\\\\"english\\\\\\\\\\\\\\\" GROUP BY T2.artist_name HAVING count(*)  >=  1", "sub_ques": "artists who have at least one songs", "sun_sql_new": "group by t2.artist_name having count song no less than 1"}
{"db_id": "music_1", "sub_sql": "group by t2.artist_name having count song >= 1", "question": "What are the names and number of works for all artists who have sung at least one song in English?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \\\\\\\\\\\\\\\"english\\\\\\\\\\\\\\\" GROUP BY T2.artist_name HAVING count(*)  >=  1", "sub_ques": "artists who have sung at least one song", "sun_sql_new": "group by t2.artist_name having count song no less than 1"}
{"db_id": "music_1", "sub_sql": "group by t2.artist_name having count song >= 1", "question": "Find the name and country of origin for all artists who have release at least one song of resolution above 900.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1", "sub_ques": "artists who have release at least one song", "sun_sql_new": "group by t2.artist_name having count song no less than 1"}
{"db_id": "music_1", "sub_sql": "group by t2.artist_name having count song >= 1", "question": "What is the name and country of origin for each artist who has released a song with a resolution higher than 900?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1", "sub_ques": "artist who has released a song", "sun_sql_new": "group by t2.artist_name having count song no less than 1"}
{"db_id": "music_1", "sub_sql": "group by t2.artist_name order by count song desc limit 3", "question": "Find the names and number of works of the three artists who have produced the most songs.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count song desc limit 3", "query": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3", "sub_ques": "the three artists who have produced the most songs", "sun_sql_new": "group by t2.artist_name order by count song desc limit 3"}
{"db_id": "music_1", "sub_sql": "group by t2.artist_name order by count song desc limit 3", "question": "What are the names of the three artists who have produced the most songs, and how many works did they produce?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count song desc limit 3", "query": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3", "sub_ques": "the three artists who have produced the most songs", "sun_sql_new": "group by t2.artist_name order by count song desc limit 3"}
{"db_id": "music_1", "sub_sql": "group by t2.artist_name order by count song limit 1", "question": "Find the country of origin for the artist who made the least number of songs?", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count song limit 1", "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1", "sub_ques": "the artist who made the least number of songs", "sun_sql_new": "group by t2.artist_name order by count song limit 1"}
{"db_id": "music_1", "sub_sql": "group by t2.artist_name order by count song limit 1", "question": "What country is the artist who made the fewest songs from?", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count song limit 1", "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1", "sub_ques": "artist who made the fewest songs from", "sun_sql_new": "group by t2.artist_name order by count song limit 1"}
{"db_id": "music_1", "sub_sql": "group by t2.artist_name order by count song desc limit 3", "question": "Find the top 3 artists who have the largest number of songs works whose language is Bangla.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count song desc limit 3", "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \\\\\\\\\\\\\\\"bangla\\\\\\\\\\\\\\\" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3", "sub_ques": "the top 3 artists who have the largest number of songs", "sun_sql_new": "group by t2.artist_name order by count song desc limit 3"}
{"db_id": "music_1", "sub_sql": "group by t2.artist_name order by count song desc limit 3", "question": "What are the top 3 artists with the largest number of songs in the language Bangla?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count song desc limit 3", "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \\\\\\\\\\\\\\\"bangla\\\\\\\\\\\\\\\" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3", "sub_ques": "the top 3 artists with the largest number of songs", "sun_sql_new": "group by t2.artist_name order by count song desc limit 3"}
{"db_id": "baseball_1", "sub_sql": "group by t1.college_id order by count player_college desc limit 1", "question": "what is the full name and id of the college with the largest number of baseball players?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count player_college desc limit 1", "query": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;", "sub_ques": "the college with the largest number of baseball players", "sun_sql_new": "group by t1.college_id order by count player_college desc limit 1"}
{"db_id": "baseball_1", "sub_sql": "group by t1.college_id order by count player_college desc limit 1", "question": "Find the full name and id of the college that has the most baseball players.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count player_college desc limit 1", "query": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;", "sub_ques": "the college that has the most baseball players", "sun_sql_new": "group by t1.college_id order by count player_college desc limit 1"}
{"db_id": "baseball_1", "sub_sql": "group by t1.player_id order by count all_star desc limit 1", "question": "What are the first name, last name and id of the player with the most all star game experiences? Also list the count.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count all_star desc limit 1", "query": "SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;", "sub_ques": "the player with the most all star game experiences", "sun_sql_new": "group by t1.player_id order by count all_star desc limit 1"}
{"db_id": "baseball_1", "sub_sql": "group by t1.player_id order by count all_star desc limit 1", "question": "Which player has the most all star game experiences? Give me the first name, last name and id of the player, as well as the number of times the player participated in all star game.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count all_star desc limit 1", "query": "SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;", "sub_ques": "player has the most all star game experiences", "sun_sql_new": "group by t1.player_id order by count all_star desc limit 1"}
{"db_id": "baseball_1", "sub_sql": "group by t1.team_id order by avg t1.attendance desc limit 1", "question": "In 2014, what are the id and rank of the team that has the largest average number of attendance?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by avg attendance desc limit 1", "query": "SELECT T2.team_id ,  T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id WHERE T1.year  =  2014 GROUP BY T1.team_id ORDER BY avg(T1.attendance) DESC LIMIT 1;", "sub_ques": "the team that has the largest average number of attendance", "sun_sql_new": "group by t1.team_id order by avg t1.attendance desc limit 1"}
{"db_id": "baseball_1", "sub_sql": "group by t1.team_id order by avg t1.attendance desc limit 1", "question": "Find the id and rank of the team that has the highest average attendance rate in 2014.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by avg attendance desc limit 1", "query": "SELECT T2.team_id ,  T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id WHERE T1.year  =  2014 GROUP BY T1.team_id ORDER BY avg(T1.attendance) DESC LIMIT 1;", "sub_ques": "the team that has the highest average attendance", "sun_sql_new": "group by t1.team_id order by avg t1.attendance desc limit 1"}
{"db_id": "baseball_1", "sub_sql": "group by t2.player_id order by count manager_award desc limit 1", "question": "What are the manager's first name, last name and id who won the most manager award?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count manager_award desc limit 1", "query": "SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;", "sub_ques": "who won the most manager award", "sun_sql_new": "group by t2.player_id order by count manager_award desc limit 1"}
{"db_id": "baseball_1", "sub_sql": "group by t2.player_id order by count manager_award desc limit 1", "question": "Which manager won the most manager award? Give me the manager's first name, last name and id.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count manager_award desc limit 1", "query": "SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;", "sub_ques": "manager won the most manager award", "sun_sql_new": "group by t2.player_id order by count manager_award desc limit 1"}
{"db_id": "baseball_1", "sub_sql": "group by t1.player_id order by count player_award desc limit 3", "question": "Which 3 players won the most player awards? List their full name and id.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count player_award desc limit 3", "query": "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;", "sub_ques": "3 players won the most player awards", "sun_sql_new": "group by t1.player_id order by count player_award desc limit 3"}
{"db_id": "baseball_1", "sub_sql": "group by t1.player_id order by count player_award desc limit 3", "question": "Find the first name, last name and id for the top three players won the most player awards.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count player_award desc limit 3", "query": "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;", "sub_ques": "the top three players won the most player won the most player awards", "sun_sql_new": "group by t1.player_id order by count player_award desc limit 3"}
{"db_id": "baseball_1", "sub_sql": "group by birth_country order by count player asc limit 3", "question": "List three countries which are the origins of the least players.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count player asc limit 3", "query": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;", "sub_ques": "three countries which are the origins of the least players", "sun_sql_new": "group by birth_country order by count player asc limit 3"}
{"db_id": "baseball_1", "sub_sql": "group by birth_country order by count player asc limit 3", "question": "What are the three countries that the least players are from?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count player asc limit 3", "query": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;", "sub_ques": "the three countries that the least players are from", "sun_sql_new": "group by birth_country order by count player asc limit 3"}
{"db_id": "baseball_1", "sub_sql": "group by t1.team_id order by avg t2.salary asc limit 1", "question": "What are the name and id of the team offering the lowest average salary?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by avg salary asc limit 1", "query": "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;", "sub_ques": "the team offering the lowest average salary", "sun_sql_new": "group by t1.team_id order by avg t2.salary asc limit 1"}
{"db_id": "baseball_1", "sub_sql": "group by t1.team_id order by avg t2.salary asc limit 1", "question": "Which team offers the lowest average salary? Give me the name and id of the team.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by avg salary asc limit 1", "query": "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;", "sub_ques": "team offers the lowest average salary", "sun_sql_new": "group by t1.team_id order by avg t2.salary asc limit 1"}
{"db_id": "baseball_1", "sub_sql": "group by t1.team_id_winner order by count postseason desc limit 1", "question": "What are the name and id of the team with the most victories in 2008 postseason?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count postseason desc limit 1", "query": "SELECT T2.name ,  T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T1.year  =  2008 GROUP BY T1.team_id_winner ORDER BY count(*) DESC LIMIT 1;", "sub_ques": "the team with the most victories postseason", "sun_sql_new": "group by t1.team_id_winner order by count postseason desc limit 1"}
{"db_id": "baseball_1", "sub_sql": "group by t1.team_id_winner order by count postseason desc limit 1", "question": "Find the name and id of the team that won the most times in 2008 postseason.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count postseason desc limit 1", "query": "SELECT T2.name ,  T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T1.year  =  2008 GROUP BY T1.team_id_winner ORDER BY count(*) DESC LIMIT 1;", "sub_ques": "the team that won the most times in postseason", "sun_sql_new": "group by t1.team_id_winner order by count postseason desc limit 1"}
{"db_id": "baseball_1", "sub_sql": "group by yearid order by count hall_of_fame asc limit 1", "question": "In which year did the least people enter hall of fame?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count hall_of_fame asc limit 1", "query": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;", "sub_ques": "year did the least people enter hall of fame", "sun_sql_new": "group by yearid order by count hall_of_fame asc limit 1"}
{"db_id": "baseball_1", "sub_sql": "group by yearid order by count hall_of_fame asc limit 1", "question": "Find the year in which the least people enter hall of fame.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count hall_of_fame asc limit 1", "query": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;", "sub_ques": "the year in which the least people enter hall of fame", "sun_sql_new": "group by yearid order by count hall_of_fame asc limit 1"}
{"db_id": "baseball_1", "sub_sql": "group by state having count park > 2", "question": "List the names of states that have more than 2 parks.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT state FROM park GROUP BY state HAVING count(*)  >  2;", "sub_ques": "states that have more than 2 parks", "sun_sql_new": "group by state having count park more than 2"}
{"db_id": "baseball_1", "sub_sql": "group by state having count park > 2", "question": "Which states have more than 2 parks?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT state FROM park GROUP BY state HAVING count(*)  >  2;", "sub_ques": "states have more than 2 parks", "sun_sql_new": "group by state having count park more than 2"}
{"db_id": "baseball_1", "sub_sql": "group by city having count park between 2 and 4", "question": "Which cities have 2 to 4 parks?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT city FROM park GROUP BY city HAVING count(*) BETWEEN 2 AND 4;", "sub_ques": "cities have 2 to 4 parks", "sun_sql_new": "group by city having count park between 2 and 4"}
{"db_id": "baseball_1", "sub_sql": "group by city having count park between 2 and 4", "question": "Find all the cities that have 2 to 4 parks.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT city FROM park GROUP BY city HAVING count(*) BETWEEN 2 AND 4;", "sub_ques": "cities that have 2 to 4 parks", "sun_sql_new": "group by city having count park between 2 and 4"}
{"db_id": "mountain_photos", "sub_sql": "group by t1.id having count photos >= 2", "question": "What are the id and name of the mountains that have at least 2 photos?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id GROUP BY T1.id HAVING count(*)  >=  2", "sub_ques": "the mountains that have at least 2 photos", "sun_sql_new": "group by t1.id having count photos no less than 2"}
{"db_id": "mountain_photos", "sub_sql": "group by t2.id order by count photos desc limit 1", "question": "What are the names of the cameras that have taken picture of the most mountains?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count photos desc limit 1", "query": "SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "cameras that have taken picture of the most mountains", "sun_sql_new": "group by t2.id order by count photos desc limit 1"}
{"db_id": "program_share", "sub_sql": "group by t2.program_id order by count broadcast desc limit 1", "question": "Find the name of the program that is broadcast most frequently.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count broadcast desc limit 1", "query": "SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id GROUP BY t2.program_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the program that is broadcast most frequently", "sun_sql_new": "group by t2.program_id order by count broadcast desc limit 1"}
{"db_id": "program_share", "sub_sql": "group by t2.program_id order by count broadcast desc limit 1", "question": "Which program is broadcast most frequently? Give me the program name.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count broadcast desc limit 1", "query": "SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id GROUP BY t2.program_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "program is broadcast most frequently", "sun_sql_new": "group by t2.program_id order by count broadcast desc limit 1"}
{"db_id": "e_learning", "sub_sql": "group by test_result order by count Student_Tests_Taken desc", "question": "List each test result and its count in descending order of count.", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count Student_Tests_Taken desc", "query": "SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC", "sub_ques": "result in descending order of count", "sun_sql_new": "group by test_result order by count Student_Tests_Taken desc"}
{"db_id": "e_learning", "sub_sql": "group by t2.author_id order by count Courses desc limit 1", "question": "Find the personal name, family name, and author ID of the course author that teaches the most courses.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Courses desc limit 1", "query": "SELECT T1.personal_name ,  T1.family_name ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the course author that teaches the most courses", "sun_sql_new": "group by t2.author_id order by count Courses desc limit 1"}
{"db_id": "e_learning", "sub_sql": "group by t2.author_id order by count Courses desc limit 1", "question": "What are the personal name, family name, and author ID of the course author who teaches the most courses?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Courses desc limit 1", "query": "SELECT T1.personal_name ,  T1.family_name ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the course author who teaches the most courses", "sun_sql_new": "group by t2.author_id order by count Courses desc limit 1"}
{"db_id": "e_learning", "sub_sql": "group by t2.author_id having count courses >= 2", "question": "Find the addresses and author IDs of the course authors that teach at least two courses.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2", "sub_ques": "the course authors that teach at least two courses", "sun_sql_new": "group by t2.author_id having count courses no less than 2"}
{"db_id": "e_learning", "sub_sql": "group by t2.author_id having count courses >= 2", "question": "Which course authors teach two or more courses? Give me their addresses and author IDs.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2", "sub_ques": "course authors teach two or more courses", "sun_sql_new": "group by t2.author_id having count courses no less than 2"}
{"db_id": "e_learning", "sub_sql": "group by t1.subject_id order by count Subjects asc", "question": "Find the subject ID, name of subject and the corresponding number of courses for each subject, and sort by the course count in ascending order.", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count Subjects asc", "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC", "sub_ques": "sort by the course count in ascending order", "sun_sql_new": "group by t1.subject_id order by count Subjects asc"}
{"db_id": "e_learning", "sub_sql": "group by t1.subject_id order by count Subjects asc", "question": "List the subject ID, name of subject and the number of courses available for each subject in ascending order of the course counts.", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count Subjects asc", "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC", "sub_ques": "each subject in ascending order of the course counts", "sun_sql_new": "group by t1.subject_id order by count Subjects asc"}
{"db_id": "e_learning", "sub_sql": "group by t1.course_name order by count Student_Course_Enrolment desc limit 1", "question": "What is the name of the course that has the most student enrollment?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Student_Course_Enrolment desc limit 1", "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the course that has the most student enrollment", "sun_sql_new": "group by t1.course_name order by count Student_Course_Enrolment desc limit 1"}
{"db_id": "e_learning", "sub_sql": "group by t1.course_name order by count Student_Course_Enrolment desc limit 1", "question": "Which course is enrolled in by the most students? Give me the course name.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Student_Course_Enrolment desc limit 1", "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "course is enrolled in by the most students", "sun_sql_new": "group by t1.course_name order by count Student_Course_Enrolment desc limit 1"}
{"db_id": "e_learning", "sub_sql": "group by t1.course_name having count Student_Course_Enrolment = 1", "question": "What are the names of the courses that have exactly 1 student enrollment?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  =  1", "sub_ques": "names of the courses that have exactly 1 student enrollment", "sun_sql_new": "group by t1.course_name having count Student_Course_Enrolment equal to 1"}
{"db_id": "e_learning", "sub_sql": "group by t1.course_name having count Student_Course_Enrolment = 1", "question": "Find the names of the courses that have just one student enrollment.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  =  1", "sub_ques": "names of the courses that have just one student enrollment", "sun_sql_new": "group by t1.course_name having count Student_Course_Enrolment equal to 1"}
{"db_id": "e_learning", "sub_sql": "group by t1.course_name having count Student_Course_Enrolment > 2", "question": "What are the descriptions and names of the courses that have student enrollment bigger than 2?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2", "sub_ques": "names of the courses that have student enrollment bigger than 2", "sun_sql_new": "group by t1.course_name having count Student_Course_Enrolment more than 2"}
{"db_id": "e_learning", "sub_sql": "group by t1.course_name having count Student_Course_Enrolment > 2", "question": "Return the descriptions and names of the courses that have more than two students enrolled in.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2", "sub_ques": "names of the courses that have more than two students enrolled in", "sun_sql_new": "group by t1.course_name having count Student_Course_Enrolment more than 2"}
{"db_id": "e_learning", "sub_sql": "group by t1.student_id order by count Student_Course_Enrolment desc limit 1", "question": "Find the student ID and login name of the student with the most course enrollments", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Student_Course_Enrolment desc limit 1", "query": "SELECT T1.student_id ,  T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the student with the most course enrollments", "sun_sql_new": "group by t1.student_id order by count Student_Course_Enrolment desc limit 1"}
{"db_id": "e_learning", "sub_sql": "group by t1.student_id order by count Student_Course_Enrolment desc limit 1", "question": "What are the student ID and login name of the student who are enrolled in the most courses?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Student_Course_Enrolment desc limit 1", "query": "SELECT T1.student_id ,  T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the student who are enrolled in the most courses", "sun_sql_new": "group by t1.student_id order by count Student_Course_Enrolment desc limit 1"}
{"db_id": "e_learning", "sub_sql": "group by t1.student_id having count Student_Course_Enrolment >= 2", "question": "Find the student ID and personal name of the student with at least two enrollments.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.student_id ,  T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  >=  2", "sub_ques": "the student with at least two enrollments", "sun_sql_new": "group by t1.student_id having count Student_Course_Enrolment no less than 2"}
{"db_id": "e_learning", "sub_sql": "group by t1.student_id having count Student_Course_Enrolment >= 2", "question": "Which student are enrolled in at least two courses? Give me the student ID and personal name.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.student_id ,  T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  >=  2", "sub_ques": "student are enrolled in at least two courses", "sun_sql_new": "group by t1.student_id having count Student_Course_Enrolment no less than 2"}
{"db_id": "e_learning", "sub_sql": "group by t1.student_id having count Student_Course_Enrolment <= 2", "question": "Find the student ID and middle name for all the students with at most two enrollments.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2", "sub_ques": "the students with at most two enrollments", "sun_sql_new": "group by t1.student_id having count Student_Course_Enrolment no more than 2"}
{"db_id": "e_learning", "sub_sql": "group by t1.student_id having count Student_Course_Enrolment <= 2", "question": "What are the student IDs and middle names of the students enrolled in at most two courses?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2", "sub_ques": "the students enrolled in at most two courses", "sun_sql_new": "group by t1.student_id having count Student_Course_Enrolment no more than 2"}
{"db_id": "insurance_policies", "sub_sql": "group by t1.claim_id order by count Settlements desc limit 1", "question": "Which claim incurred the most number of settlements? List the claim id, the date the claim was made, and the number.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Settlements desc limit 1", "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "claim incurred the most number of settlements", "sun_sql_new": "group by t1.claim_id order by count Settlements desc limit 1"}
{"db_id": "insurance_policies", "sub_sql": "group by t1.claim_id order by count Settlements desc limit 1", "question": "Find the claim id and claim date of the claim that incurred the most settlement count. Also tell me the count.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Settlements desc limit 1", "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the claim that incurred the most settlement count", "sun_sql_new": "group by t1.claim_id order by count Settlements desc limit 1"}
{"db_id": "insurance_policies", "sub_sql": "group by t1.claim_id order by t1.date_claim_settled desc limit 1", "question": "How many settlements were made on the claim with the most recent claim settlement date? List the number and the claim id.", "sub_sql_type": "null null col null null limv", "sub_sql_new": "order by date_claim_settled desc limit 1", "query": "SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1", "sub_ques": "the claim with the most recent claim settlement date ?", "sun_sql_new": "group by t1.claim_id order by t1.date_claim_settled desc limit 1"}
{"db_id": "insurance_policies", "sub_sql": "group by t1.claim_id order by t1.date_claim_settled desc limit 1", "question": "Find the claim id and the number of settlements made for the claim with the most recent settlement date.", "sub_sql_type": "null null col null null limv", "sub_sql_new": "order by date_claim_settled desc limit 1", "query": "SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1", "sub_ques": "the claim with the most recent settlement date", "sun_sql_new": "group by t1.claim_id order by t1.date_claim_settled desc limit 1"}
{"db_id": "insurance_policies", "sub_sql": "group by t1.customer_id having count Customer_Policies > 1", "question": "Who are the customers that had more than 1 policy? List the customer details and id.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1", "sub_ques": "customers that had more than 1 policy ?", "sun_sql_new": "group by t1.customer_id having count Customer_Policies more than 1"}
{"db_id": "insurance_policies", "sub_sql": "group by t1.customer_id having count Customer_Policies > 1", "question": "Find the the customer details and id for the customers who had more than one policy.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1", "sub_ques": "the customers who had more than one policy", "sun_sql_new": "group by t1.customer_id having count Customer_Policies more than 1"}
{"db_id": "insurance_policies", "sub_sql": "group by payment_method_code order by count Payments desc limit 1", "question": "What is the most popular payment method?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Payments desc limit 1", "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the most popular payment method", "sun_sql_new": "group by payment_method_code order by count Payments desc limit 1"}
{"db_id": "insurance_policies", "sub_sql": "group by payment_method_code order by count Payments desc limit 1", "question": "Which payment method is used the most often?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Payments desc limit 1", "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "payment method is used the most", "sun_sql_new": "group by payment_method_code order by count Payments desc limit 1"}
{"db_id": "insurance_policies", "sub_sql": "group by payment_method_code order by count Payments asc limit 1", "question": "With which kind of payment method were the least number of payments processed?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Payments asc limit 1", "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1", "sub_ques": "payment method were the least number of payments", "sun_sql_new": "group by payment_method_code order by count Payments asc limit 1"}
{"db_id": "insurance_policies", "sub_sql": "group by payment_method_code order by count Payments asc limit 1", "question": "What is the payment method that were used the least often?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Payments asc limit 1", "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1", "sub_ques": "the payment method that were used the least often", "sun_sql_new": "group by payment_method_code order by count Payments asc limit 1"}
{"db_id": "insurance_policies", "sub_sql": "group by policy_type_code order by count Customer_Policies desc limit 1", "question": "Which kind of policy type was chosen by the most customers?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Customer_Policies desc limit 1", "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "policy type was chosen by the most customers", "sun_sql_new": "group by policy_type_code order by count Customer_Policies desc limit 1"}
{"db_id": "insurance_policies", "sub_sql": "group by policy_type_code order by count Customer_Policies desc limit 1", "question": "Find the policy type the most customers choose.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Customer_Policies desc limit 1", "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the policy type the most customers choose", "sun_sql_new": "group by policy_type_code order by count Customer_Policies desc limit 1"}
{"db_id": "insurance_policies", "sub_sql": "group by t1.claim_id having count Settlements = 1", "question": "List the date the claim was made, the date it was settled and the amount settled for all the claims which had exactly one settlement.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.claim_id HAVING count(*)  =  1", "sub_ques": "the claims which had exactly one settlement", "sun_sql_new": "group by t1.claim_id having count Settlements equal to 1"}
{"db_id": "insurance_policies", "sub_sql": "group by t1.claim_id having count Settlements = 1", "question": "Which claims had exactly one settlement? For each, tell me the the date the claim was made, the date it was settled and the amount settled.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.claim_id HAVING count(*)  =  1", "sub_ques": "claims had exactly one settlement", "sun_sql_new": "group by t1.claim_id having count Settlements equal to 1"}
{"db_id": "hospital_1", "sub_sql": "group by departmentid order by count departmentid desc limit 1", "question": "Which department has the largest number of employees?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count departmentid desc limit 1", "query": "SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;", "sub_ques": "department has the largest number of employees", "sun_sql_new": "group by departmentid order by count departmentid desc limit 1"}
{"db_id": "hospital_1", "sub_sql": "group by departmentid order by count departmentid desc limit 1", "question": "Find the department with the most employees.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count departmentid desc limit 1", "query": "SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;", "sub_ques": "the department with the most employees", "sun_sql_new": "group by departmentid order by count departmentid desc limit 1"}
{"db_id": "hospital_1", "sub_sql": "group by departmentid order by count departmentid limit 1", "question": "What is the employee id of the head whose department has the least number of employees?", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count departmentid limit 1", "query": "SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;", "sub_ques": "department has the least number of employees", "sun_sql_new": "group by departmentid order by count departmentid limit 1"}
{"db_id": "hospital_1", "sub_sql": "group by departmentid order by count departmentid limit 1", "question": "Tell me the employee id of the head of the department with the least employees.", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count departmentid limit 1", "query": "SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;", "sub_ques": "the department with the least employees", "sun_sql_new": "group by departmentid order by count departmentid limit 1"}
{"db_id": "hospital_1", "sub_sql": "group by departmentid order by count departmentid limit 1", "question": "what is the name and position of the head whose department has least number of employees?", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count departmentid limit 1", "query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;", "sub_ques": "department has least number of employees", "sun_sql_new": "group by departmentid order by count departmentid limit 1"}
{"db_id": "hospital_1", "sub_sql": "group by departmentid order by count departmentid limit 1", "question": "Find the name and position of the head of the department with the least employees.", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count departmentid limit 1", "query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;", "sub_ques": "the department with the least employees", "sun_sql_new": "group by departmentid order by count departmentid limit 1"}
{"db_id": "hospital_1", "sub_sql": "group by t1.patient having count appointment > 1", "question": "what are name and phone number of patients who had more than one appointment?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1", "sub_ques": "patients who had more than one appointment", "sun_sql_new": "group by t1.patient having count appointment more than 1"}
{"db_id": "hospital_1", "sub_sql": "group by t1.patient having count appointment > 1", "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1", "sub_ques": "patients made more than one appointment", "sun_sql_new": "group by t1.patient having count appointment more than 1"}
{"db_id": "hospital_1", "sub_sql": "group by t1.employeeid order by count appointment desc limit 1", "question": "What is the name of the nurse has the most appointments?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count appointment desc limit 1", "query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the nurse has the most appointments", "sun_sql_new": "group by t1.employeeid order by count appointment desc limit 1"}
{"db_id": "hospital_1", "sub_sql": "group by t1.employeeid order by count appointment desc limit 1", "question": "Find the name of the nurse who has the largest number of appointments.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count appointment desc limit 1", "query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1", "sub_ques": "nurse who the largest number of appointments", "sun_sql_new": "group by t1.employeeid order by count appointment desc limit 1"}
{"db_id": "hospital_1", "sub_sql": "group by t1.employeeid having count patient > 1", "question": "Find the name of physicians who are in charge of more than one patient.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1", "sub_ques": "physicians who are in charge of more than one patient", "sun_sql_new": "group by t1.employeeid having count patient more than 1"}
{"db_id": "hospital_1", "sub_sql": "group by t1.employeeid having count patient > 1", "question": "Which physicians are in charge of more than one patient? Give me their names.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1", "sub_ques": "physicians are in charge of more than one patient", "sun_sql_new": "group by t1.employeeid having count patient more than 1"}
{"db_id": "ship_mission", "sub_sql": "group by type order by count ship desc limit 1", "question": "Please show the most common type of ships.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count ship desc limit 1", "query": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the most common type of ships", "sun_sql_new": "group by type order by count ship desc limit 1"}
{"db_id": "ship_mission", "sub_sql": "group by type order by count ship desc limit 1", "question": "What is the most common type of ships?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count ship desc limit 1", "query": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the most common type of ships", "sun_sql_new": "group by type order by count ship desc limit 1"}
{"db_id": "ship_mission", "sub_sql": "group by nationality having count ship > 2", "question": "List the nations that have more than two ships.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2", "sub_ques": "nations that have more than two ships", "sun_sql_new": "group by nationality having count ship more than 2"}
{"db_id": "ship_mission", "sub_sql": "group by nationality having count ship > 2", "question": "What are the nations that have more than two ships?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2", "sub_ques": "nations that have more than two ships", "sun_sql_new": "group by nationality having count ship more than 2"}
{"db_id": "student_1", "sub_sql": "group by classroom order by count students desc limit 1", "question": "Which classroom has the most students?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count students desc limit 1", "query": "SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1", "sub_ques": "classroom has the most students", "sun_sql_new": "group by classroom order by count students desc limit 1"}
{"db_id": "student_1", "sub_sql": "group by classroom order by count students desc limit 1", "question": "Find the classroom that the most students use.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count students desc limit 1", "query": "SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the classroom that the most students use", "sun_sql_new": "group by classroom order by count students desc limit 1"}
{"db_id": "company_employee", "sub_sql": "group by headquarters order by count company desc limit 1", "question": "Show the most common headquarter for companies.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count company desc limit 1", "query": "SELECT Headquarters FROM company GROUP BY Headquarters ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the most common headquarter for companies", "sun_sql_new": "group by headquarters order by count company desc limit 1"}
{"db_id": "company_employee", "sub_sql": "group by headquarters having count company >= 2", "question": "Show the headquarters that have at least two companies.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT(*)  >=  2", "sub_ques": "headquarters that have at least two companies", "sun_sql_new": "group by headquarters having count company no less than 2"}
{"db_id": "film_rank", "sub_sql": "group by studio order by count film desc limit 1", "question": "List the name of film studio that have the most number of films.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count film desc limit 1", "query": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "studio that have the most number of films", "sun_sql_new": "group by studio order by count film desc limit 1"}
{"db_id": "film_rank", "sub_sql": "group by studio order by count film desc limit 1", "question": "What is the name of teh studio that created the most films?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count film desc limit 1", "query": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "studio that created the most films", "sun_sql_new": "group by studio order by count film desc limit 1"}
{"db_id": "film_rank", "sub_sql": "group by studio having count film >= 2", "question": "List the names of studios that have at least two films.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Studio FROM film GROUP BY Studio HAVING COUNT(*)  >=  2", "sub_ques": "studios that have at least two films", "sun_sql_new": "group by studio having count film no less than 2"}
{"db_id": "film_rank", "sub_sql": "group by studio having count film >= 2", "question": "What are the names of studios that have made two or more films?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Studio FROM film GROUP BY Studio HAVING COUNT(*)  >=  2", "sub_ques": "studios that have made two or more films", "sun_sql_new": "group by studio having count film no less than 2"}
{"db_id": "film_rank", "sub_sql": "group by studio having avg gross_in_dollar >= 4500000", "question": "List the studios which average gross is above 4500000.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Studio FROM film GROUP BY Studio HAVING avg(Gross_in_dollar)  >=  4500000", "sub_ques": "studios which average gross is above 4500000", "sun_sql_new": "group by studio having avg gross_in_dollar no less than 4500000"}
{"db_id": "film_rank", "sub_sql": "group by studio having avg gross_in_dollar >= 4500000", "question": "Which studios have an average gross of over 4500000?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Studio FROM film GROUP BY Studio HAVING avg(Gross_in_dollar)  >=  4500000", "sub_ques": "studios have an average gross of over 4500000", "sun_sql_new": "group by studio having avg gross_in_dollar no less than 4500000"}
{"db_id": "cre_Doc_Tracking_DB", "sub_sql": "group by role_code order by count employees desc limit 1", "question": "What is the role code with the largest number of employees?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count employees desc limit 1", "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the role code with the largest number of employees", "sun_sql_new": "group by role_code order by count employees desc limit 1"}
{"db_id": "cre_Doc_Tracking_DB", "sub_sql": "group by role_code order by count employees desc limit 1", "question": "Find the code of the role that have the most employees.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count employees desc limit 1", "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the code of the role that have the most employees", "sun_sql_new": "group by role_code order by count employees desc limit 1"}
{"db_id": "cre_Doc_Tracking_DB", "sub_sql": "group by role_code having count employees >= 3", "question": "Show all role codes with at least 3 employees.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT role_code FROM Employees GROUP BY role_code HAVING count(*)  >=  3", "sub_ques": "role codes with at least 3 employees", "sun_sql_new": "group by role_code having count employees no less than 3"}
{"db_id": "cre_Doc_Tracking_DB", "sub_sql": "group by role_code having count employees >= 3", "question": "What are the roles with three or more employees? Give me the role codes.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT role_code FROM Employees GROUP BY role_code HAVING count(*)  >=  3", "sub_ques": "the roles with three or more employees", "sun_sql_new": "group by role_code having count employees no less than 3"}
{"db_id": "cre_Doc_Tracking_DB", "sub_sql": "group by role_code order by count employees asc limit 1", "question": "Show the role code with the least employees.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count employees asc limit 1", "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) ASC LIMIT 1", "sub_ques": "the role code with the least employees", "sun_sql_new": "group by role_code order by count employees asc limit 1"}
{"db_id": "cre_Doc_Tracking_DB", "sub_sql": "group by role_code order by count employees asc limit 1", "question": "What is the role with the smallest number of employees? Find the role codes.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count employees asc limit 1", "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) ASC LIMIT 1", "sub_ques": "the role with the smallest number of employees", "sun_sql_new": "group by role_code order by count employees asc limit 1"}
{"db_id": "cre_Doc_Tracking_DB", "sub_sql": "group by location_code order by count Document_locations desc limit 1", "question": "What is the location code with the most documents?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Document_locations desc limit 1", "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the location code with the most documents", "sun_sql_new": "group by location_code order by count Document_locations desc limit 1"}
{"db_id": "cre_Doc_Tracking_DB", "sub_sql": "group by location_code order by count Document_locations desc limit 1", "question": "Find the code of the location with the largest number of documents.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Document_locations desc limit 1", "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the code of the location with the largest number of documents", "sun_sql_new": "group by location_code order by count Document_locations desc limit 1"}
{"db_id": "cre_Doc_Tracking_DB", "sub_sql": "group by location_code having count Document_locations >= 3", "question": "Show the location codes with at least 3 documents.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3", "sub_ques": "location codes with at least 3 documents", "sun_sql_new": "group by location_code having count Document_locations no less than 3"}
{"db_id": "cre_Doc_Tracking_DB", "sub_sql": "group by location_code having count Document_locations >= 3", "question": "What are the codes of the locations with at least three documents?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3", "sub_ques": "codes of the locations with at least three documents", "sun_sql_new": "group by location_code having count Document_locations no less than 3"}
{"db_id": "cre_Doc_Tracking_DB", "sub_sql": "group by t1.location_code order by count Document_locations asc limit 1", "question": "Show the location name and code with the least documents.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Document_locations asc limit 1", "query": "SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code  =  T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1", "sub_ques": "code with the least documents", "sun_sql_new": "group by t1.location_code order by count Document_locations asc limit 1"}
{"db_id": "cre_Doc_Tracking_DB", "sub_sql": "group by t1.location_code order by count Document_locations asc limit 1", "question": "What are the name and code of the location with the smallest number of documents?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Document_locations asc limit 1", "query": "SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code  =  T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1", "sub_ques": "code of the location with the smallest number of documents", "sun_sql_new": "group by t1.location_code order by count Document_locations asc limit 1"}
{"db_id": "club_1", "sub_sql": "group by t1.clubname order by count member_of_club desc limit 1", "question": "Which club has the most members majoring in \\\\\\\\\\\\\\\"600\\\\\\\\\\\\\\\"?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count member_of_club desc limit 1", "query": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.major  =  \\\\\\\\\\\\\\\"600\\\\\\\\\\\\\\\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1", "sub_ques": "club has the most members", "sun_sql_new": "group by t1.clubname order by count member_of_club desc limit 1"}
{"db_id": "club_1", "sub_sql": "group by t1.clubname order by count member_of_club desc limit 1", "question": "Find the club which has the largest number of members majoring in \\\\\\\\\\\\\\\"600\\\\\\\\\\\\\\\".", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count member_of_club desc limit 1", "query": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.major  =  \\\\\\\\\\\\\\\"600\\\\\\\\\\\\\\\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the club which has the largest number of members", "sun_sql_new": "group by t1.clubname order by count member_of_club desc limit 1"}
{"db_id": "club_1", "sub_sql": "group by t1.clubname order by count member_of_club desc limit 1", "question": "Find the name of the club that has the most female students.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count member_of_club desc limit 1", "query": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.sex  =  \\\\\\\\\\\\\\\"F\\\\\\\\\\\\\\\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the name of the club that has the most students", "sun_sql_new": "group by t1.clubname order by count member_of_club desc limit 1"}
{"db_id": "club_1", "sub_sql": "group by t1.clubname order by count member_of_club desc limit 1", "question": "Which club has the most female students as their members? Give me the name of the club.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count member_of_club desc limit 1", "query": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.sex  =  \\\\\\\\\\\\\\\"F\\\\\\\\\\\\\\\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1", "sub_ques": "club has the most students as their members", "sun_sql_new": "group by t1.clubname order by count member_of_club desc limit 1"}
{"db_id": "tracking_grants_for_research", "sub_sql": "group by t2.organisation_id having sum t1.grant_amount > 6000", "question": "What are the ids and details for all organizations that have grants of more than 6000 dollars?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.organisation_id ,  T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount)  >  6000", "sub_ques": "organizations that have grants of more than 6000 dollars", "sun_sql_new": "group by t2.organisation_id having sum t1.grant_amount more than 6000"}
{"db_id": "tracking_grants_for_research", "sub_sql": "group by t1.organisation_id order by count Research_Staff desc limit 1", "question": "What is the organisation type and id of the organisation which has the most number of research staff?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Research_Staff desc limit 1", "query": "SELECT T1.organisation_type ,  T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the organisation which has the most number of research staff", "sun_sql_new": "group by t1.organisation_id order by count Research_Staff desc limit 1"}
{"db_id": "tracking_grants_for_research", "sub_sql": "group by t1.organisation_id order by count Research_Staff desc limit 1", "question": "What is the type and id of the organization that has the most research staff?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Research_Staff desc limit 1", "query": "SELECT T1.organisation_type ,  T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the organization that has the most research staff", "sun_sql_new": "group by t1.organisation_id order by count Research_Staff desc limit 1"}
{"db_id": "tracking_grants_for_research", "sub_sql": "group by t1.organisation_type order by count Research_Staff desc limit 1", "question": "Which organisation type hires most research staff?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Research_Staff desc limit 1", "query": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1", "sub_ques": "organisation type hires most research staff", "sun_sql_new": "group by t1.organisation_type order by count Research_Staff desc limit 1"}
{"db_id": "tracking_grants_for_research", "sub_sql": "group by t1.organisation_type order by count Research_Staff desc limit 1", "question": "What is the type of the organization with the most research staff?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Research_Staff desc limit 1", "query": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the type of the organization with the most research staff", "sun_sql_new": "group by t1.organisation_type order by count Research_Staff desc limit 1"}
{"db_id": "tracking_grants_for_research", "sub_sql": "group by t1.project_id order by count Project_outcomes desc limit 1", "question": "Which project made the most number of outcomes? List the project details and the project id.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Project_outcomes desc limit 1", "query": "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "project made the most number of outcomes", "sun_sql_new": "group by t1.project_id order by count Project_outcomes desc limit 1"}
{"db_id": "tracking_grants_for_research", "sub_sql": "group by t1.project_id order by count Project_outcomes desc limit 1", "question": "What are the details and id of the project with the most outcomes?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Project_outcomes desc limit 1", "query": "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the project with the most outcomes", "sun_sql_new": "group by t1.project_id order by count Project_outcomes desc limit 1"}
{"db_id": "tracking_grants_for_research", "sub_sql": "group by t1.organisation_id order by count Research_Staff desc limit 1", "question": "Which organisation hired the most number of research staff? List the organisation id, type and detail.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Research_Staff desc limit 1", "query": "SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "organisation hired the most number of research staff", "sun_sql_new": "group by t1.organisation_id order by count Research_Staff desc limit 1"}
{"db_id": "tracking_grants_for_research", "sub_sql": "group by t1.organisation_id order by count Research_Staff desc limit 1", "question": "What are the ids, types, and details of the organization with the most research staff?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Research_Staff desc limit 1", "query": "SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the organization with the most research staff", "sun_sql_new": "group by t1.organisation_id order by count Research_Staff desc limit 1"}
{"db_id": "tracking_grants_for_research", "sub_sql": "group by t2.staff_id order by count Project_Staff desc limit 1", "question": "Show the role description and the id of the project staff involved in most number of project outcomes?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Project_Staff desc limit 1", "query": "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "project staff involved in most number of project outcomes", "sun_sql_new": "group by t2.staff_id order by count Project_Staff desc limit 1"}
{"db_id": "tracking_grants_for_research", "sub_sql": "group by t2.staff_id order by count Staff_Roles desc limit 1", "question": "For each staff id, what is the description of the role that is involved with the most number of projects?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Staff_Roles desc limit 1", "query": "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the role that is involved with the most number of projects", "sun_sql_new": "group by t2.staff_id order by count Staff_Roles desc limit 1"}
{"db_id": "tracking_grants_for_research", "sub_sql": "group by grant_id order by count Documents desc limit 1", "question": "How many documents can one grant have at most? List the grant id and number.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Documents desc limit 1", "query": "SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "documents can one grant have at most", "sun_sql_new": "group by grant_id order by count Documents desc limit 1"}
{"db_id": "tracking_grants_for_research", "sub_sql": "group by grant_id order by count Documents desc limit 1", "question": "For each grant id, how many documents does it have, and which one has the most?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Documents desc limit 1", "query": "SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "grant id which one has the most", "sun_sql_new": "group by grant_id order by count Documents desc limit 1"}
{"db_id": "tracking_grants_for_research", "sub_sql": "group by t1.organisation_id order by count Project_outcomes desc limit 1", "question": "List the organisation id with the maximum outcome count, and the count.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Project_outcomes desc limit 1", "query": "SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the organisation id with the maximum outcome count", "sun_sql_new": "group by t1.organisation_id order by count Project_outcomes desc limit 1"}
{"db_id": "tracking_grants_for_research", "sub_sql": "group by t1.organisation_id order by count Project_outcomes desc limit 1", "question": "What is the id of the organization with the maximum number of outcomes and how many outcomes are there?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Project_outcomes desc limit 1", "query": "SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the organization with the maximum number of outcomes", "sun_sql_new": "group by t1.organisation_id order by count Project_outcomes desc limit 1"}
{"db_id": "tracking_grants_for_research", "sub_sql": "group by organisation_id order by count Projects desc limit 1", "question": "What are the details for the projects which were launched by the organization with the most projects?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Projects desc limit 1", "query": "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )", "sub_ques": "the organization with the most projects", "sun_sql_new": "group by organisation_id order by count Projects desc limit 1"}
{"db_id": "tracking_grants_for_research", "sub_sql": "group by role_code order by count Project_Staff desc limit 1", "question": "Which role is most common for the staff?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Project_Staff desc limit 1", "query": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "role is most common for the staff", "sun_sql_new": "group by role_code order by count Project_Staff desc limit 1"}
{"db_id": "tracking_grants_for_research", "sub_sql": "group by role_code order by count Project_Staff desc limit 1", "question": "What is the most common role for the staff?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Project_Staff desc limit 1", "query": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the most common role for the staff", "sun_sql_new": "group by role_code order by count Project_Staff desc limit 1"}
{"db_id": "network_2", "sub_sql": "group by name having count PersonFriend = 1", "question": "Find the person who has exactly one friend.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1", "sub_ques": "person who has exactly one friend", "sun_sql_new": "group by name having count PersonFriend equal to 1"}
{"db_id": "network_2", "sub_sql": "group by name having count PersonFriend = 1", "question": "What are the names of everybody who has exactly one friend?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1", "sub_ques": "everybody who has exactly one friend", "sun_sql_new": "group by name having count PersonFriend equal to 1"}
{"db_id": "network_2", "sub_sql": "group by t2.name order by avg t1.age desc limit 1", "question": "Which person whose friends have the oldest average age?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by avg age desc limit 1", "query": "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1", "sub_ques": "person whose friends have the oldest average age", "sun_sql_new": "group by t2.name order by avg t1.age desc limit 1"}
{"db_id": "network_2", "sub_sql": "group by t2.name order by avg t1.age desc limit 1", "question": "What is the name of the person who has the oldest average age for their friends, and what is that average age?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by avg age desc limit 1", "query": "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1", "sub_ques": "the name of the person who has the oldest average age for their friends", "sun_sql_new": "group by t2.name order by avg t1.age desc limit 1"}
{"db_id": "decoration_competition", "sub_sql": "group by country order by count member desc limit 1", "question": "Show the most common country across members.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count member desc limit 1", "query": "SELECT Country FROM member GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the most common country across members", "sun_sql_new": "group by country order by count member desc limit 1"}
{"db_id": "decoration_competition", "sub_sql": "group by country having count member > 2", "question": "Which countries have more than two members?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Country FROM member GROUP BY Country HAVING COUNT(*)  >  2", "sub_ques": "countries have more than two members", "sun_sql_new": "group by country having count member more than 2"}
{"db_id": "document_management", "sub_sql": "group by document_type_code having count documents > 4", "question": "Find the types of documents with more than 4 documents.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4", "sub_ques": "types of documents with more than 4 documents", "sun_sql_new": "group by document_type_code having count documents more than 4"}
{"db_id": "document_management", "sub_sql": "group by document_type_code having count documents > 4", "question": "What are the codes of types of documents of which there are for or more?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4", "sub_ques": "codes of types of documents of which there are for or more", "sun_sql_new": "group by document_type_code having count documents more than 4"}
{"db_id": "document_management", "sub_sql": "group by document_type_code order by count documents desc limit 1", "question": "Find the total access count of all documents in the most popular document type.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count documents desc limit 1", "query": "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the most popular document type", "sun_sql_new": "group by document_type_code order by count documents desc limit 1"}
{"db_id": "document_management", "sub_sql": "group by document_type_code order by count documents desc limit 1", "question": "What is the total access count of documents that are of the most common document type?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count documents desc limit 1", "query": "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the most common document type", "sun_sql_new": "group by document_type_code order by count documents desc limit 1"}
{"db_id": "document_management", "sub_sql": "group by t1.document_structure_code order by count documents desc limit 1", "question": "What is the structure of the document with the least number of accesses?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count documents desc limit 1", "query": "SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code  =  t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "structure of the document with the least number of accesses", "sun_sql_new": "group by t1.document_structure_code order by count documents desc limit 1"}
{"db_id": "document_management", "sub_sql": "group by t1.document_structure_code order by count documents desc limit 1", "question": "Return the structure description of the document that has been accessed the fewest number of times.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count documents desc limit 1", "query": "SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code  =  t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the document that has been accessed the fewest number of times", "sun_sql_new": "group by t1.document_structure_code order by count documents desc limit 1"}
{"db_id": "document_management", "sub_sql": "group by document_type_code having sum access_count > 10000", "question": "What document types do have more than 10000 total access number.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum(access_count)  >  10000", "sub_ques": "document types do have more than 10000 total access number", "sun_sql_new": "group by document_type_code having sum access_count more than 10000"}
{"db_id": "document_management", "sub_sql": "group by document_type_code having sum access_count > 10000", "question": "Return the codes of the document types that do not have a total access count of over 10000.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum(access_count)  >  10000", "sub_ques": "codes of the document types that do not have a total access count of over 10000", "sun_sql_new": "group by document_type_code having sum access_count more than 10000"}
{"db_id": "document_management", "sub_sql": "group by role_code order by count users desc limit 1", "question": "List all the username and passwords of users with the most popular role.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count users desc limit 1", "query": "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "users with the most popular role", "sun_sql_new": "group by role_code order by count users desc limit 1"}
{"db_id": "document_management", "sub_sql": "group by role_code order by count users desc limit 1", "question": "What are the usernames and passwords of users that have the most common role?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count users desc limit 1", "query": "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "users that have the most common role", "sun_sql_new": "group by role_code order by count users desc limit 1"}
{"db_id": "document_management", "sub_sql": "group by t1.document_code order by count documents desc limit 1", "question": "What is the name of the document with the most number of sections?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count documents desc limit 1", "query": "SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the document with the most number of sections", "sun_sql_new": "group by t1.document_code order by count documents desc limit 1"}
{"db_id": "document_management", "sub_sql": "group by t1.document_code order by count documents desc limit 1", "question": "Return the name of the document that has the most sections.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count documents desc limit 1", "query": "SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the document that has the most sections", "sun_sql_new": "group by t1.document_code order by count documents desc limit 1"}
{"db_id": "document_management", "sub_sql": "group by role_code order by count users desc limit 1", "question": "Find the description of the most popular role among the users that have logged in.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count users desc limit 1", "query": "SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1)", "sub_ques": "the most popular role among the users", "sun_sql_new": "group by role_code order by count users desc limit 1"}
{"db_id": "document_management", "sub_sql": "group by role_code order by count users desc limit 1", "question": "What is the description of the most popular role among users that have logged in?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count users desc limit 1", "query": "SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1)", "sub_ques": "the most popular role among users", "sun_sql_new": "group by role_code order by count users desc limit 1"}
{"db_id": "document_management", "sub_sql": "group by document_structure_code order by count documents asc limit 1", "question": "Find the average access count of documents with the least popular structure.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count documents asc limit 1", "query": "SELECT avg(access_count) FROM documents GROUP BY document_structure_code ORDER BY count(*) ASC LIMIT 1", "sub_ques": "documents with the least popular structure", "sun_sql_new": "group by document_structure_code order by count documents asc limit 1"}
{"db_id": "document_management", "sub_sql": "group by document_structure_code order by count documents asc limit 1", "question": "What is the average access count of documents that have the least common structure?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count documents asc limit 1", "query": "SELECT avg(access_count) FROM documents GROUP BY document_structure_code ORDER BY count(*) ASC LIMIT 1", "sub_ques": "documents that have the least common structure", "sun_sql_new": "group by document_structure_code order by count documents asc limit 1"}
{"db_id": "document_management", "sub_sql": "group by document_type_code having count documents > 2", "question": "What document types have more than 2 corresponding documents?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2", "sub_ques": "document types have more than 2 corresponding documents", "sun_sql_new": "group by document_type_code having count documents more than 2"}
{"db_id": "document_management", "sub_sql": "group by document_type_code having count documents > 2", "question": "Give the codes of document types that have more than 2 corresponding documents.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2", "sub_ques": "codes of document types that have more than 2 corresponding documents", "sun_sql_new": "group by document_type_code having count documents more than 2"}
{"db_id": "company_office", "sub_sql": "group by t1.building_id having count Office_locations > 1", "question": "Show the names of the buildings that have more than one company offices.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1", "sub_ques": "buildings that have more than one company offices", "sun_sql_new": "group by t1.building_id having count Office_locations more than 1"}
{"db_id": "company_office", "sub_sql": "group by t1.building_id having count Office_locations > 1", "question": "Which buildings have more than one company offices? Give me the building names.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1", "sub_ques": "buildings have more than one company offices", "sun_sql_new": "group by t1.building_id having count Office_locations more than 1"}
{"db_id": "company_office", "sub_sql": "group by t1.building_id order by count Office_locations desc limit 1", "question": "Show the name of the building that has the most company offices.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Office_locations desc limit 1", "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the building that has the most company offices", "sun_sql_new": "group by t1.building_id order by count Office_locations desc limit 1"}
{"db_id": "company_office", "sub_sql": "group by t1.building_id order by count Office_locations desc limit 1", "question": "Which building has the largest number of company offices? Give me the building name.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Office_locations desc limit 1", "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "building has the largest number of company offices", "sun_sql_new": "group by t1.building_id order by count Office_locations desc limit 1"}
{"db_id": "company_office", "sub_sql": "group by industry order by count Companies desc", "question": "Please show the industries of companies in descending order of the number of companies.", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count Companies desc", "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC", "sub_ques": "the industries of companies in descending order of the number of companies", "sun_sql_new": "group by industry order by count Companies desc"}
{"db_id": "company_office", "sub_sql": "group by industry order by count Companies desc", "question": "Sort all the industries in descending order of the count of companies in each industry", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count Companies desc", "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC", "sub_ques": "the industries in descending order of the count of companies in each industry", "sun_sql_new": "group by industry order by count Companies desc"}
{"db_id": "company_office", "sub_sql": "group by industry order by count Companies desc limit 1", "question": "List the industry shared by the most companies.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Companies desc limit 1", "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the industry shared by the most companies", "sun_sql_new": "group by industry order by count Companies desc limit 1"}
{"db_id": "company_office", "sub_sql": "group by industry order by count Companies desc limit 1", "question": "Which industry has the most companies?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Companies desc limit 1", "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "industry has the most companies", "sun_sql_new": "group by industry order by count Companies desc limit 1"}
{"db_id": "company_office", "sub_sql": "group by headquarters having count Companies > 2", "question": "Show the headquarters shared by more than two companies.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*)  >  2", "sub_ques": "headquarters shared by more than two companies", "sun_sql_new": "group by headquarters having count Companies more than 2"}
{"db_id": "company_office", "sub_sql": "group by headquarters having count Companies > 2", "question": "Which headquarter locations are used by more than 2 companies?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*)  >  2", "sub_ques": "headquarter locations are used by more than 2 companies", "sun_sql_new": "group by headquarters having count Companies more than 2"}
{"db_id": "solvency_ii", "sub_sql": "group by product_type_code order by count Products desc limit 1", "question": "Show the most common type code across products.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Products desc limit 1", "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the most common type code across products", "sun_sql_new": "group by product_type_code order by count Products desc limit 1"}
{"db_id": "solvency_ii", "sub_sql": "group by product_type_code having count Products >= 2", "question": "Show the product type codes that have at least two products.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT(*)  >=  2", "sub_ques": "product type codes that have at least two products", "sun_sql_new": "group by product_type_code having count Products no less than 2"}
{"db_id": "solvency_ii", "sub_sql": "group by t1.product_name having count Products_in_Events >= 2", "question": "Show the names of products that are in at least two events.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2", "sub_ques": "names of products that are in at least two events", "sun_sql_new": "group by t1.product_name having count Products_in_Events no less than 2"}
{"db_id": "solvency_ii", "sub_sql": "group by t1.product_name having count Products_in_Events >= 2", "question": "Show the names of products that are in at least two events in ascending alphabetical order of product name.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2 ORDER BY T1.Product_Name", "sub_ques": "names of products that are in at least two events", "sun_sql_new": "group by t1.product_name having count Products_in_Events no less than 2"}
{"db_id": "entertainment_awards", "sub_sql": "group by t1.festival_id having count nomination >= 2", "question": "Show the ids and names of festivals that have at least two nominations for artworks.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.Festival_ID ,  T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID GROUP BY T1.Festival_ID HAVING COUNT(*)  >=  2", "sub_ques": "festivals that have at least two nominations", "sun_sql_new": "group by t1.festival_id having count nomination no less than 2"}
{"db_id": "entertainment_awards", "sub_sql": "group by type order by count artwork desc limit 1", "question": "List the most common type of artworks.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count artwork desc limit 1", "query": "SELECT TYPE FROM artwork GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the most common type of artworks", "sun_sql_new": "group by type order by count artwork desc limit 1"}
{"db_id": "entertainment_awards", "sub_sql": "group by year having count festival_detail > 1", "question": "List the year in which there are more than one festivals.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT YEAR FROM festival_detail GROUP BY YEAR HAVING COUNT(*)  >  1", "sub_ques": "year in which there are more than one festivals", "sun_sql_new": "group by year having count festival_detail more than 1"}
{"db_id": "customers_campaigns_ecommerce", "sub_sql": "group by t1.customer_id having count mailshot_customers >= 2", "question": "Show the names of customers who have at least 2 mailshots with outcome code 'Order'.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE outcome_code  =  'Order' GROUP BY T1.customer_id HAVING count(*)  >=  2", "sub_ques": "customers who have at least 2 mailshots", "sun_sql_new": "group by t1.customer_id having count mailshot_customers no less than 2"}
{"db_id": "customers_campaigns_ecommerce", "sub_sql": "group by t1.customer_id order by count mailshot_customers desc limit 1", "question": "Show the names of customers who have the most mailshots.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count mailshot_customers desc limit 1", "query": "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "customers who have the most mailshots", "sun_sql_new": "group by t1.customer_id order by count mailshot_customers desc limit 1"}
{"db_id": "college_3", "sub_sql": "group by t2.dno order by count MINOR_IN desc limit 1", "question": "Find the name of the department that has the biggest number of students minored in?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count MINOR_IN desc limit 1", "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) DESC LIMIT 1", "sub_ques": "department that has the biggest number of students minored in", "sun_sql_new": "group by t2.dno order by count MINOR_IN desc limit 1"}
{"db_id": "college_3", "sub_sql": "group by t2.dno order by count MINOR_IN desc limit 1", "question": "What is the name of the department with the most students minoring in it?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count MINOR_IN desc limit 1", "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the department with the most students minoring in it", "sun_sql_new": "group by t2.dno order by count MINOR_IN desc limit 1"}
{"db_id": "college_3", "sub_sql": "group by t2.dno order by count MEMBER_OF asc limit 1", "question": "Find the name of the department that has the fewest members.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count MEMBER_OF asc limit 1", "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) ASC LIMIT 1", "sub_ques": "the department that has the fewest members", "sun_sql_new": "group by t2.dno order by count MEMBER_OF asc limit 1"}
{"db_id": "college_3", "sub_sql": "group by t2.dno order by count MEMBER_OF asc limit 1", "question": "What is the name of the department with the fewest members?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count MEMBER_OF asc limit 1", "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) ASC LIMIT 1", "sub_ques": "the department with the fewest members", "sun_sql_new": "group by t2.dno order by count MEMBER_OF asc limit 1"}
{"db_id": "college_3", "sub_sql": "group by rank order by count FACULTY asc limit 1", "question": "Find the rank of the faculty that the fewest faculties belong to.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count FACULTY asc limit 1", "query": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1", "sub_ques": "the rank of the faculty that the fewest faculties belong to", "sun_sql_new": "group by rank order by count FACULTY asc limit 1"}
{"db_id": "college_3", "sub_sql": "group by rank order by count FACULTY asc limit 1", "question": "What is the least common faculty rank?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count FACULTY asc limit 1", "query": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1", "sub_ques": "the least common faculty rank", "sun_sql_new": "group by rank order by count FACULTY asc limit 1"}
{"db_id": "college_3", "sub_sql": "group by t1.instructor order by count COURSE desc limit 3", "question": "What are the first and last names of the instructors who teach the top 3 number of courses?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count COURSE desc limit 3", "query": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3", "sub_ques": "the instructors who teach the top 3 number of courses", "sun_sql_new": "group by t1.instructor order by count COURSE desc limit 3"}
{"db_id": "college_3", "sub_sql": "group by t1.instructor order by count COURSE desc limit 3", "question": "What are the full names of the 3 instructors who teach the most courses?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count COURSE desc limit 3", "query": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3", "sub_ques": "the 3 instructors who teach the most courses", "sun_sql_new": "group by t1.instructor order by count COURSE desc limit 3"}
{"db_id": "college_3", "sub_sql": "group by t1.instructor order by count COURSE desc limit 1", "question": "Which building does the instructor who teaches the most number of courses live in?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count COURSE desc limit 1", "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the instructor who teaches the most number of courses", "sun_sql_new": "group by t1.instructor order by count COURSE desc limit 1"}
{"db_id": "college_3", "sub_sql": "group by t1.instructor order by count COURSE desc limit 1", "question": "Give the building that the instructor who teaches the greatest number of courses lives in.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count COURSE desc limit 1", "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the instructor who teaches the greatest number of courses", "sun_sql_new": "group by t1.instructor order by count COURSE desc limit 1"}
{"db_id": "college_3", "sub_sql": "group by t2.cid having count ENROLLED_IN >= 5", "question": "What are the name of courses that have at least five enrollments?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5", "sub_ques": "courses that have at least five enrollments", "sun_sql_new": "group by t2.cid having count ENROLLED_IN no less than 5"}
{"db_id": "college_3", "sub_sql": "group by t2.cid having count ENROLLED_IN >= 5", "question": "Give the names of the courses with at least five enrollments.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5", "sub_ques": "the courses with at least five enrollments", "sun_sql_new": "group by t2.cid having count ENROLLED_IN no less than 5"}
{"db_id": "department_store", "sub_sql": "group by product_id order by count order_items desc limit 1", "question": "What is the id of the product that was ordered the most often?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count order_items desc limit 1", "query": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the id of the product that was ordered the most often", "sun_sql_new": "group by product_id order by count order_items desc limit 1"}
{"db_id": "department_store", "sub_sql": "group by product_id order by count order_items desc limit 1", "question": "Give the product id for the product that was ordered most frequently.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count order_items desc limit 1", "query": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the product id for the product that was ordered most frequently", "sun_sql_new": "group by product_id order by count order_items desc limit 1"}
{"db_id": "department_store", "sub_sql": "group by t2.customer_id order by count customer_orders desc limit 1", "question": "What are the name, phone number and email address of the customer who made the largest number of orders?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count customer_orders desc limit 1", "query": "SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the customer who made the largest number of orders", "sun_sql_new": "group by t2.customer_id order by count customer_orders desc limit 1"}
{"db_id": "department_store", "sub_sql": "group by t2.customer_id order by count customer_orders desc limit 1", "question": "Return the name, phone number and email address for the customer with the most orders.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count customer_orders desc limit 1", "query": "SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the customer with the most orders", "sun_sql_new": "group by t2.customer_id order by count customer_orders desc limit 1"}
{"db_id": "department_store", "sub_sql": "group by dept_store_chain_id order by count * desc limit 2", "question": "What are the ids of the two department store chains with the largest number of department stores?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count * desc limit 2", "query": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2", "sub_ques": "the ids of the two department store chains with the largest number of department stores", "sun_sql_new": "group by dept_store_chain_id order by count * desc limit 2"}
{"db_id": "department_store", "sub_sql": "group by dept_store_chain_id order by count department_stores desc limit 2", "question": "Return the ids of the two department store chains with the most department stores.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count department_stores desc limit 2", "query": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2", "sub_ques": "the two department store chains with the most department stores", "sun_sql_new": "group by dept_store_chain_id order by count department_stores desc limit 2"}
{"db_id": "department_store", "sub_sql": "group by department_id order by count staff_department_assignments limit 1", "question": "What is the id of the department with the least number of staff?", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count staff_department_assignments limit 1", "query": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1", "sub_ques": "the id of the department with the least number of staff", "sun_sql_new": "group by department_id order by count staff_department_assignments limit 1"}
{"db_id": "department_store", "sub_sql": "group by department_id order by count staff_department_assignments limit 1", "question": "Return the id of the department with the fewest staff assignments.", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count staff_department_assignments limit 1", "query": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1", "sub_ques": "the id of the department with the fewest staff assignments", "sun_sql_new": "group by department_id order by count staff_department_assignments limit 1"}
{"db_id": "department_store", "sub_sql": "group by product_type_code having avg product_price > select avg product_price", "question": "Find the product type whose average price is higher than the average price of all products.", "sub_sql_type": "null agg col col", "sub_sql_new": "select avg product price", "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)", "sub_ques": "product type whose average price is higher than the average price of all products", "sun_sql_new": "group by product_type_code having avg product_price more than select avg product_price"}
{"db_id": "department_store", "sub_sql": "group by product_type_code having avg product_price > select avg product_price", "question": "What is the code of the product type with an average price higher than the average price of all products?", "sub_sql_type": "null agg col col", "sub_sql_new": "select avg product price", "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)", "sub_ques": "the product type with an average price higher than the average price of all products", "sun_sql_new": "group by product_type_code having avg product_price more than select avg product_price"}
{"db_id": "department_store", "sub_sql": "group by t2.staff_id having count staff_department_assignments > 1", "question": "List the name of staff who has been assigned multiple jobs.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1", "sub_ques": "staff who has been assigned multiple jobs", "sun_sql_new": "group by t2.staff_id having count staff_department_assignments more than 1"}
{"db_id": "department_store", "sub_sql": "group by t2.staff_id having count staff_department_assignments > 1", "question": "What are the names of staff who have been assigned multiple jobs?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1", "sub_ques": "staff who have been assigned multiple jobs", "sun_sql_new": "group by t2.staff_id having count staff_department_assignments more than 1"}
{"db_id": "department_store", "sub_sql": "group by supplier_id having avg total_amount_purchased > 50000", "question": "Find the id of suppliers whose average amount purchased for each product is above 50000 or below 30000.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000", "sub_ques": "id of suppliers whose average amount purchased for each product is above 50000", "sun_sql_new": "group by supplier_id having avg total_amount_purchased more than 50000"}
{"db_id": "department_store", "sub_sql": "group by supplier_id having avg total_amount_purchased > 50000", "question": "What are the ids of suppliers which have an average amount purchased of above 50000 or below 30000?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000", "sub_ques": "ids of suppliers which have an average amount purchased of above 50000", "sun_sql_new": "group by supplier_id having avg total_amount_purchased more than 50000"}
{"db_id": "department_store", "sub_sql": "group by supplier_id order by count Product_Suppliers desc limit 1", "question": "What are the average amount purchased and value purchased for the supplier who supplies the most products.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Product_Suppliers desc limit 1", "query": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)", "sub_ques": "the supplier who supplies the most products", "sun_sql_new": "group by supplier_id order by count Product_Suppliers desc limit 1"}
{"db_id": "department_store", "sub_sql": "group by supplier_id order by count Product_Suppliers desc limit 1", "question": "Return the average total amount purchased and total value purchased for the supplier who supplies the greatest number of products.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Product_Suppliers desc limit 1", "query": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)", "sub_ques": "the supplier who supplies the greatest number of products", "sun_sql_new": "group by supplier_id order by count Product_Suppliers desc limit 1"}
{"db_id": "department_store", "sub_sql": "order by product_type_code", "question": "What are the highest and lowest prices of products, grouped by and alphabetically ordered by product type?", "sub_sql_type": "null null col col col", "sub_sql_new": "order by product type code", "query": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code", "sub_ques": "alphabetically ordered by product type", "sun_sql_new": "order by product_type_code"}
{"db_id": "department_store", "sub_sql": "order by product_type_code", "question": "Give the maximum and minimum product prices for each product type, grouped and ordered by product type.", "sub_sql_type": "null null col col col", "sub_sql_new": "order by product type code", "query": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code", "sub_ques": "ordered by product type", "sun_sql_new": "order by product_type_code"}
{"db_id": "department_store", "sub_sql": "group by t3.product_id having count t1.customer_id >= 2", "question": "Find the names of products that were bought by at least two distinct customers.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2", "sub_ques": "products that were bought by at least two distinct customers", "sun_sql_new": "group by t3.product_id having count t1.customer_id no less than 2"}
{"db_id": "department_store", "sub_sql": "group by t3.product_id having count t1.customer_id >= 2", "question": "What are the distinct names of products purchased by at least two different customers?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2", "sub_ques": "products purchased by at least two different customers", "sun_sql_new": "group by t3.product_id having count t1.customer_id no less than 2"}
{"db_id": "department_store", "sub_sql": "group by t1.customer_id having count t3.product_id >= 3", "question": "Find the names of customers who have bought by at least three distinct products.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3", "sub_ques": "customers who have bought by at least three distinct products", "sun_sql_new": "group by t1.customer_id having count t3.product_id no less than 3"}
{"db_id": "department_store", "sub_sql": "group by t1.customer_id having count t3.product_id >= 3", "question": "What are the distinct names of customers who have purchased at least three different products?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3", "sub_ques": "customers who have purchased at least three different products", "sun_sql_new": "group by t1.customer_id having count t3.product_id no less than 3"}
{"db_id": "aircraft", "sub_sql": "group by t2.winning_aircraft order by count match desc limit 1", "question": "List the name of the aircraft that has been named winning aircraft the most number of times.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count match desc limit 1", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "winning aircraft the most number of times", "sun_sql_new": "group by t2.winning_aircraft order by count match desc limit 1"}
{"db_id": "aircraft", "sub_sql": "group by t2.winning_aircraft order by count match desc limit 1", "question": "What is the name of the aircraft that has won an award the most?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count match desc limit 1", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "aircraft that has won an award the most", "sun_sql_new": "group by t2.winning_aircraft order by count match desc limit 1"}
{"db_id": "aircraft", "sub_sql": "group by t2.winning_aircraft having count match >= 2", "question": "List the names of aircrafts and that won matches at least twice.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2", "sub_ques": "aircrafts and that won matches at least twice", "sun_sql_new": "group by t2.winning_aircraft having count match no less than 2"}
{"db_id": "aircraft", "sub_sql": "group by t2.winning_aircraft having count match >= 2", "question": "What are the names of all aircrafts that have won a match at least twice?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2", "sub_ques": "aircrafts that have won a match at least twice", "sun_sql_new": "group by t2.winning_aircraft having count match no less than 2"}
{"db_id": "aircraft", "sub_sql": "group by t2.winning_pilot order by count match desc limit 1", "question": "find the name and age of the pilot who has won the most number of times among the pilots who are younger than 30.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count match desc limit 1", "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the pilot who has won the most number of times", "sun_sql_new": "group by t2.winning_pilot order by count match desc limit 1"}
{"db_id": "aircraft", "sub_sql": "group by t2.winning_pilot order by count match desc limit 1", "question": "What is the name and age of the pilot younger than 30 who has won the most number of times?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count match desc limit 1", "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1", "sub_ques": "who has won the most number of times", "sun_sql_new": "group by t2.winning_pilot order by count match desc limit 1"}
{"db_id": "local_govt_and_lot", "sub_sql": "group by t1.resident_id order by count Residents_Services desc", "question": "How many services has each resident requested? List the resident id, details, and the count in descending order of the count.", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count Residents_Services desc", "query": "SELECT T1.resident_id ,  T1.other_details ,  count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id ORDER BY count(*) DESC", "sub_ques": "resident id in descending order of the count", "sun_sql_new": "group by t1.resident_id order by count Residents_Services desc"}
{"db_id": "local_govt_and_lot", "sub_sql": "group by t1.service_id order by count Residents_Services desc limit 1", "question": "What is the maximum number that a certain service is provided? List the service id, details and number.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Residents_Services desc limit 1", "query": "SELECT T1.service_id ,  T1.service_details ,  count(*) FROM Services AS T1 JOIN Residents_Services AS T2 ON T1.service_id  =  T2.service_id GROUP BY T1.service_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the maximum number that a certain service is provided", "sun_sql_new": "group by t1.service_id order by count Residents_Services desc limit 1"}
{"db_id": "local_govt_and_lot", "sub_sql": "group by t1.customer_id having count Customer_Events >= 3", "question": "What are the id and details of the customers who have at least 3 events?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  3", "sub_ques": "the customers who have at least 3 events", "sun_sql_new": "group by t1.customer_id having count Customer_Events no less than 3"}
{"db_id": "local_govt_and_lot", "sub_sql": "group by t1.customer_event_id having count Customer_Event_Notes between 1 and 3", "question": "Which events have the number of notes between one and three? List the event id and the property id.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.Customer_Event_ID  ,  T1.property_id FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID  =  T2.Customer_Event_ID GROUP BY T1.customer_event_id HAVING count(*) BETWEEN 1 AND 3", "sub_ques": "events have the number of notes between one and three", "sun_sql_new": "group by t1.customer_event_id having count Customer_Event_Notes between 1 and 3"}
{"db_id": "school_player", "sub_sql": "group by t1.school_id having count player > 1", "question": "Show the locations of schools that have more than 1 player.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1", "sub_ques": "schools that have more than 1 player", "sun_sql_new": "group by t1.school_id having count player more than 1"}
{"db_id": "school_player", "sub_sql": "group by t1.school_id having count player > 1", "question": "Which schools have more than 1 player? Give me the school locations.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1", "sub_ques": "schools have more than 1 player", "sun_sql_new": "group by t1.school_id having count player more than 1"}
{"db_id": "school_player", "sub_sql": "group by t1.school_id order by count player desc limit 1", "question": "Show the denomination of the school that has the most players.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count player desc limit 1", "query": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the school that has the most players", "sun_sql_new": "group by t1.school_id order by count player desc limit 1"}
{"db_id": "school_player", "sub_sql": "group by t1.school_id order by count player desc limit 1", "question": "What is the denomination of the school the most players belong to?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count player desc limit 1", "query": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the school the most players belong to", "sun_sql_new": "group by t1.school_id order by count player desc limit 1"}
{"db_id": "school_player", "sub_sql": "group by denomination order by count schools desc", "question": "Please show different denominations and the corresponding number of schools in descending order.", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count schools desc", "query": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC", "sub_ques": "denominations and the corresponding number of schools in descending order", "sun_sql_new": "group by denomination order by count schools desc"}
{"db_id": "school_player", "sub_sql": "group by denomination order by count schools desc", "question": "Order denominations in descending order of the count of schools with the denomination. Return each denomination with the count of schools.", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count schools desc", "query": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC", "sub_ques": "denominations in descending order of the count of schools with the denomination", "sun_sql_new": "group by denomination order by count schools desc"}
{"db_id": "school_player", "sub_sql": "group by denomination having count school > 1", "question": "Show the denomination shared by more than one school.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*)  >  1", "sub_ques": "denomination shared by more than one school", "sun_sql_new": "group by denomination having count school more than 1"}
{"db_id": "school_player", "sub_sql": "group by denomination having count school > 1", "question": "What are the denomination more than one school have?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*)  >  1", "sub_ques": "denomination more than one school have", "sun_sql_new": "group by denomination having count school more than 1"}
{"db_id": "store_product", "sub_sql": "group by max_page_size having count product > 3", "question": "Find the list of page size which have more than 3 product listed", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3", "sub_ques": "page size which have more than 3 product listed", "sun_sql_new": "group by max_page_size having count product more than 3"}
{"db_id": "store_product", "sub_sql": "group by max_page_size having count product > 3", "question": "What is the maximum page size for everything that has more than 3 products listed?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3", "sub_ques": "maximum page size for everything that has more than 3 products listed", "sun_sql_new": "group by max_page_size having count product more than 3"}
{"db_id": "store_product", "sub_sql": "group by t3.headquartered_city order by count store desc limit 1", "question": "Find the city with the most number of stores.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count store desc limit 1", "query": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the city with the most number of stores", "sun_sql_new": "group by t3.headquartered_city order by count store desc limit 1"}
{"db_id": "store_product", "sub_sql": "group by t3.headquartered_city order by count store desc limit 1", "question": "What is the city with the most number of flagship stores?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count store desc limit 1", "query": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the city with the most number of flagship stores", "sun_sql_new": "group by t3.headquartered_city order by count store desc limit 1"}
{"db_id": "store_product", "sub_sql": "group by max_page_size order by count product desc limit 1", "question": "Find the most prominent max page size among all the products.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count product desc limit 1", "query": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the most prominent max page size among all the products", "sun_sql_new": "group by max_page_size order by count product desc limit 1"}
{"db_id": "store_product", "sub_sql": "group by max_page_size order by count product desc limit 1", "question": "What is the most common maximum page size?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count product desc limit 1", "query": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the most common maximum page size", "sun_sql_new": "group by max_page_size order by count product desc limit 1"}
{"db_id": "store_product", "sub_sql": "group by max_page_size order by count product desc limit 1", "question": "Find the name of the products that are not using the most frequently-used max page size.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count product desc limit 1", "query": "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)", "sub_ques": "products that are not using the most frequently-used max page size", "sun_sql_new": "group by max_page_size order by count product desc limit 1"}
{"db_id": "store_product", "sub_sql": "group by max_page_size order by count product desc limit 1", "question": "What are the names of all products that are not the most frequently-used maximum page size?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count product desc limit 1", "query": "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)", "sub_ques": "products that are not the most frequently-used maximum page size", "sun_sql_new": "group by max_page_size order by count product desc limit 1"}
{"db_id": "soccer_2", "sub_sql": "group by ppos order by count tryout desc limit 1", "question": "Which position is most popular among players in the tryout?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count tryout desc limit 1", "query": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count(*) DESC LIMIT 1", "sub_ques": "position is most popular among players in the tryout", "sun_sql_new": "group by ppos order by count tryout desc limit 1"}
{"db_id": "soccer_2", "sub_sql": "group by ppos order by count tryout desc limit 1", "question": "What was the most popular position at tryouts?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count tryout desc limit 1", "query": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the most popular position at tryouts", "sun_sql_new": "group by ppos order by count tryout desc limit 1"}
{"db_id": "soccer_2", "sub_sql": "group by cname order by count tryout desc", "question": "Find the number of students who participate in the tryout for each college ordered by descending count.", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count tryout desc", "query": "SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC", "sub_ques": "the number of students who participate in the tryout for each college ordered by descending count", "sun_sql_new": "group by cname order by count tryout desc"}
{"db_id": "soccer_2", "sub_sql": "group by cname order by count tryout desc", "question": "How many students participated in tryouts for each college by descennding count?", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count tryout desc", "query": "SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC", "sub_ques": "participated in tryouts for each college by descennding count", "sun_sql_new": "group by cname order by count tryout desc"}
{"db_id": "device", "sub_sql": "group by t1.shop_id having count stock > 1", "question": "Show names of shops that have more than one kind of device in stock.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(*)  >  1", "sub_ques": "shops that have more than one kind of device in stock", "sun_sql_new": "group by t1.shop_id having count stock more than 1"}
{"db_id": "device", "sub_sql": "group by t1.shop_id having count stock > 1", "question": "What are the names of shops that have more than a single kind of device in stock?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(*)  >  1", "sub_ques": "shops that have more than a single kind of device in stock", "sun_sql_new": "group by t1.shop_id having count stock more than 1"}
{"db_id": "device", "sub_sql": "group by t1.shop_id order by count stock desc limit 1", "question": "Show the name of the shop that has the most kind of devices in stock.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count stock desc limit 1", "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the shop that has the most kind of devices in stock", "sun_sql_new": "group by t1.shop_id order by count stock desc limit 1"}
{"db_id": "device", "sub_sql": "group by t1.shop_id order by count stock desc limit 1", "question": "What is the name of the shop that has the most different kinds of devices in stock?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count stock desc limit 1", "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the shop that has the most different kinds of devices in stock", "sun_sql_new": "group by t1.shop_id order by count stock desc limit 1"}
{"db_id": "device", "sub_sql": "group by t1.shop_id order by sum t1.quantity desc limit 1", "question": "Show the name of the shop that have the largest quantity of devices in stock.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by sum quantity desc limit 1", "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.quantity) DESC LIMIT 1", "sub_ques": "the shop that have the largest quantity of devices in stock", "sun_sql_new": "group by t1.shop_id order by sum t1.quantity desc limit 1"}
{"db_id": "device", "sub_sql": "group by t1.shop_id order by sum t1.quantity desc limit 1", "question": "What is the name of the shop that has the greatest quantity of devices in stock?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by sum quantity desc limit 1", "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.quantity) DESC LIMIT 1", "sub_ques": "the shop that has the greatest quantity of devices in stock", "sun_sql_new": "group by t1.shop_id order by sum t1.quantity desc limit 1"}
{"db_id": "device", "sub_sql": "group by software_platform order by count device desc", "question": "Please show the software platforms of devices in descending order of the count.", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count device desc", "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC", "sub_ques": "the software platforms of devices in descending order of the count", "sun_sql_new": "group by software_platform order by count device desc"}
{"db_id": "device", "sub_sql": "group by software_platform order by count device desc", "question": "What are the different software platforms for devices, ordered by frequency descending?", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count device desc", "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC", "sub_ques": "the different software platforms for devices , ordered by frequency", "sun_sql_new": "group by software_platform order by count device desc"}
{"db_id": "device", "sub_sql": "group by software_platform order by count device desc limit 1", "question": "List the software platform shared by the greatest number of devices.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count device desc limit 1", "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the software platform shared by the greatest number of devices", "sun_sql_new": "group by software_platform order by count device desc limit 1"}
{"db_id": "device", "sub_sql": "group by software_platform order by count device desc limit 1", "question": "What is the software platform that is most common amongst all devices?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count device desc limit 1", "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the software platform that is most common amongst all devices", "sun_sql_new": "group by software_platform order by count device desc limit 1"}
{"db_id": "device", "sub_sql": "group by t1.device_id having count stock > 1", "question": "Show the carriers of devices in stock at more than one shop.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT(*)  >  1", "sub_ques": "devices in stock at more than one shop", "sun_sql_new": "group by t1.device_id having count stock more than 1"}
{"db_id": "device", "sub_sql": "group by t1.device_id having count stock > 1", "question": "What are the carriers of devices that are in stock in more than a single shop?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT(*)  >  1", "sub_ques": "devices that are in stock in more than a single shop", "sun_sql_new": "group by t1.device_id having count stock more than 1"}
{"db_id": "cre_Drama_Workshop_Groups", "sub_sql": "group by payment_method_code order by count INVOICES desc limit 1", "question": "What is the payment method code used by the most orders?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count INVOICES desc limit 1", "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the payment method code used by the most orders", "sun_sql_new": "group by payment_method_code order by count INVOICES desc limit 1"}
{"db_id": "cre_Drama_Workshop_Groups", "sub_sql": "group by payment_method_code order by count INVOICES desc limit 1", "question": "Find the payment method that is used the most often in all the invoices. Give me its code.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count INVOICES desc limit 1", "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the payment method that is used the most often in all the invoices", "sun_sql_new": "group by payment_method_code order by count INVOICES desc limit 1"}
{"db_id": "cre_Drama_Workshop_Groups", "sub_sql": "group by t1.service_type_code order by count Services desc limit 1", "question": "What is the description and code of the type of service that is performed the most often?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Services desc limit 1", "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "code of the type of service that is performed the most often", "sun_sql_new": "group by t1.service_type_code order by count Services desc limit 1"}
{"db_id": "cre_Drama_Workshop_Groups", "sub_sql": "group by t1.service_type_code order by count Services desc limit 1", "question": "Find the description and code of the service type that is performed the most times.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Services desc limit 1", "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "code of the service type that is performed the most times", "sun_sql_new": "group by t1.service_type_code order by count Services desc limit 1"}
{"db_id": "cre_Drama_Workshop_Groups", "sub_sql": "group by product_name having avg product_price < 1000000", "question": "What are the product names with average product price smaller than 1000000?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000", "sub_ques": "product names with average product price smaller than 1000000", "sun_sql_new": "group by product_name having avg product_price less than 1000000"}
{"db_id": "cre_Drama_Workshop_Groups", "sub_sql": "group by product_name having avg product_price < 1000000", "question": "Find the product names whose average product price is below 1000000.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000", "sub_ques": "product names whose average product price is below 1000000", "sun_sql_new": "group by product_name having avg product_price less than 1000000"}
{"db_id": "cre_Drama_Workshop_Groups", "sub_sql": "group by marketing_region_code order by count Drama_Workshop_Groups desc limit 1", "question": "What is the marketing region code that has the most drama workshop groups?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Drama_Workshop_Groups desc limit 1", "query": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the marketing region code that has the most drama workshop groups", "sun_sql_new": "group by marketing_region_code order by count Drama_Workshop_Groups desc limit 1"}
{"db_id": "cre_Drama_Workshop_Groups", "sub_sql": "group by marketing_region_code order by count Drama_Workshop_Groups desc limit 1", "question": "Which marketing region has the most drama workshop groups? Give me the region code.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Drama_Workshop_Groups desc limit 1", "query": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "marketing region has the most drama workshop groups", "sun_sql_new": "group by marketing_region_code order by count Drama_Workshop_Groups desc limit 1"}
{"db_id": "cre_Drama_Workshop_Groups", "sub_sql": "group by status_code order by count BOOKINGS desc limit 1", "question": "What is the most frequent status of bookings?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count BOOKINGS desc limit 1", "query": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the most frequent status of bookings", "sun_sql_new": "group by status_code order by count BOOKINGS desc limit 1"}
{"db_id": "cre_Drama_Workshop_Groups", "sub_sql": "group by status_code order by count BOOKINGS desc limit 1", "question": "Which status code is the most common of all the bookings?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count BOOKINGS desc limit 1", "query": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "status code is the most common of all the bookings", "sun_sql_new": "group by status_code order by count BOOKINGS desc limit 1"}
{"db_id": "cre_Drama_Workshop_Groups", "sub_sql": "group by product_id order by count INVOICES desc limit 1", "question": "What is the product ID of the most frequently ordered item on invoices?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count INVOICES desc limit 1", "query": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the product id of the most frequently ordered item on invoices", "sun_sql_new": "group by product_id order by count INVOICES desc limit 1"}
{"db_id": "cre_Drama_Workshop_Groups", "sub_sql": "group by product_id order by count INVOICES desc limit 1", "question": "Find the id of the product ordered the most often on invoices.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count INVOICES desc limit 1", "query": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the id of the product ordered the most often on invoices", "sun_sql_new": "group by product_id order by count INVOICES desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by label order by count albums desc limit 1", "question": "What is the label that has the most albums?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count albums desc limit 1", "query": "SELECT label FROM albums GROUP BY label ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the label that has the most albums", "sun_sql_new": "group by label order by count albums desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by label order by count albums desc limit 1", "question": "What is the label with the most albums?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count albums desc limit 1", "query": "SELECT label FROM albums GROUP BY label ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the label with the most albums", "sun_sql_new": "group by label order by count albums desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by lastname order by count songs desc limit 1", "question": "What is the last name of the musician that have produced the most number of songs?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count songs desc limit 1", "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the last name of the musician that have produced the most number of songs", "sun_sql_new": "group by lastname order by count songs desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by lastname order by count songs desc limit 1", "question": "What is the last name of the musician who was in the most songs?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count songs desc limit 1", "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the last name of the musician who was in the most songs", "sun_sql_new": "group by lastname order by count songs desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by lastname order by count Performance desc limit 1", "question": "What is the last name of the musician that has been at the back position the most?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Performance desc limit 1", "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE stageposition  =  \\\\\\\\\\\\\\\"back\\\\\\\\\\\\\\\" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1", "sub_ques": "last name of the musician that has been at position the most", "sun_sql_new": "group by lastname order by count Performance desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by lastname order by count Performance desc limit 1", "question": "What is the last name of the musicians who has played back position the most?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Performance desc limit 1", "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE stageposition  =  \\\\\\\\\\\\\\\"back\\\\\\\\\\\\\\\" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1", "sub_ques": "last name of the musicians who has played back position the most", "sun_sql_new": "group by lastname order by count Performance desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by instrument order by count instruments desc limit 1", "question": "What is the most used instrument?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count instruments desc limit 1", "query": "SELECT instrument FROM instruments GROUP BY instrument ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the most used instrument", "sun_sql_new": "group by instrument order by count instruments desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by instrument order by count instruments desc limit 1", "question": "What instrument is used the most?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count instruments desc limit 1", "query": "SELECT instrument FROM instruments GROUP BY instrument ORDER BY count(*) DESC LIMIT 1", "sub_ques": "instrument is used the most", "sun_sql_new": "group by instrument order by count instruments desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by t1.songid order by count vocals desc limit 1", "question": "Which song has the most vocals?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count vocals desc limit 1", "query": "SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid GROUP BY T1.songid ORDER BY count(*) DESC LIMIT 1", "sub_ques": "song has the most vocals", "sun_sql_new": "group by t1.songid order by count vocals desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by t1.songid order by count vocals desc limit 1", "question": "What is the song with the most vocals?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count vocals desc limit 1", "query": "SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid GROUP BY T1.songid ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the song with the most vocals", "sun_sql_new": "group by t1.songid order by count vocals desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by type order by count vocals desc limit 1", "question": "Which vocal type is the most frequently appearring type?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count vocals desc limit 1", "query": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "sub_ques": "type is the most frequently appearring type", "sun_sql_new": "group by type order by count vocals desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by type order by count vocals desc limit 1", "question": "What is the type of vocables that appears most frequently?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count vocals desc limit 1", "query": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the type of vocables that appears most frequently", "sun_sql_new": "group by type order by count vocals desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by type order by count vocals desc limit 1", "question": "Which vocal type has the band mate with last name \\\\\\\\\\\\\\\"Heilo\\\\\\\\\\\\\\\" played the most?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count vocals desc limit 1", "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE lastname  =  \\\\\\\\\\\\\\\"Heilo\\\\\\\\\\\\\\\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "sub_ques": "type played the most", "sun_sql_new": "group by type order by count vocals desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by type order by count vocals desc limit 1", "question": "What is the type of vocals that the band member with the last name \\\\\\\\\\\\\\\"Heilo\\\\\\\\\\\\\\\" played the most?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count vocals desc limit 1", "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE lastname  =  \\\\\\\\\\\\\\\"Heilo\\\\\\\\\\\\\\\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the type of vocals that played the most", "sun_sql_new": "group by type order by count vocals desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by lastname order by count songs desc limit 1", "question": "What is the last name of the musician that have produced the most songs?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count songs desc limit 1", "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1", "sub_ques": "last name of the musician that have produced the most songs", "sun_sql_new": "group by lastname order by count songs desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by lastname order by count songs desc limit 1", "question": "What is the last name of the artist who sang the most songs?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count songs desc limit 1", "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1", "sub_ques": "last name of the artist who sang the most songs", "sun_sql_new": "group by lastname order by count songs desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by type order by count vocals desc limit 1", "question": "Which vocal type has the band mate with first name \\\\\\\\\\\\\\\"Solveig\\\\\\\\\\\\\\\" played the most?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count vocals desc limit 1", "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \\\\\\\\\\\\\\\"Solveig\\\\\\\\\\\\\\\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "sub_ques": "type has played the most", "sun_sql_new": "group by type order by count vocals desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by type order by count vocals desc limit 1", "question": "What are the types of vocals that the band member with the first name \\\\\\\\\\\\\\\"Solveig\\\\\\\\\\\\\\\" played the most?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count vocals desc limit 1", "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \\\\\\\\\\\\\\\"Solveig\\\\\\\\\\\\\\\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the types of vocals that played the most", "sun_sql_new": "group by type order by count vocals desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by firstname order by count songs desc limit 1", "question": "Find the first name of the band mate that has performed in most songs.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count songs desc limit 1", "query": "SELECT t2.firstname FROM Performance AS t1 JOIN Band AS t2 ON t1.bandmate  =  t2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY firstname ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the first name of the band mate that has performed in most songs", "sun_sql_new": "group by firstname order by count songs desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by firstname order by count songs desc limit 1", "question": "What is the first name of the band mate who perfomed in the most songs?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count songs desc limit 1", "query": "SELECT t2.firstname FROM Performance AS t1 JOIN Band AS t2 ON t1.bandmate  =  t2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY firstname ORDER BY count(*) DESC LIMIT 1", "sub_ques": "first name of the band mate who perfomed in the most songs", "sun_sql_new": "group by firstname order by count songs desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by type order by count vocals desc limit 1", "question": "Which vocal type has the band mate with first name \\\\\\\\\\\\\\\"Marianne\\\\\\\\\\\\\\\" played the most?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count vocals desc limit 1", "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \\\\\\\\\\\\\\\"Marianne\\\\\\\\\\\\\\\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "sub_ques": "type has played the most", "sun_sql_new": "group by type order by count vocals desc limit 1"}
{"db_id": "music_2", "sub_sql": "group by type order by count vocals desc limit 1", "question": "What is the vocal type of the band mate whose first name is \\\\\\\\\\\\\\\"Marianne\\\\\\\\\\\\\\\" played the most?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count vocals desc limit 1", "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \\\\\\\\\\\\\\\"Marianne\\\\\\\\\\\\\\\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the vocal type played the most", "sun_sql_new": "group by type order by count vocals desc limit 1"}
{"db_id": "manufactory_1", "sub_sql": "group by t2.name having avg t1.price >= 150", "question": "Select the names of manufacturer whose products have an average price higher than or equal to $150.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150", "sub_ques": "names of manufacturer whose products have an average price higher than or equal to $ 150", "sun_sql_new": "group by t2.name having avg t1.price no less than 150"}
{"db_id": "manufactory_1", "sub_sql": "group by t2.name having avg t1.price >= 150", "question": "What are the names and average prices of products for manufacturers whose products cost on average 150 or more?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150", "sub_ques": "names and average prices of products for manufacturers whose products cost on average 150", "sun_sql_new": "group by t2.name having avg t1.price no less than 150"}
{"db_id": "tracking_software_problems", "sub_sql": "group by t1.product_name order by count problems desc limit 1", "question": "How many problems does the product with the most problems have? List the number of the problems and product name.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count problems desc limit 1", "query": "SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the product with the most problems have", "sun_sql_new": "group by t1.product_name order by count problems desc limit 1"}
{"db_id": "tracking_software_problems", "sub_sql": "group by t1.product_name order by count problems desc limit 1", "question": "Which product has the most problems? Give me the number of problems and the product name.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count problems desc limit 1", "query": "SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1", "sub_ques": "product has the most problems", "sun_sql_new": "group by t1.product_name order by count problems desc limit 1"}
{"db_id": "tracking_software_problems", "sub_sql": "group by t2.product_name order by count problems desc limit 3", "question": "Find the top 3 products which have the largest number of problems?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count problems desc limit 3", "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3", "sub_ques": "products which have the largest number of problems", "sun_sql_new": "group by t2.product_name order by count problems desc limit 3"}
{"db_id": "tracking_software_problems", "sub_sql": "group by t2.product_name order by count problems desc limit 3", "question": "What are the three products that have the most problems?s", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count problems desc limit 3", "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3", "sub_ques": "the three products that have the most problems", "sun_sql_new": "group by t2.product_name order by count problems desc limit 3"}
{"db_id": "shop_membership", "sub_sql": "group by open_year having count branch >= 2", "question": "List all open years when at least two shops are opened.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT open_year FROM branch GROUP BY open_year HAVING count(*)  >=  2", "sub_ques": "open years when at least two shops are opened", "sun_sql_new": "group by open_year having count branch no less than 2"}
{"db_id": "shop_membership", "sub_sql": "group by open_year having count branch >= 2", "question": "What are the opening years in which at least two shops opened?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT open_year FROM branch GROUP BY open_year HAVING count(*)  >=  2", "sub_ques": "opening years in which at least two shops opened", "sun_sql_new": "group by open_year having count branch no less than 2"}
{"db_id": "shop_membership", "sub_sql": "group by level order by count member desc limit 1", "question": "Show the membership level with most number of members.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count member desc limit 1", "query": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the membership level with most number of members", "sun_sql_new": "group by level order by count member desc limit 1"}
{"db_id": "shop_membership", "sub_sql": "group by level order by count member desc limit 1", "question": "What is the membership level with the most people?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count member desc limit 1", "query": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the membership level with the most people", "sun_sql_new": "group by level order by count member desc limit 1"}
{"db_id": "shop_membership", "sub_sql": "group by t2.branch_id order by count membership_register_branch desc limit 1", "question": "What is the name and open year for the branch with most number of memberships registered in 2016?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count membership_register_branch desc limit 1", "query": "SELECT T2.name ,  T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the branch with most number of memberships", "sun_sql_new": "group by t2.branch_id order by count membership_register_branch desc limit 1"}
{"db_id": "shop_membership", "sub_sql": "group by t2.branch_id order by count membership_register_branch desc limit 1", "question": "What is the name and opening year for the branch that registered the most members in 2016?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count membership_register_branch desc limit 1", "query": "SELECT T2.name ,  T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the branch that registered the most members", "sun_sql_new": "group by t2.branch_id order by count membership_register_branch desc limit 1"}
{"db_id": "voter_2", "sub_sql": "group by advisor having count student > 2", "question": "Report all advisors that advise more than 2 students.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT(*)  >  2", "sub_ques": "advisors that advise more than 2 students", "sun_sql_new": "group by advisor having count student more than 2"}
{"db_id": "voter_2", "sub_sql": "group by advisor having count student > 2", "question": "Which advisors have more than two students?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT(*)  >  2", "sub_ques": "advisors have more than two students", "sun_sql_new": "group by advisor having count student more than 2"}
{"db_id": "voter_2", "sub_sql": "group by major having count student < 3", "question": "Report all majors that have less than 3 students.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*)  <  3", "sub_ques": "majors that have less than 3 students", "sun_sql_new": "group by major having count student less than 3"}
{"db_id": "voter_2", "sub_sql": "group by major having count student < 3", "question": "What are the majors only less than three students are studying?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*)  <  3", "sub_ques": "majors only less than three students", "sun_sql_new": "group by major having count student less than 3"}
{"db_id": "voter_2", "sub_sql": "group by major order by count student desc limit 1", "question": "Which major has the most students?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count student desc limit 1", "query": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1", "sub_ques": "major has the most students", "sun_sql_new": "group by major order by count student desc limit 1"}
{"db_id": "voter_2", "sub_sql": "group by major order by count student desc limit 1", "question": "Find the major that is studied by the largest number of students.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count student desc limit 1", "query": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the major that is studied by the largest number of students", "sun_sql_new": "group by major order by count student desc limit 1"}
{"db_id": "voter_2", "sub_sql": "group by major order by count student desc limit 1", "question": "What is the most common major among female (sex is F) students?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count student desc limit 1", "query": "SELECT Major FROM STUDENT WHERE Sex  =  \\\\\\\\\\\\\\\"F\\\\\\\\\\\\\\\" GROUP BY major ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the most common major among students", "sun_sql_new": "group by major order by count student desc limit 1"}
{"db_id": "voter_2", "sub_sql": "group by major order by count student desc limit 1", "question": "Find the major that is studied by the most female students.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count student desc limit 1", "query": "SELECT Major FROM STUDENT WHERE Sex  =  \\\\\\\\\\\\\\\"F\\\\\\\\\\\\\\\" GROUP BY major ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the major that is studied by the most students", "sun_sql_new": "group by major order by count student desc limit 1"}
{"db_id": "voter_2", "sub_sql": "group by city_code order by count student desc limit 1", "question": "What is the city_code of the city that the most students live in?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count student desc limit 1", "query": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the city_code of the city that the most students live in", "sun_sql_new": "group by city_code order by count student desc limit 1"}
{"db_id": "voter_2", "sub_sql": "group by city_code order by count student desc limit 1", "question": "Return the code of the city that has the most students.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count student desc limit 1", "query": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the code of the city that has the most students", "sun_sql_new": "group by city_code order by count student desc limit 1"}
{"db_id": "voter_2", "sub_sql": "group by advisor having count student > 2", "question": "Report the distinct advisors who have more than 2 students.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count(*)  >  2", "sub_ques": "advisors who have more than 2 students", "sun_sql_new": "group by advisor having count student more than 2"}
{"db_id": "voter_2", "sub_sql": "group by advisor having count student > 2", "question": "Which advisors are advising more than 2 students?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count(*)  >  2", "sub_ques": "advisors are advising more than 2 students", "sun_sql_new": "group by advisor having count student more than 2"}
{"db_id": "products_gen_characteristics", "sub_sql": "group by t1.product_id having count ref_colors >= 2", "question": "Find the id and color description of the products with at least 2 characteristics.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2", "sub_ques": "the products with at least 2 characteristics", "sun_sql_new": "group by t1.product_id having count ref_colors no less than 2"}
{"db_id": "products_gen_characteristics", "sub_sql": "group by t1.product_id having count ref_colors >= 2", "question": "What are the product ids and color descriptions for products with two or more characteristics?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2", "sub_ques": "products with two or more characteristics", "sun_sql_new": "group by t1.product_id having count ref_colors no less than 2"}
{"db_id": "products_gen_characteristics", "sub_sql": "group by t2.color_description order by count products desc limit 1", "question": "What is the description of the color for most products?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count products desc limit 1", "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the description of the color for most products", "sun_sql_new": "group by t2.color_description order by count products desc limit 1"}
{"db_id": "products_gen_characteristics", "sub_sql": "group by t2.color_description order by count products desc limit 1", "question": "Return the color description that is most common across all products.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count products desc limit 1", "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the color description that is most common across all products", "sun_sql_new": "group by t2.color_description order by count products desc limit 1"}
{"db_id": "products_gen_characteristics", "sub_sql": "group by t2.color_description order by count products asc limit 1", "question": "What is the description of the color used by least products?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count products asc limit 1", "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1", "sub_ques": "the description of the color used by least products", "sun_sql_new": "group by t2.color_description order by count products asc limit 1"}
{"db_id": "products_gen_characteristics", "sub_sql": "group by t2.color_description order by count products asc limit 1", "question": "Give the color description that is least common across products.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count products asc limit 1", "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1", "sub_ques": "the color description that is least common across products", "sun_sql_new": "group by t2.color_description order by count products asc limit 1"}
{"db_id": "products_gen_characteristics", "sub_sql": "group by t3.characteristic_name order by count products desc limit 1", "question": "What is the characteristic name used by most number of the products?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count products desc limit 1", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the characteristic name used by most number of the products", "sun_sql_new": "group by t3.characteristic_name order by count products desc limit 1"}
{"db_id": "products_gen_characteristics", "sub_sql": "group by t3.characteristic_name order by count products desc limit 1", "question": "Return the name of the characteristic that is most common across all products.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count products desc limit 1", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the name of the characteristic that is most common across all products", "sun_sql_new": "group by t3.characteristic_name order by count products desc limit 1"}
{"db_id": "products_gen_characteristics", "sub_sql": "group by t3.characteristic_name having count products >= 2", "question": "What are characteristic names used at least twice across all products?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*)  >= 2", "sub_ques": "characteristic names used at least twice across all products", "sun_sql_new": "group by t3.characteristic_name having count products no less than 2"}
{"db_id": "products_gen_characteristics", "sub_sql": "group by t3.characteristic_name having count products >= 2", "question": "Give the names of characteristics that are in two or more products?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*)  >= 2", "sub_ques": "names of characteristics that are in two or more products", "sun_sql_new": "group by t3.characteristic_name having count products no less than 2"}
{"db_id": "swimming", "sub_sql": "group by country order by count stadium desc limit 1", "question": "Find the country that has the most stadiums.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count stadium desc limit 1", "query": "SELECT country FROM stadium GROUP BY country ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the country that has the most stadiums", "sun_sql_new": "group by country order by count stadium desc limit 1"}
{"db_id": "swimming", "sub_sql": "group by country having count stadium <= 3", "question": "Which country has at most 3 stadiums listed?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT country FROM stadium GROUP BY country HAVING count(*)  <=  3", "sub_ques": "country has at most 3 stadiums listed", "sun_sql_new": "group by country having count stadium no more than 3"}
{"db_id": "swimming", "sub_sql": "group by nationality having count swimmer > 1", "question": "List countries that have more than one swimmer.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT nationality ,  count(*) FROM swimmer GROUP BY nationality HAVING count(*)  >  1", "sub_ques": "countries that have more than one swimmer", "sun_sql_new": "group by nationality having count swimmer more than 1"}
{"db_id": "swimming", "sub_sql": "group by t2.stadium_id order by count stadium desc limit 1", "question": "What is the name of the stadium which held the most events?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count stadium desc limit 1", "query": "SELECT t1.name FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the stadium which held the most events", "sun_sql_new": "group by t2.stadium_id order by count stadium desc limit 1"}
{"db_id": "swimming", "sub_sql": "group by t2.swimmer_id order by count record desc limit 1", "question": "Find the name of the swimmer who has the most records.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count record desc limit 1", "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the swimmer who has the most records", "sun_sql_new": "group by t2.swimmer_id order by count record desc limit 1"}
{"db_id": "swimming", "sub_sql": "group by t2.swimmer_id having count record >= 2", "question": "Find the name of the swimmer who has at least 2 records.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id HAVING count(*)  >=  2", "sub_ques": "the swimmer who has at least 2 records", "sun_sql_new": "group by t2.swimmer_id having count record no less than 2"}
{"db_id": "swimming", "sub_sql": "group by t2.swimmer_id having count record > 1", "question": "Find the name and nationality of the swimmer who has won (i.e., has a result of \\\\\\\\\\\\\\\"win\\\\\\\\\\\\\\\") more than 1 time.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT t1.name ,  t1.nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' GROUP BY t2.swimmer_id HAVING count(*)  >  1", "sub_ques": "the swimmer who has won more than 1", "sun_sql_new": "group by t2.swimmer_id having count record more than 1"}
{"db_id": "swimming", "sub_sql": "group by t2.stadium_id order by count record desc limit 1", "question": "Find the names of stadiums that the most swimmers have been to.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count record desc limit 1", "query": "SELECT t3.name FROM record AS t1 JOIN event AS t2 ON t1.event_id  =  t2.id JOIN stadium AS t3 ON t3.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "stadiums that the most swimmers have been to", "sun_sql_new": "group by t2.stadium_id order by count record desc limit 1"}
{"db_id": "railway", "sub_sql": "group by t2.railway_id having count train > 1", "question": "Show id and location of railways that are associated with more than one train.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.Railway_ID ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT(*)  >  1", "sub_ques": "railways that are associated with more than one train", "sun_sql_new": "group by t2.railway_id having count train more than 1"}
{"db_id": "railway", "sub_sql": "group by t2.railway_id order by count train desc limit 1", "question": "Show the id and builder of the railway that are associated with the most trains.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count train desc limit 1", "query": "SELECT T2.Railway_ID ,  T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the railway that are associated with the most trains", "sun_sql_new": "group by t2.railway_id order by count train desc limit 1"}
{"db_id": "railway", "sub_sql": "group by builder order by count railway desc limit 1", "question": "Show the most common builder of railways.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count railway desc limit 1", "query": "SELECT Builder FROM railway GROUP BY Builder ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the most common builder of railways", "sun_sql_new": "group by builder order by count railway desc limit 1"}
{"db_id": "railway", "sub_sql": "group by location having count railway > 1", "question": "Show the locations that have more than one railways.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT(*)  >  1", "sub_ques": "locations that have more than one railways", "sun_sql_new": "group by location having count railway more than 1"}
{"db_id": "customers_and_products_contacts", "sub_sql": "group by t1.customer_id order by count customer_orders desc limit 1", "question": "Show the name of the customer who has the most orders.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count customer_orders desc limit 1", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the customer who has the most orders", "sun_sql_new": "group by t1.customer_id order by count customer_orders desc limit 1"}
{"db_id": "customers_and_products_contacts", "sub_sql": "group by product_type_code having count products >= 2", "question": "Show the product type codes which have at least two products.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING count(*)  >=  2", "sub_ques": "product type codes which have at least two products", "sun_sql_new": "group by product_type_code having count products no less than 2"}
{"db_id": "customers_and_products_contacts", "sub_sql": "group by t1.customer_id having count customer_orders > 2", "question": "Show the names of customers who use Credit Card payment method and have more than 2 orders.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.payment_method_code  =  'Credit Card' GROUP BY T1.customer_id HAVING count(*)  >  2", "sub_ques": "customers who have more than 2 orders", "sun_sql_new": "group by t1.customer_id having count customer_orders more than 2"}
{"db_id": "customers_and_products_contacts", "sub_sql": "group by t1.customer_id order by sum t3.order_quantity desc limit 1", "question": "What are the name and phone of the customer with the most ordered product quantity?", "sub_sql_type": "null null agg col col null null limv", "sub_sql_new": "order by sum order quantity desc limit 1", "query": "SELECT  T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T3.order_id  =  T2.order_id GROUP BY T1.customer_id ORDER BY sum(T3.order_quantity) DESC LIMIT 1", "sub_ques": "the customer with the most ordered product quantity", "sun_sql_new": "group by t1.customer_id order by sum t3.order_quantity desc limit 1"}
{"db_id": "dorm_1", "sub_sql": "group by city_code order by count student desc limit 1", "question": "Find the code of city where most of students are living in.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count student desc limit 1", "query": "SELECT city_code FROM student GROUP BY city_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the code of city where most of students are living in", "sun_sql_new": "group by city_code order by count student desc limit 1"}
{"db_id": "dorm_1", "sub_sql": "group by city_code order by count student desc limit 1", "question": "What is the code of the city with the most students?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count student desc limit 1", "query": "SELECT city_code FROM student GROUP BY city_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the code of the city with the most students", "sun_sql_new": "group by city_code order by count student desc limit 1"}
{"db_id": "dorm_1", "sub_sql": "group by city_code having count student > 1", "question": "Find the number of students for the cities where have more than one student.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT count(*) ,  city_code FROM student GROUP BY city_code HAVING count(*)  >  1", "sub_ques": "the cities where have more than one student", "sun_sql_new": "group by city_code having count student more than 1"}
{"db_id": "dorm_1", "sub_sql": "group by city_code having count student > 1", "question": "How many students are from each city, and which cities have more than one cities?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT count(*) ,  city_code FROM student GROUP BY city_code HAVING count(*)  >  1", "sub_ques": "which cities have more than one cities", "sun_sql_new": "group by city_code having count student more than 1"}
{"db_id": "dorm_1", "sub_sql": "group by major order by count student desc limit 1", "question": "Find the first and last name of students who are not in the largest major.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count student desc limit 1", "query": "SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)", "sub_ques": "the largest major", "sun_sql_new": "group by major order by count student desc limit 1"}
{"db_id": "dorm_1", "sub_sql": "group by major order by count student desc limit 1", "question": "What is the first and last name of the students who are not in the largest major?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count student desc limit 1", "query": "SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)", "sub_ques": "the largest major", "sun_sql_new": "group by major order by count student desc limit 1"}
{"db_id": "dorm_1", "sub_sql": "group by t2.amenid order by count dorm_amenity desc limit 1", "question": "Find the name of amenity that is most common in all dorms.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count dorm_amenity desc limit 1", "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1", "sub_ques": "amenity that is most common in all dorms", "sun_sql_new": "group by t2.amenid order by count dorm_amenity desc limit 1"}
{"db_id": "dorm_1", "sub_sql": "group by t2.amenid order by count dorm_amenity desc limit 1", "question": "What is the most common amenity in the dorms?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count dorm_amenity desc limit 1", "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the most common amenity in the dorms", "sun_sql_new": "group by t2.amenid order by count dorm_amenity desc limit 1"}
{"db_id": "dorm_1", "sub_sql": "group by t3.dormid order by count has_amenity desc limit 1", "question": "Find the first name of students who are living in the dorm that has most number of amenities.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count has_amenity desc limit 1", "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)", "sub_ques": "the dorm that has most number of amenities", "sun_sql_new": "group by t3.dormid order by count has_amenity desc limit 1"}
{"db_id": "dorm_1", "sub_sql": "group by t3.dormid order by count has_amenity desc limit 1", "question": "What are the first names of all students who live in the dorm with the most amenities?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count has_amenity desc limit 1", "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)", "sub_ques": "the dorm with the most amenities", "sun_sql_new": "group by t3.dormid order by count has_amenity desc limit 1"}
{"db_id": "dorm_1", "sub_sql": "group by t2.dormid order by count has_amenity limit 1", "question": "Find the name and capacity of the dorm with least number of amenities.", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count has_amenity limit 1", "query": "SELECT T1.dorm_name ,  T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1", "sub_ques": "the dorm with least number of amenities", "sun_sql_new": "group by t2.dormid order by count has_amenity limit 1"}
{"db_id": "dorm_1", "sub_sql": "group by t2.dormid order by count has_amenity limit 1", "question": "What is the name and capacity of the dorm with the fewest amount of amenities?", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count has_amenity limit 1", "query": "SELECT T1.dorm_name ,  T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1", "sub_ques": "the dorm with the fewest amount of amenities", "sun_sql_new": "group by t2.dormid order by count has_amenity limit 1"}
{"db_id": "customer_complaints", "sub_sql": "group by town_city order by count customers limit 1", "question": "Which city has the least number of customers whose type code is \\\\\\\\\\\\\\\"Good Credit Rating\\\\\\\\\\\\\\\"?", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count customers limit 1", "query": "SELECT town_city FROM customers WHERE customer_type_code  =  \\\\\\\\\\\\\\\"Good Credit Rating\\\\\\\\\\\\\\\" GROUP BY town_city ORDER BY count(*) LIMIT 1", "sub_ques": "city has the least number of customers", "sun_sql_new": "group by town_city order by count customers limit 1"}
{"db_id": "customer_complaints", "sub_sql": "group by town_city order by count customers limit 1", "question": "Return the city with the customer type code \\\\\\\\\\\\\\\"Good Credit Rating\\\\\\\\\\\\\\\" that had the fewest customers.", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count customers limit 1", "query": "SELECT town_city FROM customers WHERE customer_type_code  =  \\\\\\\\\\\\\\\"Good Credit Rating\\\\\\\\\\\\\\\" GROUP BY town_city ORDER BY count(*) LIMIT 1", "sub_ques": "the city that had the fewest customers", "sun_sql_new": "group by town_city order by count customers limit 1"}
{"db_id": "customer_complaints", "sub_sql": "group by t1.customer_id order by count complaints limit 1", "question": "Find the emails of customers who has filed a complaints of the product with the most complaints.", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count complaints limit 1", "query": "SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1", "sub_ques": "the product with the most complaints", "sun_sql_new": "group by t1.customer_id order by count complaints limit 1"}
{"db_id": "customer_complaints", "sub_sql": "group by t1.customer_id order by count complaints limit 1", "question": "What are the emails of customers who have filed complaints on the product which has had the greatest number of complaints?", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count complaints limit 1", "query": "SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1", "sub_ques": "the product which has had the greatest number of complaints", "sun_sql_new": "group by t1.customer_id order by count complaints limit 1"}
{"db_id": "customer_complaints", "sub_sql": "group by t3.customer_id order by count complaints limit 1", "question": "Which products has been complained by the customer who has filed least amount of complaints?", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count complaints limit 1", "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1", "sub_ques": "the customer who has filed least amount of complaints", "sun_sql_new": "group by t3.customer_id order by count complaints limit 1"}
{"db_id": "customer_complaints", "sub_sql": "group by t3.customer_id order by count complaints limit 1", "question": "Return the names of products that have had complaints filed by the customer who has filed the fewest complaints.", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count complaints limit 1", "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1", "sub_ques": "the customer who has filed the fewest complaints", "sun_sql_new": "group by t3.customer_id order by count complaints limit 1"}
{"db_id": "customer_complaints", "sub_sql": "group by complaint_status_code having count complaints > 3", "question": "Which complaint status has more than 3 records on file?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3", "sub_ques": "complaint status has more than 3 records on file", "sun_sql_new": "group by complaint_status_code having count complaints more than 3"}
{"db_id": "customer_complaints", "sub_sql": "group by complaint_status_code having count complaints > 3", "question": "Return complaint status codes have more than 3 corresponding complaints?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3", "sub_ques": "complaint status codes have more than 3 corresponding complaints", "sun_sql_new": "group by complaint_status_code having count complaints more than 3"}
{"db_id": "customer_complaints", "sub_sql": "group by customer_type_code order by count customers desc limit 1", "question": "How many customers are there in the customer type with the most customers?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count customers desc limit 1", "query": "SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "customer type with the most customers", "sun_sql_new": "group by customer_type_code order by count customers desc limit 1"}
{"db_id": "customer_complaints", "sub_sql": "group by customer_type_code order by count customers desc limit 1", "question": "Count the number of customers that have the customer type that is most common.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count customers desc limit 1", "query": "SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the customer type that is most common", "sun_sql_new": "group by customer_type_code order by count customers desc limit 1"}
{"db_id": "customer_complaints", "sub_sql": "group by t2.staff_id order by count complaints limit 5", "question": "What is first names of the top 5 staff who have handled the greatest number of complaints?", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count complaints limit 5", "query": "SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id GROUP BY t2.staff_id ORDER BY count(*) LIMIT 5", "sub_ques": "the top 5 staff who have handled the greatest number of complaints", "sun_sql_new": "group by t2.staff_id order by count complaints limit 5"}
{"db_id": "customer_complaints", "sub_sql": "group by t2.staff_id order by count complaints limit 5", "question": "Return the first names of the 5 staff members who have handled the most complaints.", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count complaints limit 5", "query": "SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id GROUP BY t2.staff_id ORDER BY count(*) LIMIT 5", "sub_ques": "the 5 staff members who have handled the most complaints", "sun_sql_new": "group by t2.staff_id order by count complaints limit 5"}
{"db_id": "customer_complaints", "sub_sql": "group by state order by count customers limit 1", "question": "Which state has the most customers?", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count customers limit 1", "query": "SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1", "sub_ques": "state has the most customers", "sun_sql_new": "group by state order by count customers limit 1"}
{"db_id": "customer_complaints", "sub_sql": "group by state order by count customers limit 1", "question": "Give the state that has the most customers.", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count customers limit 1", "query": "SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1", "sub_ques": "the state that has the most customers", "sun_sql_new": "group by state order by count customers limit 1"}
{"db_id": "workshop_paper", "sub_sql": "group by college order by count submission desc limit 1", "question": "Show the most common college of authors of submissions.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count submission desc limit 1", "query": "SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the most common college of authors of submissions", "sun_sql_new": "group by college order by count submission desc limit 1"}
{"db_id": "workshop_paper", "sub_sql": "group by college order by count submission desc limit 1", "question": "Which college has the most authors with submissions?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count submission desc limit 1", "query": "SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "college has the most authors with submissions", "sun_sql_new": "group by college order by count submission desc limit 1"}
{"db_id": "workshop_paper", "sub_sql": "group by t2.author having count t1.workshop_id > 1", "question": "Show the authors who have submissions to more than one workshop.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author HAVING COUNT(DISTINCT T1.workshop_id)  >  1", "sub_ques": "authors who have submissions to more than one workshop", "sun_sql_new": "group by t2.author having count t1.workshop_id more than 1"}
{"db_id": "workshop_paper", "sub_sql": "group by t2.author having count t1.workshop_id > 1", "question": "Which authors have submitted to more than one workshop?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author HAVING COUNT(DISTINCT T1.workshop_id)  >  1", "sub_ques": "authors have submitted to more than one workshop", "sun_sql_new": "group by t2.author having count t1.workshop_id more than 1"}
{"db_id": "tracking_share_transactions", "sub_sql": "group by investor_id order by avg share_count", "question": "Show the average share count of transactions each each investor, ordered by average share count.", "sub_sql_type": "null null agg col col", "sub_sql_new": "order by avg share count", "query": "SELECT investor_id ,  avg(share_count) FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg(share_count)", "sub_ques": "each investor , ordered by average share count", "sun_sql_new": "group by investor_id order by avg share_count"}
{"db_id": "tracking_share_transactions", "sub_sql": "group by t2.lot_id order by avg amount_of_transaction", "question": "Show the average amount of transactions for different lots, ordered by average amount of transactions.", "sub_sql_type": "null null agg col col col", "sub_sql_new": "order by avg amount of transaction", "query": "SELECT T2.lot_id ,  avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id  =  T2.transaction_id GROUP BY T2.lot_id ORDER BY avg(amount_of_transaction)", "sub_ques": "ordered by average amount of transactions", "sun_sql_new": "group by t2.lot_id order by avg amount_of_transaction"}
{"db_id": "tracking_share_transactions", "sub_sql": "group by transaction_type_code order by count transactions asc limit 1", "question": "Show the transaction type code that occurs the fewest times.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count transactions asc limit 1", "query": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) ASC LIMIT 1", "sub_ques": "the transaction type code that occurs the fewest times", "sun_sql_new": "group by transaction_type_code order by count transactions asc limit 1"}
{"db_id": "tracking_share_transactions", "sub_sql": "group by transaction_type_code order by count transactions desc limit 1", "question": "Show the transaction type code that occurs the most frequently.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count transactions desc limit 1", "query": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the transaction type code that occurs the most frequently", "sun_sql_new": "group by transaction_type_code order by count transactions desc limit 1"}
{"db_id": "tracking_share_transactions", "sub_sql": "group by t1.transaction_type_code order by count TRANSACTIONS desc limit 1", "question": "Show the description of the transaction type that occurs most frequently.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count TRANSACTIONS desc limit 1", "query": "SELECT T1.transaction_type_description FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code GROUP BY T1.transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the transaction type that occurs most frequently", "sun_sql_new": "group by t1.transaction_type_code order by count TRANSACTIONS desc limit 1"}
{"db_id": "tracking_share_transactions", "sub_sql": "group by t2.investor_id order by count TRANSACTIONS desc limit 1", "question": "Show the id and details of the investor that has the largest number of transactions.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count TRANSACTIONS desc limit 1", "query": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the investor that has the largest number of transactions", "sun_sql_new": "group by t2.investor_id order by count TRANSACTIONS desc limit 1"}
{"db_id": "tracking_share_transactions", "sub_sql": "group by t2.investor_id order by count TRANSACTIONS desc limit 3", "question": "Show the id and details for the investors who have the top 3 number of transactions.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count TRANSACTIONS desc limit 3", "query": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3", "sub_ques": "the investors who have the top 3 number of transactions", "sun_sql_new": "group by t2.investor_id order by count TRANSACTIONS desc limit 3"}
{"db_id": "tracking_share_transactions", "sub_sql": "group by t2.investor_id having count TRANSACTIONS >= 2", "question": "Show the ids of the investors who have at least two transactions.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id HAVING COUNT(*)  >=  2", "sub_ques": "the investors who have at least two transactions", "sun_sql_new": "group by t2.investor_id having count TRANSACTIONS no less than 2"}
{"db_id": "tracking_share_transactions", "sub_sql": "group by t2.investor_id having count TRANSACTIONS >= 2", "question": "Show the ids and details of the investors who have at least two transactions with type code \\\\\\\\\\\\\\\"SALE\\\\\\\\\\\\\\\".", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.transaction_type_code  =  \\\\\\\\\\\\\\\"SALE\\\\\\\\\\\\\\\" GROUP BY T2.investor_id HAVING COUNT(*)  >=  2", "sub_ques": "the investors who have at least two transactions", "sun_sql_new": "group by t2.investor_id having count TRANSACTIONS no less than 2"}
{"db_id": "cre_Theme_park", "sub_sql": "group by how_to_get_there order by count Tourist_Attractions desc limit 1", "question": "Show the transportation method most people choose to get to tourist attractions.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Tourist_Attractions desc limit 1", "query": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "transportation method most people choose to get to", "sun_sql_new": "group by how_to_get_there order by count Tourist_Attractions desc limit 1"}
{"db_id": "cre_Theme_park", "sub_sql": "group by how_to_get_there order by count Tourist_Attractions desc limit 1", "question": "Which transportation method is used the most often to get to tourist attractions?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Tourist_Attractions desc limit 1", "query": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "transportation method is used the most often to get to", "sun_sql_new": "group by how_to_get_there order by count Tourist_Attractions desc limit 1"}
{"db_id": "cre_Theme_park", "sub_sql": "group by t2.attraction_type_code order by count Tourist_Attractions desc limit 1", "question": "Show the description and code of the attraction type most tourist attractions belong to.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Tourist_Attractions desc limit 1", "query": "SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "code of the attraction type most tourist attractions belong to", "sun_sql_new": "group by t2.attraction_type_code order by count Tourist_Attractions desc limit 1"}
{"db_id": "cre_Theme_park", "sub_sql": "group by t2.attraction_type_code order by count Tourist_Attractions desc limit 1", "question": "Which attraction type does the most tourist attractions belong to? Tell me its  attraction type description and code.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Tourist_Attractions desc limit 1", "query": "SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "attraction type does the most tourist attractions belong to", "sun_sql_new": "group by t2.attraction_type_code order by count Tourist_Attractions desc limit 1"}
{"db_id": "cre_Theme_park", "sub_sql": "group by t2.tourist_attraction_id having count VISITS >= 2", "question": "Show the names and ids of tourist attractions that are visited at least two times.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2", "sub_ques": "tourist attractions that are visited at least two times", "sun_sql_new": "group by t2.tourist_attraction_id having count VISITS no less than 2"}
{"db_id": "cre_Theme_park", "sub_sql": "group by t2.tourist_attraction_id having count VISITS >= 2", "question": "Which tourist attractions are visited at least twice? Give me their names and ids.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2", "sub_ques": "tourist attractions are visited at least twice", "sun_sql_new": "group by t2.tourist_attraction_id having count VISITS no less than 2"}
{"db_id": "cre_Theme_park", "sub_sql": "group by t2.tourist_attraction_id having count VISITS <= 1", "question": "Show the names and ids of tourist attractions that are visited at most once.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.Name ,  T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  <=  1", "sub_ques": "tourist attractions that are visited at most once", "sun_sql_new": "group by t2.tourist_attraction_id having count VISITS no more than 1"}
{"db_id": "cre_Theme_park", "sub_sql": "group by t2.tourist_attraction_id having count VISITS <= 1", "question": "What are the names and ids of the tourist attractions that are visited at most once?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.Name ,  T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  <=  1", "sub_ques": "the tourist attractions that are visited at most once", "sun_sql_new": "group by t2.tourist_attraction_id having count VISITS no more than 1"}
{"db_id": "game_1", "sub_sql": "group by gtype order by count Video_games desc limit 1", "question": "Which game type has most number of games?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Video_games desc limit 1", "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1", "sub_ques": "type has most number of games", "sun_sql_new": "group by gtype order by count Video_games desc limit 1"}
{"db_id": "game_1", "sub_sql": "group by gtype order by count Video_games desc limit 1", "question": "What type has the most games?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Video_games desc limit 1", "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1", "sub_ques": "type has the most games", "sun_sql_new": "group by gtype order by count Video_games desc limit 1"}
{"db_id": "game_1", "sub_sql": "group by gtype order by count Video_games limit 1", "question": "Which game type has least number of games?", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count Video_games limit 1", "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) LIMIT 1", "sub_ques": "type has least number of games", "sun_sql_new": "group by gtype order by count Video_games limit 1"}
{"db_id": "game_1", "sub_sql": "group by gtype order by count Video_games limit 1", "question": "What is the type with the fewest games?", "sub_sql_type": "null null agg col null limv", "sub_sql_new": "order by count Video_games limit 1", "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) LIMIT 1", "sub_ques": "the type with the fewest games", "sun_sql_new": "group by gtype order by count Video_games limit 1"}
{"db_id": "game_1", "sub_sql": "group by advisor having count student >= 2", "question": "Show all advisors who have at least two students.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT advisor FROM Student GROUP BY advisor HAVING count(*)  >=  2", "sub_ques": "advisors who have at least two students", "sun_sql_new": "group by advisor having count student no less than 2"}
{"db_id": "game_1", "sub_sql": "group by stuid having sum hoursperweek > 10", "question": "Show all student IDs with more than total 10 hours per week on all sports played.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum(hoursperweek)  >  10", "sub_ques": "student ids with more than total 10 hours per week", "sun_sql_new": "group by stuid having sum hoursperweek more than 10"}
{"db_id": "game_1", "sub_sql": "group by stuid having sum hoursperweek > 10", "question": "What are the student IDs for everybody who worked for more than 10 hours per week on all sports?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum(hoursperweek)  >  10", "sub_ques": "student ids for everybody who worked for more than 10 hours per week on all", "sun_sql_new": "group by stuid having sum hoursperweek more than 10"}
{"db_id": "game_1", "sub_sql": "group by t1.stuid order by count Sportsinfo desc limit 1", "question": "What is the first name and last name of the student who have most number of sports?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Sportsinfo desc limit 1", "query": "SELECT T2.Fname ,  T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the student who have most number of sports", "sun_sql_new": "group by t1.stuid order by count Sportsinfo desc limit 1"}
{"db_id": "game_1", "sub_sql": "group by t1.stuid order by count Sportsinfo desc limit 1", "question": "What is the first and last name of the student who played the most sports?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Sportsinfo desc limit 1", "query": "SELECT T2.Fname ,  T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the student who played the most sports", "sun_sql_new": "group by t1.stuid order by count Sportsinfo desc limit 1"}
{"db_id": "game_1", "sub_sql": "group by sportname order by count Sportsinfo desc limit 1", "question": "Which sport has most number of students on scholarship?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Sportsinfo desc limit 1", "query": "SELECT sportname FROM Sportsinfo WHERE onscholarship  =  'Y' GROUP BY sportname ORDER BY count(*) DESC LIMIT 1", "sub_ques": "sport has most number of students", "sun_sql_new": "group by sportname order by count Sportsinfo desc limit 1"}
{"db_id": "game_1", "sub_sql": "group by sportname order by count Sportsinfo desc limit 1", "question": "What is the sport with the most scholarship students?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Sportsinfo desc limit 1", "query": "SELECT sportname FROM Sportsinfo WHERE onscholarship  =  'Y' GROUP BY sportname ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the sport with the most scholarship students", "sun_sql_new": "group by sportname order by count Sportsinfo desc limit 1"}
{"db_id": "game_1", "sub_sql": "group by t1.gameid order by sum hours_played desc limit 1", "question": "Show the game name that has most number of hours played.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by sum hours_played desc limit 1", "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1", "sub_ques": "game name that has most number of hours played", "sun_sql_new": "group by t1.gameid order by sum hours_played desc limit 1"}
{"db_id": "game_1", "sub_sql": "group by t1.gameid order by sum hours_played desc limit 1", "question": "What is the name of the game that has been played the most?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by sum hours_played desc limit 1", "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1", "sub_ques": "the game that has been played the most", "sun_sql_new": "group by t1.gameid order by sum hours_played desc limit 1"}
{"db_id": "game_1", "sub_sql": "group by t1.gameid having sum hours_played >= 1000", "question": "Show all game names played by at least 1000 hours.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid HAVING sum(hours_played)  >=  1000", "sub_ques": "game names played by at least 1000 hours", "sun_sql_new": "group by t1.gameid having sum hours_played no less than 1000"}
{"db_id": "game_1", "sub_sql": "group by t1.gameid having sum hours_played >= 1000", "question": "What are the names of all the games that have been played for at least 1000 hours?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid HAVING sum(hours_played)  >=  1000", "sub_ques": "the games that have been played for at least 1000 hours", "sun_sql_new": "group by t1.gameid having sum hours_played no less than 1000"}
{"db_id": "customers_and_addresses", "sub_sql": "group by payment_method order by count customers desc limit 1", "question": "Which payment method is used by most customers?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count customers desc limit 1", "query": "SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1", "sub_ques": "payment method is used by most customers", "sun_sql_new": "group by payment_method order by count customers desc limit 1"}
{"db_id": "customers_and_addresses", "sub_sql": "group by payment_method order by count customers desc limit 1", "question": "Find the payment method that is used most frequently.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count customers desc limit 1", "query": "SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the payment method that is used most frequently", "sun_sql_new": "group by payment_method order by count customers desc limit 1"}
{"db_id": "customers_and_addresses", "sub_sql": "group by payment_method order by count customers desc limit 1", "question": "What are the names of customers using the most popular payment method?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count customers desc limit 1", "query": "SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)", "sub_ques": "customers using the most popular payment method", "sun_sql_new": "group by payment_method order by count customers desc limit 1"}
{"db_id": "customers_and_addresses", "sub_sql": "group by payment_method order by count customers desc limit 1", "question": "Find the name of the customers who use the most frequently used payment method.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count customers desc limit 1", "query": "SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)", "sub_ques": "the customers who use the most frequently used payment method", "sun_sql_new": "group by payment_method order by count customers desc limit 1"}
{"db_id": "customers_and_addresses", "sub_sql": "group by t3.city order by count customers desc limit 1", "question": "Which city has the most customers living in?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count customers desc limit 1", "query": "SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id GROUP BY t3.city ORDER BY count(*) DESC LIMIT 1", "sub_ques": "city has the most customers living in", "sun_sql_new": "group by t3.city order by count customers desc limit 1"}
{"db_id": "customers_and_addresses", "sub_sql": "group by t3.city order by count customers desc limit 1", "question": "Find the city where the most customers live.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count customers desc limit 1", "query": "SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id GROUP BY t3.city ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the city where the most customers live", "sun_sql_new": "group by t3.city order by count customers desc limit 1"}
{"db_id": "customers_and_addresses", "sub_sql": "group by country having count address_id > 4", "question": "List the countries having more than 4 addresses listed.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4", "sub_ques": "countries having more than 4 addresses listed", "sun_sql_new": "group by country having count address_id more than 4"}
{"db_id": "customers_and_addresses", "sub_sql": "group by country having count address_id > 4", "question": "For which countries are there more than four distinct addresses listed?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4", "sub_ques": "countries are there more than four distinct addresses listed", "sun_sql_new": "group by country having count address_id more than 4"}
{"db_id": "customers_and_addresses", "sub_sql": "group by channel_code having count customer_id < 5", "question": "List all the contact channel codes that were used less than 5 times.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count(customer_id)  <  5", "sub_ques": "channel codes that were used less than 5 times", "sun_sql_new": "group by channel_code having count customer_id less than 5"}
{"db_id": "customers_and_addresses", "sub_sql": "group by channel_code having count customer_id < 5", "question": "Which contact channel codes were used less than 5 times?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count(customer_id)  <  5", "sub_ques": "channel codes were used less than 5 times", "sun_sql_new": "group by channel_code having count customer_id less than 5"}
{"db_id": "customers_and_addresses", "sub_sql": "group by t1.customer_name order by sum t3.order_quantity desc limit 1", "question": "What is the name of the customer that has purchased the most items?", "sub_sql_type": "null null agg col col null null limv", "sub_sql_new": "order by sum order quantity desc limit 1", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1", "sub_ques": "the name of the customer that has purchased the most items", "sun_sql_new": "group by t1.customer_name order by sum t3.order_quantity desc limit 1"}
{"db_id": "customers_and_addresses", "sub_sql": "group by t1.customer_name order by sum t3.order_quantity desc limit 1", "question": "Give me the name of the customer who ordered the most items in total.", "sub_sql_type": "null null agg col col null null limv", "sub_sql_new": "order by sum order quantity desc limit 1", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1", "sub_ques": "the name of the customer who ordered the most items in total", "sun_sql_new": "group by t1.customer_name order by sum t3.order_quantity desc limit 1"}
{"db_id": "customers_and_addresses", "sub_sql": "group by t1.customer_name order by sum t3.order_quantity limit 1", "question": "What is the payment method of the customer that has purchased the least quantity of items?", "sub_sql_type": "null null agg col col null limv", "sub_sql_new": "order by sum order quantity limit 1", "query": "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1", "sub_ques": "the customer that has purchased the least quantity of items", "sun_sql_new": "group by t1.customer_name order by sum t3.order_quantity limit 1"}
{"db_id": "customers_and_addresses", "sub_sql": "group by t1.customer_name order by sum t3.order_quantity limit 1", "question": "Tell me the payment method used by the customer who ordered the least amount of goods in total.", "sub_sql_type": "null null agg col col null limv", "sub_sql_new": "order by sum order quantity limit 1", "query": "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1", "sub_ques": "the customer who ordered the least amount of goods in total", "sun_sql_new": "group by t1.customer_name order by sum t3.order_quantity limit 1"}
{"db_id": "customers_and_addresses", "sub_sql": "group by t1.product_id order by count order_items desc limit 1", "question": "Which product has been ordered most number of times?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count order_items desc limit 1", "query": "SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "product has been ordered most number of times", "sun_sql_new": "group by t1.product_id order by count order_items desc limit 1"}
{"db_id": "customers_and_addresses", "sub_sql": "group by t1.product_id order by count order_items desc limit 1", "question": "What is the most frequently ordered product? Tell me the detail of the product", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count order_items desc limit 1", "query": "SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the most frequently ordered product", "sun_sql_new": "group by t1.product_id order by count order_items desc limit 1"}
{"db_id": "customers_and_addresses", "sub_sql": "group by t1.product_id order by sum t1.order_quantity limit 1", "question": "Find the name and ID of the product whose total order quantity is the largest.", "sub_sql_type": "null null agg col col null limv", "sub_sql_new": "order by sum order quantity limit 1", "query": "SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1", "sub_ques": "the product whose total order quantity is the largest", "sun_sql_new": "group by t1.product_id order by sum t1.order_quantity limit 1"}
{"db_id": "customers_and_addresses", "sub_sql": "group by t1.product_id order by sum t1.order_quantity limit 1", "question": "What are the name and ID of the product bought the most.", "sub_sql_type": "null null agg col col null limv", "sub_sql_new": "order by sum order quantity limit 1", "query": "SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1", "sub_ques": "ID of the product bought the most", "sun_sql_new": "group by t1.product_id order by sum t1.order_quantity limit 1"}
{"db_id": "music_4", "sub_sql": "group by result order by count music_festival desc limit 1", "question": "What is the most common result of the music festival?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count music_festival desc limit 1", "query": "SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the most common result of the music festival", "sun_sql_new": "group by result order by count music_festival desc limit 1"}
{"db_id": "music_4", "sub_sql": "group by result order by count music_festival desc limit 1", "question": "Return the result that is most frequent at music festivals.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count music_festival desc limit 1", "query": "SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the result that is most frequent at music festivals", "sun_sql_new": "group by result order by count music_festival desc limit 1"}
{"db_id": "music_4", "sub_sql": "group by category having count music_festival > 1", "question": "Please show the categories of the music festivals with count more than 1.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1", "sub_ques": "categories of the music festivals with count more than 1", "sun_sql_new": "group by category having count music_festival more than 1"}
{"db_id": "music_4", "sub_sql": "group by category having count music_festival > 1", "question": "What are the categories of music festivals for which there have been more than 1 music festival?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1", "sub_ques": "categories of music festivals for which there have been more than 1 music festival", "sun_sql_new": "group by category having count music_festival more than 1"}
{"db_id": "music_4", "sub_sql": "group by result order by count music_festival desc", "question": "Please show the results of music festivals and the number of music festivals that have had each, ordered by this count.", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count music_festival desc", "query": "SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC", "sub_ques": "the results of music festivals ordered by this count", "sun_sql_new": "group by result order by count music_festival desc"}
{"db_id": "music_4", "sub_sql": "group by result order by count music_festival desc", "question": "How many music festivals have had each kind of result, ordered descending by count?", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count music_festival desc", "query": "SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC", "sub_ques": "result , ordered descending by count", "sun_sql_new": "group by result order by count music_festival desc"}
{"db_id": "roller_coaster", "sub_sql": "group by status order by count roller_coaster desc limit 1", "question": "Please show the most common status of roller coasters.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count roller_coaster desc limit 1", "query": "SELECT Status FROM roller_coaster GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1", "sub_ques": "the most common status of roller coasters", "sun_sql_new": "group by status order by count roller_coaster desc limit 1"}
{"db_id": "roller_coaster", "sub_sql": "group by status having count roller_coaster > 2", "question": "List the status shared by more than two roller coaster.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Status FROM roller_coaster GROUP BY Status HAVING COUNT(*)  >  2", "sub_ques": "status shared by more than two roller coaster", "sun_sql_new": "group by status having count roller_coaster more than 2"}
{"db_id": "roller_coaster", "sub_sql": "group by t1.name having count roller_coaster > 1", "question": "Show the names of countries that have more than one roller coaster.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "sub_ques": "names of countries that have more than one roller coaster", "sun_sql_new": "group by t1.name having count roller_coaster more than 1"}
{"db_id": "ship_1", "sub_sql": "group by rank order by count captain desc limit 1", "question": "Which rank is the most common among captains?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count captain desc limit 1", "query": "SELECT rank FROM captain GROUP BY rank ORDER BY count(*) DESC LIMIT 1", "sub_ques": "rank is the most common among captains", "sun_sql_new": "group by rank order by count captain desc limit 1"}
{"db_id": "ship_1", "sub_sql": "group by rank order by count captain desc limit 1", "question": "Return the rank for which there are the fewest captains.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count captain desc limit 1", "query": "SELECT rank FROM captain GROUP BY rank ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the rank for which there are the fewest captains", "sun_sql_new": "group by rank order by count captain desc limit 1"}
{"db_id": "ship_1", "sub_sql": "group by class having count captain > 2", "question": "Which classes have more than two captains?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2", "sub_ques": "classes have more than two captains", "sun_sql_new": "group by class having count captain more than 2"}
{"db_id": "ship_1", "sub_sql": "group by class having count captain > 2", "question": "Give the classes that have more than two captains.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2", "sub_ques": "classes that have more than two captains", "sun_sql_new": "group by class having count captain more than 2"}
{"db_id": "ship_1", "sub_sql": "group by flag order by count ship desc limit 1", "question": "Which flag is most widely used among all ships?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count ship desc limit 1", "query": "SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1", "sub_ques": "flag is most widely used among all ships", "sun_sql_new": "group by flag order by count ship desc limit 1"}
{"db_id": "ship_1", "sub_sql": "group by flag order by count ship desc limit 1", "question": "Return the flag that is most common among all ships.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count ship desc limit 1", "query": "SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the flag that is most common among all ships", "sun_sql_new": "group by flag order by count ship desc limit 1"}
{"db_id": "ship_1", "sub_sql": "group by built_year order by count ship desc limit 1", "question": "In which year were most of ships built?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count ship desc limit 1", "query": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1", "sub_ques": "year were most of ships built", "sun_sql_new": "group by built_year order by count ship desc limit 1"}
{"db_id": "ship_1", "sub_sql": "group by built_year order by count ship desc limit 1", "question": "What is the year in which most ships were built?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count ship desc limit 1", "query": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the year in which most ships were built", "sun_sql_new": "group by built_year order by count ship desc limit 1"}
{"db_id": "ship_1", "sub_sql": "group by t2.ship_id having count captain > 1", "question": "Find the name of the ships that have more than one captain.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id HAVING count(*)  >  1", "sub_ques": "the ships that have more than one captain", "sun_sql_new": "group by t2.ship_id having count captain more than 1"}
{"db_id": "ship_1", "sub_sql": "group by t2.ship_id having count captain > 1", "question": "What are the names of ships that have more than one captain?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id HAVING count(*)  >  1", "sub_ques": "ships that have more than one captain", "sun_sql_new": "group by t2.ship_id having count captain more than 1"}
{"db_id": "city_record", "sub_sql": "group by t2.host_city order by count city desc limit 1", "question": "Which city has hosted the most events?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count city desc limit 1", "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY T2.host_city ORDER BY count(*) DESC LIMIT 1", "sub_ques": "city has hosted the most events", "sun_sql_new": "group by t2.host_city order by count city desc limit 1"}
{"db_id": "city_record", "sub_sql": "group by t2.host_city order by count city desc limit 1", "question": "Find the city that hosted the most events.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count city desc limit 1", "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY T2.host_city ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the city that hosted the most events", "sun_sql_new": "group by t2.host_city order by count city desc limit 1"}
{"db_id": "city_record", "sub_sql": "group by t2.host_city having count city > 1", "question": "What are the GDP and population of the city that already served as a host more than once?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1", "sub_ques": "city that already served as a host more than once", "sun_sql_new": "group by t2.host_city having count city more than 1"}
{"db_id": "city_record", "sub_sql": "group by t2.host_city having count city > 1", "question": "Which cities have served as host cities more than once? Return me their GDP and population.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1", "sub_ques": "cities have served as host cities more than once", "sun_sql_new": "group by t2.host_city having count city more than 1"}
{"db_id": "e_government", "sub_sql": "group by t2.form_id order by count forms desc limit 1", "question": "Find the name of the most popular party form.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count forms desc limit 1", "query": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the name of the most popular party form", "sun_sql_new": "group by t2.form_id order by count forms desc limit 1"}
{"db_id": "e_government", "sub_sql": "group by t2.form_id order by count forms desc limit 1", "question": "What is the name of the party form that is most common?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count forms desc limit 1", "query": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the party form that is most common", "sun_sql_new": "group by t2.form_id order by count forms desc limit 1"}
{"db_id": "e_government", "sub_sql": "group by form_id order by count parties desc limit 1", "question": "Find the emails of parties with the most popular party form.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count parties desc limit 1", "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)", "sub_ques": "the most popular party form", "sun_sql_new": "group by form_id order by count parties desc limit 1"}
{"db_id": "e_government", "sub_sql": "group by form_id order by count parties desc limit 1", "question": "What are the party emails associated with parties that used the party form that is the most common?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count parties desc limit 1", "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)", "sub_ques": "the party form that is the most common", "sun_sql_new": "group by form_id order by count parties desc limit 1"}
{"db_id": "e_government", "sub_sql": "group by payment_method_code having count parties > 3", "question": "Find the payment method code used by more than 3 parties.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3", "sub_ques": "payment method code used by more than 3 parties", "sun_sql_new": "group by payment_method_code having count parties more than 3"}
{"db_id": "e_government", "sub_sql": "group by payment_method_code having count parties > 3", "question": "What are the payment method codes that have been used by more than 3 parties?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3", "sub_ques": "payment method codes that have been used by more than 3 parties", "sun_sql_new": "group by payment_method_code having count parties more than 3"}
{"db_id": "e_government", "sub_sql": "group by t1.party_email order by count party_services desc limit 1", "question": "Which is the email of the party that has used the services the most number of times?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count party_services desc limit 1", "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the email of the party that has used the services the most number of times", "sun_sql_new": "group by t1.party_email order by count party_services desc limit 1"}
{"db_id": "e_government", "sub_sql": "group by t1.party_email order by count party_services desc limit 1", "question": "Return the party email that has used party services the greatest number of times.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count party_services desc limit 1", "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the party email that has used party services the greatest number of times", "sun_sql_new": "group by t1.party_email order by count party_services desc limit 1"}
{"db_id": "e_government", "sub_sql": "group by t1.organization_name order by count organization_contact_individuals desc limit 1", "question": "What is the name of organization that has the greatest number of contact individuals?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count organization_contact_individuals desc limit 1", "query": "SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the name of organization that has the greatest number of contact individuals", "sun_sql_new": "group by t1.organization_name order by count organization_contact_individuals desc limit 1"}
{"db_id": "e_government", "sub_sql": "group by t1.organization_name order by count organization_contact_individuals desc limit 1", "question": "Return the name of the organization which has the most contact individuals.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count organization_contact_individuals desc limit 1", "query": "SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the name of the organization which has the most contact individuals", "sun_sql_new": "group by t1.organization_name order by count organization_contact_individuals desc limit 1"}
{"db_id": "school_bus", "sub_sql": "group by home_city order by count driver desc limit 1", "question": "Show the home city with the most number of drivers.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count driver desc limit 1", "query": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the home city with the most number of drivers", "sun_sql_new": "group by home_city order by count driver desc limit 1"}
{"db_id": "school_bus", "sub_sql": "group by home_city having count driver >= 2", "question": "Show home city where at least two drivers older than 40 are from.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT home_city FROM driver WHERE age  >  40 GROUP BY home_city HAVING count(*)  >=  2", "sub_ques": "home city where at least two drivers", "sun_sql_new": "group by home_city having count driver no less than 2"}
{"db_id": "school_bus", "sub_sql": "group by type having count school = 2", "question": "Show the types of schools that have two schools.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT TYPE FROM school GROUP BY TYPE HAVING count(*)  =  2", "sub_ques": "types of schools that have two schools", "sun_sql_new": "group by type having count school equal to 2"}
{"db_id": "flight_company", "sub_sql": "group by t1.id having count flight > 1", "question": "What are the ids and names of the companies that operated more than one flight?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.id ,  T1.name FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id GROUP BY T1.id HAVING count(*)  >  1", "sub_ques": "the companies that operated more than one flight", "sun_sql_new": "group by t1.id having count flight more than 1"}
{"db_id": "flight_company", "sub_sql": "group by t2.id order by count flight desc limit 1", "question": "What is the id, name and IATA code of the airport that had most number of flights?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count flight desc limit 1", "query": "SELECT T1.id ,  T1.name ,  T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the airport that had most number of flights", "sun_sql_new": "group by t2.id order by count flight desc limit 1"}
{"db_id": "flight_company", "sub_sql": "group by type order by count operate_company desc limit 1", "question": "What is the most common company type, and how many are there?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count operate_company desc limit 1", "query": "SELECT TYPE ,  count(*) FROM operate_company GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the most common company type", "sun_sql_new": "group by type order by count operate_company desc limit 1"}
{"db_id": "flight_company", "sub_sql": "group by country having count airport > 2", "question": "which countries have more than 2 airports?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT country FROM airport GROUP BY country HAVING count(*)  >  2", "sub_ques": "countries have more than 2 airports", "sun_sql_new": "group by country having count airport more than 2"}
{"db_id": "flight_company", "sub_sql": "group by pilot order by count airport desc limit 1", "question": "which pilot is in charge of the most number of flights?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count airport desc limit 1", "query": "SELECT pilot FROM flight GROUP BY pilot ORDER BY count(*) DESC LIMIT 1", "sub_ques": "pilot is in charge of the most number of flights", "sun_sql_new": "group by pilot order by count airport desc limit 1"}
{"db_id": "cre_Docs_and_Epenses", "sub_sql": "group by t1.statement_id order by count Accounts desc limit 1", "question": "Show the statement id and the statement detail for the statement with most number of accounts.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Accounts desc limit 1", "query": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the statement with most number of accounts", "sun_sql_new": "group by t1.statement_id order by count Accounts desc limit 1"}
{"db_id": "cre_Docs_and_Epenses", "sub_sql": "group by t1.statement_id order by count Accounts desc limit 1", "question": "What are the statement id and statement detail for the statement that has the most corresponding accounts?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Accounts desc limit 1", "query": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the statement that has the most corresponding accounts", "sun_sql_new": "group by t1.statement_id order by count Accounts desc limit 1"}
{"db_id": "cre_Docs_and_Epenses", "sub_sql": "group by project_id order by count Documents asc limit 1", "question": "What is the id of the project with least number of documents?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Documents asc limit 1", "query": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1", "sub_ques": "the id of the project with least number of documents", "sun_sql_new": "group by project_id order by count Documents asc limit 1"}
{"db_id": "cre_Docs_and_Epenses", "sub_sql": "group by project_id order by count Documents asc limit 1", "question": "Return the id of the project that has the fewest corresponding documents.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Documents asc limit 1", "query": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1", "sub_ques": "the id of the project that has the fewest corresponding documents", "sun_sql_new": "group by project_id order by count Documents asc limit 1"}
{"db_id": "cre_Docs_and_Epenses", "sub_sql": "group by project_id having count Documents >= 2", "question": "Show the ids for projects with at least 2 documents.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2", "sub_ques": "ids for projects with at least 2 documents", "sun_sql_new": "group by project_id having count Documents no less than 2"}
{"db_id": "cre_Docs_and_Epenses", "sub_sql": "group by project_id having count Documents >= 2", "question": "What are project ids of projects that have 2 or more corresponding documents?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2", "sub_ques": "ids of projects that have 2 or more corresponding documents", "sun_sql_new": "group by project_id having count Documents no less than 2"}
{"db_id": "cre_Docs_and_Epenses", "sub_sql": "group by document_type_code order by count Documents desc limit 1", "question": "What is the document type code with most number of documents?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Documents desc limit 1", "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the document type code with most number of documents", "sun_sql_new": "group by document_type_code order by count Documents desc limit 1"}
{"db_id": "cre_Docs_and_Epenses", "sub_sql": "group by document_type_code order by count Documents desc limit 1", "question": "Return the code of the document type that is most common.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Documents desc limit 1", "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the code of the document type that is most common", "sun_sql_new": "group by document_type_code order by count Documents desc limit 1"}
{"db_id": "cre_Docs_and_Epenses", "sub_sql": "group by document_type_code having count Documents < 3", "question": "Show the document type code with fewer than 3 documents.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*)  <  3", "sub_ques": "document type code with fewer than 3 documents", "sun_sql_new": "group by document_type_code having count Documents less than 3"}
{"db_id": "cre_Docs_and_Epenses", "sub_sql": "group by document_type_code having count Documents < 3", "question": "What are the codes corresponding to document types for which there are less than 3 documents?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*)  <  3", "sub_ques": "document types for which there are less than 3 documents", "sun_sql_new": "group by document_type_code having count Documents less than 3"}
{"db_id": "cre_Docs_and_Epenses", "sub_sql": "group by t1.project_id having count Documents > 2", "question": "What is the project id and detail for the project with at least two documents?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2", "sub_ques": "the project with at least two documents", "sun_sql_new": "group by t1.project_id having count Documents more than 2"}
{"db_id": "cre_Docs_and_Epenses", "sub_sql": "group by t1.project_id having count Documents > 2", "question": "Return the ids and details corresponding to projects for which there are more than two documents.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2", "sub_ques": "projects for which there are more than two documents", "sun_sql_new": "group by t1.project_id having count Documents more than 2"}
{"db_id": "cre_Docs_and_Epenses", "sub_sql": "group by budget_type_code order by count Documents_with_expenses desc limit 1", "question": "What is the budget type code with most number of documents.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Documents_with_expenses desc limit 1", "query": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the budget type code with most number of documents", "sun_sql_new": "group by budget_type_code order by count Documents_with_expenses desc limit 1"}
{"db_id": "cre_Docs_and_Epenses", "sub_sql": "group by budget_type_code order by count Documents_with_expenses desc limit 1", "question": "Give the budget type code that is most common among documents with expenses.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Documents_with_expenses desc limit 1", "query": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the budget type code that is most common among documents with expenses", "sun_sql_new": "group by budget_type_code order by count Documents_with_expenses desc limit 1"}
{"db_id": "scientist_1", "sub_sql": "group by t2.project order by count assignedto desc limit 1", "question": "Find the name and hours of project that has the most number of scientists.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count assignedto desc limit 1", "query": "SELECT T1.name ,  T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T2.project ORDER BY count(*) DESC LIMIT 1", "sub_ques": "project that has the most number of scientists", "sun_sql_new": "group by t2.project order by count assignedto desc limit 1"}
{"db_id": "scientist_1", "sub_sql": "group by t2.project order by count assignedto desc limit 1", "question": "What is the name and hours for the project which has the most scientists assigned to it?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count assignedto desc limit 1", "query": "SELECT T1.name ,  T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T2.project ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the project which has the most scientists assigned to it", "sun_sql_new": "group by t2.project order by count assignedto desc limit 1"}
{"db_id": "wine_1", "sub_sql": "group by t2.appelation having t2.year < 2010", "question": "What is the area for the appelation which produced the most wines prior to 2010?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the appelation which produced the most wines prior to 2010", "sun_sql_new": "group by t2.appelation having t2.year less than 2010"}
{"db_id": "wine_1", "sub_sql": "group by t2.grape order by avg price desc limit 1", "question": "What is the color of the grape whose wine products has the highest average price?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by avg price desc limit 1", "query": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1", "sub_ques": "grape whose wine products has the highest average price", "sun_sql_new": "group by t2.grape order by avg price desc limit 1"}
{"db_id": "wine_1", "sub_sql": "group by t2.grape order by avg price desc limit 1", "question": "Give the color of the grape whose wine products have the highest average price?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by avg price desc limit 1", "query": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1", "sub_ques": "the grape whose wine products have the highest average price", "sun_sql_new": "group by t2.grape order by avg price desc limit 1"}
{"db_id": "wine_1", "sub_sql": "group by winery having count wine >= 4", "question": "Find the wineries that have at least four wines.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4", "sub_ques": "wineries that have at least four wines", "sun_sql_new": "group by winery having count wine no less than 4"}
{"db_id": "wine_1", "sub_sql": "group by winery having count wine >= 4", "question": "Which wineries produce at least four wines?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4", "sub_ques": "wineries produce at least four wines", "sun_sql_new": "group by winery having count wine no less than 4"}
{"db_id": "wine_1", "sub_sql": "group by t2.appelation having count wine <= 3", "question": "Find the country of all appelations who have at most three wines.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3", "sub_ques": "appelations who have at most three wines", "sun_sql_new": "group by t2.appelation having count wine no more than 3"}
{"db_id": "wine_1", "sub_sql": "group by t2.appelation having count wine <= 3", "question": "What are the countries for appelations with at most 3 wines?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3", "sub_ques": "appelations with at most 3 wines", "sun_sql_new": "group by t2.appelation having count wine no more than 3"}
{"db_id": "wine_1", "sub_sql": "group by t2.winery order by count wine desc limit 3", "question": "Find the top 3 wineries with the greatest number of wines made of white color grapes.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count wine desc limit 3", "query": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  \\\\\\\\\\\\\\\"White\\\\\\\\\\\\\\\" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3", "sub_ques": "the top 3 wineries with the greatest number of wines", "sun_sql_new": "group by t2.winery order by count wine desc limit 3"}
{"db_id": "wine_1", "sub_sql": "group by t2.winery order by count wine desc limit 3", "question": "Which 3 wineries produce the most wines made from white grapes?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count wine desc limit 3", "query": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  \\\\\\\\\\\\\\\"White\\\\\\\\\\\\\\\" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3", "sub_ques": "3 wineries produce the most wines", "sun_sql_new": "group by t2.winery order by count wine desc limit 3"}
{"db_id": "wine_1", "sub_sql": "group by t1.county order by count wine desc limit 1", "question": "Find the county where produces the most number of wines with score higher than 90.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count wine desc limit 1", "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T2.Score  >  90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the county where produces the most number of wines", "sun_sql_new": "group by t1.county order by count wine desc limit 1"}
{"db_id": "wine_1", "sub_sql": "group by t1.county order by count wine desc limit 1", "question": "What is the county that produces the most wines scoring higher than 90?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count wine desc limit 1", "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T2.Score  >  90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the county that produces the most wines", "sun_sql_new": "group by t1.county order by count wine desc limit 1"}
{"db_id": "train_station", "sub_sql": "group by location order by count station desc limit 1", "question": "Show the location with most number of train stations.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count station desc limit 1", "query": "SELECT LOCATION FROM station GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the location with most number of train stations", "sun_sql_new": "group by location order by count station desc limit 1"}
{"db_id": "train_station", "sub_sql": "group by t1.station_id order by count train_station desc limit 1", "question": "Show the station name with greatest number of trains.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count train_station desc limit 1", "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "station name with greatest number of trains", "sun_sql_new": "group by t1.station_id order by count train_station desc limit 1"}
{"db_id": "train_station", "sub_sql": "group by t1.station_id having count train_station >= 2", "question": "Show the station name with at least two trains.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id HAVING count(*)  >=  2", "sub_ques": "the station name with at least two trains", "sun_sql_new": "group by t1.station_id having count train_station no less than 2"}
{"db_id": "train_station", "sub_sql": "group by location having count station = 1", "question": "Show all locations with only 1 station.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT LOCATION FROM station GROUP BY LOCATION HAVING count(*)  =  1", "sub_ques": "locations with only 1 station", "sun_sql_new": "group by location having count station equal to 1"}
{"db_id": "driving_school", "sub_sql": "group by t1.city order by count Staff desc limit 1", "question": "Which city lives most of staffs? List the city name and number of staffs.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Staff desc limit 1", "query": "SELECT T1.city ,  count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1;", "sub_ques": "city lives most of staffs", "sun_sql_new": "group by t1.city order by count Staff desc limit 1"}
{"db_id": "driving_school", "sub_sql": "group by t1.city order by count Staff desc limit 1", "question": "In which city do the most employees live and how many of them live there?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Staff desc limit 1", "query": "SELECT T1.city ,  count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1;", "sub_ques": "city do the most employees live", "sun_sql_new": "group by t1.city order by count Staff desc limit 1"}
{"db_id": "driving_school", "sub_sql": "group by t1.state_province_county having count Staff between 2 and 4", "question": "List the states which have between 2 to 4 staffs living there.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;", "sub_ques": "states which have between 2 to 4 staffs living there", "sun_sql_new": "group by t1.state_province_county having count Staff between 2 and 4"}
{"db_id": "driving_school", "sub_sql": "group by t1.state_province_county having count Staff between 2 and 4", "question": "What are the names of the states that have 2 to 4 employees living there?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;", "sub_ques": "names of the states that have 2 to 4 employees living there", "sun_sql_new": "group by t1.state_province_county having count Staff between 2 and 4"}
{"db_id": "driving_school", "sub_sql": "group by customer_status_code order by count customers asc limit 1", "question": "Which customer status code has least number of customers?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count customers asc limit 1", "query": "SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count(*) ASC LIMIT 1;", "sub_ques": "customer status code has least number of customers", "sun_sql_new": "group by customer_status_code order by count customers asc limit 1"}
{"db_id": "driving_school", "sub_sql": "group by customer_status_code order by count customers asc limit 1", "question": "What is the status code with the least number of customers?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count customers asc limit 1", "query": "SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count(*) ASC LIMIT 1;", "sub_ques": "the status code with the least number of customers", "sun_sql_new": "group by customer_status_code order by count customers asc limit 1"}
{"db_id": "driving_school", "sub_sql": "group by t2.city order by count customers desc limit 1", "question": "Which city does has most number of customers?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count customers desc limit 1", "query": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;", "sub_ques": "city does has most number of customers", "sun_sql_new": "group by t2.city order by count customers desc limit 1"}
{"db_id": "driving_school", "sub_sql": "group by t2.city order by count customers desc limit 1", "question": "What is the city with the most customers?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count customers desc limit 1", "query": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;", "sub_ques": "the city with the most customers", "sun_sql_new": "group by t2.city order by count customers desc limit 1"}
{"db_id": "driving_school", "sub_sql": "group by t1.customer_id having count Customer_Payments > 2", "question": "List first name and last name of customers that have more than 2 payments.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.first_name ,  T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2;", "sub_ques": "customers that have more than 2 payments", "sun_sql_new": "group by t1.customer_id having count Customer_Payments more than 2"}
{"db_id": "driving_school", "sub_sql": "group by t1.customer_id having count Customer_Payments > 2", "question": "What are the first and last names of all customers with more than 2 payments?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.first_name ,  T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2;", "sub_ques": "customers with more than 2 payments", "sun_sql_new": "group by t1.customer_id having count Customer_Payments more than 2"}
{"db_id": "driving_school", "sub_sql": "group by t1.vehicle_id order by count Lessons desc limit 1", "question": "What is the id and detail of the vehicle used in lessons for most of the times?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Lessons desc limit 1", "query": "SELECT T1.vehicle_id ,  T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the vehicle used in lessons for most of the times", "sun_sql_new": "group by t1.vehicle_id order by count Lessons desc limit 1"}
{"db_id": "activity_1", "sub_sql": "group by building order by count Faculty desc limit 1", "question": "Which building has most faculty members?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Faculty desc limit 1", "query": "SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1", "sub_ques": "building has most faculty members", "sun_sql_new": "group by building order by count Faculty desc limit 1"}
{"db_id": "activity_1", "sub_sql": "group by building order by count Faculty desc limit 1", "question": "Find the building that has the largest number of faculty members.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Faculty desc limit 1", "query": "SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the building that has the largest number of faculty members", "sun_sql_new": "group by building order by count Faculty desc limit 1"}
{"db_id": "activity_1", "sub_sql": "group by building having count Faculty >= 10", "question": "Show all the buildings that have at least 10 professors.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT building FROM Faculty WHERE rank  =  \\\\\\\\\\\\\\\"Professor\\\\\\\\\\\\\\\" GROUP BY building HAVING count(*)  >=  10", "sub_ques": "buildings that have at least 10 professors", "sun_sql_new": "group by building having count Faculty no less than 10"}
{"db_id": "activity_1", "sub_sql": "group by building having count Faculty >= 10", "question": "In which buildings are there at least ten professors?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT building FROM Faculty WHERE rank  =  \\\\\\\\\\\\\\\"Professor\\\\\\\\\\\\\\\" GROUP BY building HAVING count(*)  >=  10", "sub_ques": "buildings are there at least ten professors", "sun_sql_new": "group by building having count Faculty no less than 10"}
{"db_id": "activity_1", "sub_sql": "group by rank order by count Faculty asc limit 1", "question": "Which rank has the smallest number of faculty members?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Faculty asc limit 1", "query": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1", "sub_ques": "rank has the smallest number of faculty members", "sun_sql_new": "group by rank order by count Faculty asc limit 1"}
{"db_id": "activity_1", "sub_sql": "group by rank order by count Faculty asc limit 1", "question": "Find the faculty rank that has the least members.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Faculty asc limit 1", "query": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1", "sub_ques": "the faculty rank that has the least members", "sun_sql_new": "group by rank order by count Faculty asc limit 1"}
{"db_id": "activity_1", "sub_sql": "group by t1.facid order by count Student desc limit 1", "question": "What are the first and last name of the faculty who has the most students?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Student desc limit 1", "query": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the faculty who has the most students", "sun_sql_new": "group by t1.facid order by count Student desc limit 1"}
{"db_id": "activity_1", "sub_sql": "group by t1.facid order by count student desc limit 1", "question": "Give me the the first and last name of the faculty who advises the most students.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count student desc limit 1", "query": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the faculty who advises the most students", "sun_sql_new": "group by t1.facid order by count student desc limit 1"}
{"db_id": "activity_1", "sub_sql": "group by t1.facid having count Student >= 2", "question": "Show the ids for all the faculty members who have at least 2 students.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2", "sub_ques": "ids for all the faculty members who have at least 2 students", "sun_sql_new": "group by t1.facid having count Student no less than 2"}
{"db_id": "activity_1", "sub_sql": "group by t1.facid having count Student >= 2", "question": "Which faculty members advise two ore more students? Give me their faculty ids.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2", "sub_ques": "faculty members advise two ore more students", "sun_sql_new": "group by t1.facid having count Student no less than 2"}
{"db_id": "activity_1", "sub_sql": "group by t1.facid order by count Faculty_participates_in desc limit 1", "question": "What is the first and last name of the faculty participating in the most activities?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Faculty_participates_in desc limit 1", "query": "SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the faculty participating in the most activities", "sun_sql_new": "group by t1.facid order by count Faculty_participates_in desc limit 1"}
{"db_id": "activity_1", "sub_sql": "group by t1.facid order by count Faculty_participates_in desc limit 1", "question": "Find the first and last name of the faculty who is involved in the largest number of activities.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Faculty_participates_in desc limit 1", "query": "SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the faculty who is involved in the largest number of activities", "sun_sql_new": "group by t1.facid order by count Faculty_participates_in desc limit 1"}
{"db_id": "activity_1", "sub_sql": "group by t1.actid order by count Faculty_participates_in desc limit 1", "question": "What is the name of the activity that has the most faculty members involved in?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Faculty_participates_in desc limit 1", "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the activity that has the most faculty members involved in", "sun_sql_new": "group by t1.actid order by count Faculty_participates_in desc limit 1"}
{"db_id": "activity_1", "sub_sql": "group by t1.actid order by count Faculty_participates_in desc limit 1", "question": "Which activity has the most faculty members participating in? Find the activity name.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Faculty_participates_in desc limit 1", "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1", "sub_ques": "activity has the most faculty members participating in", "sun_sql_new": "group by t1.actid order by count Faculty_participates_in desc limit 1"}
{"db_id": "activity_1", "sub_sql": "group by t1.stuid order by count Participates_in desc limit 1", "question": "What is the first and last name of the student participating in the most activities?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Participates_in desc limit 1", "query": "SELECT T1.fname ,  T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the student participating in the most activities", "sun_sql_new": "group by t1.stuid order by count Participates_in desc limit 1"}
{"db_id": "activity_1", "sub_sql": "group by t1.stuid order by count Participates_in desc limit 1", "question": "Tell me the first and last name of the student who has the most activities.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Participates_in desc limit 1", "query": "SELECT T1.fname ,  T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the student who has the most activities", "sun_sql_new": "group by t1.stuid order by count Participates_in desc limit 1"}
{"db_id": "activity_1", "sub_sql": "group by t1.actid order by count Participates_in desc limit 1", "question": "What is the name of the activity with the most students?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Participates_in desc limit 1", "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the activity with the most students", "sun_sql_new": "group by t1.actid order by count Participates_in desc limit 1"}
{"db_id": "activity_1", "sub_sql": "group by t1.actid order by count Participates_in desc limit 1", "question": "Find the name of the activity that has the largest number of student participants.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count Participates_in desc limit 1", "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the activity that has the largest number of student participants", "sun_sql_new": "group by t1.actid order by count Participates_in desc limit 1"}
{"db_id": "flight_4", "sub_sql": "group by t2.dst_apid order by count routes desc limit 1", "question": "Find the name and city of the airport which is the destination of the most number of routes.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count routes desc limit 1", "query": "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the airport which is the destination of the most number of routes", "sun_sql_new": "group by t2.dst_apid order by count routes desc limit 1"}
{"db_id": "flight_4", "sub_sql": "group by t2.dst_apid order by count routes desc limit 1", "question": "What is the name and city of the airport that the most routes end at?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count routes desc limit 1", "query": "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1", "sub_ques": "city of the airport that the most routes end at", "sun_sql_new": "group by t2.dst_apid order by count routes desc limit 1"}
{"db_id": "flight_4", "sub_sql": "group by t2.alid order by count routes desc limit 10", "question": "Find the names of the top 10 airlines that operate the most number of routes.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count routes desc limit 10", "query": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10", "sub_ques": "the top 10 airlines that operate the most number of routes", "sun_sql_new": "group by t2.alid order by count routes desc limit 10"}
{"db_id": "flight_4", "sub_sql": "group by t2.alid order by count routes desc limit 10", "question": "For the airline ids with the top 10 most routes operated, what are their names?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count routes desc limit 10", "query": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10", "sub_ques": "the airline ids with the top 10 most routes", "sun_sql_new": "group by t2.alid order by count routes desc limit 10"}
{"db_id": "flight_4", "sub_sql": "group by t2.src_apid order by count routes desc limit 1", "question": "Find the name and city of the airport which is the source for the most number of flight routes.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count routes desc limit 1", "query": "SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the airport which is the source for the most number of flight routes", "sun_sql_new": "group by t2.src_apid order by count routes desc limit 1"}
{"db_id": "flight_4", "sub_sql": "group by t2.src_apid order by count routes desc limit 1", "question": "What is the name and city of the airport from most of the routes start?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count routes desc limit 1", "query": "SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1", "sub_ques": "city of the airport from most of the routes start", "sun_sql_new": "group by t2.src_apid order by count routes desc limit 1"}
{"db_id": "flight_4", "sub_sql": "group by country order by count airlines desc limit 1", "question": "Which countries has the most number of airlines?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count airlines desc limit 1", "query": "SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1", "sub_ques": "countries has the most number of airlines", "sun_sql_new": "group by country order by count airlines desc limit 1"}
{"db_id": "flight_4", "sub_sql": "group by country order by count airlines desc limit 1", "question": "What is the name of the country with the most number of home airlines?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count airlines desc limit 1", "query": "SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the country with the most number of home airlines", "sun_sql_new": "group by country order by count airlines desc limit 1"}
{"db_id": "flight_4", "sub_sql": "group by country order by count airlines desc limit 1", "question": "Which countries has the most number of airlines whose active status is 'Y'?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count airlines desc limit 1", "query": "SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1", "sub_ques": "countries has the most number of airlines", "sun_sql_new": "group by country order by count airlines desc limit 1"}
{"db_id": "flight_4", "sub_sql": "group by country order by count airlines desc limit 1", "question": "What are the countries with the most airlines whose active status is Y?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count airlines desc limit 1", "query": "SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the countries with the most airlines", "sun_sql_new": "group by country order by count airlines desc limit 1"}
{"db_id": "flight_4", "sub_sql": "group by country order by count airlines desc", "question": "List all countries and their number of airlines in the descending order of number of airlines.", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count airlines desc", "query": "SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC", "sub_ques": "countries and their number of airlines in the descending order of number of airlines", "sun_sql_new": "group by country order by count airlines desc"}
{"db_id": "flight_4", "sub_sql": "group by country order by count airlines desc", "question": "How many airlines operate out of each country in descending order?", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count airlines desc", "query": "SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC", "sub_ques": "airlines operate out of each country in descending order", "sun_sql_new": "group by country order by count airlines desc"}
{"db_id": "flight_4", "sub_sql": "group by country order by count airports desc", "question": "How many airports are there per country? Order the countries by decreasing number of airports.", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count airports desc", "query": "SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC", "sub_ques": "order the countries by decreasing number of airports", "sun_sql_new": "group by country order by count airports desc"}
{"db_id": "flight_4", "sub_sql": "group by country order by count airports desc", "question": "What is the number of airports per country, ordered from most to least?", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count airports desc", "query": "SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC", "sub_ques": "the number of airports per country , ordered from most to least", "sun_sql_new": "group by country order by count airports desc"}
{"db_id": "flight_4", "sub_sql": "group by city order by count airports desc", "question": "How many airports are there per city in the United States? Order the cities by decreasing number of airports.", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count airports desc", "query": "SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC", "sub_ques": "order the cities by decreasing number of airports", "sun_sql_new": "group by city order by count airports desc"}
{"db_id": "flight_4", "sub_sql": "group by city order by count airports desc", "question": "How many airports are there per city in the US ordered from most to least?", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count airports desc", "query": "SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC", "sub_ques": "airports per city ordered from most to least", "sun_sql_new": "group by city order by count airports desc"}
{"db_id": "flight_4", "sub_sql": "group by city having count airports > 3", "question": "Return the cities with more than 3 airports in the United States.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3", "sub_ques": "cities with more than 3 airports", "sun_sql_new": "group by city having count airports more than 3"}
{"db_id": "flight_4", "sub_sql": "group by city having count airports > 3", "question": "What is the number of cities in the United States with more than 3 airports?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3", "sub_ques": "the number of cities in the united states with more than 3 airports", "sun_sql_new": "group by city having count airports more than 3"}
{"db_id": "flight_4", "sub_sql": "group by city having count airports > 1", "question": "List the cities which have more than one airport and number of airports.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1", "sub_ques": "cities which have more than one airport", "sun_sql_new": "group by city having count airports more than 1"}
{"db_id": "flight_4", "sub_sql": "group by city having count airports > 1", "question": "What are the names of all cities with more than one airport and how many airports do they have?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1", "sub_ques": "cities with more than one airport", "sun_sql_new": "group by city having count airports more than 1"}
{"db_id": "flight_4", "sub_sql": "group by city having count airports > 2", "question": "List the cities which have more than 2 airports sorted by the number of airports.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*)", "sub_ques": "cities which have more than 2 airports sorted by the number of airports", "sun_sql_new": "group by city having count airports more than 2"}
{"db_id": "flight_4", "sub_sql": "group by city having count airports > 2", "question": "What are the cities that have more than 2 airports sorted by number of airports?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*)", "sub_ques": "cities that have more than 2 airports sorted by number of airports", "sun_sql_new": "group by city having count airports more than 2"}
{"db_id": "flight_4", "sub_sql": "group by t1.name order by count routes desc", "question": "Find the number of routes and airport name for each source airport, order the results by decreasing number of routes.", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count routes desc", "query": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC", "sub_ques": "the number of routes for each source airport , order the results by decreasing number", "sun_sql_new": "group by t1.name order by count routes desc"}
{"db_id": "flight_4", "sub_sql": "group by t1.name order by count routes desc", "question": "For each  airport name, how many routes start at that airport, ordered from most to least?", "sub_sql_type": "null null agg col null", "sub_sql_new": "order by count routes desc", "query": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC", "sub_ques": "how many routes start at that airport , ordered from most to least", "sun_sql_new": "group by t1.name order by count routes desc"}
{"db_id": "flight_4", "sub_sql": "group by city having count airports = 2", "question": "Find the cities which have exactly two airports.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2", "sub_ques": "cities which have exactly two airports", "sun_sql_new": "group by city having count airports equal to 2"}
{"db_id": "flight_4", "sub_sql": "group by city having count airports = 2", "question": "What are the cities with exactly two airports?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2", "sub_ques": "cities with exactly two airports", "sun_sql_new": "group by city having count airports equal to 2"}
{"db_id": "flight_4", "sub_sql": "group by t1.name order by count routes desc limit 1", "question": "Find the name of airline which runs the most number of routes.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count routes desc limit 1", "query": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the name of airline which runs the most number of routes", "sun_sql_new": "group by t1.name order by count routes desc limit 1"}
{"db_id": "flight_4", "sub_sql": "group by t1.name order by count routes desc limit 1", "question": "What is the name of the airline with the most routes?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count routes desc limit 1", "query": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the name of the airline with the most routes", "sun_sql_new": "group by t1.name order by count routes desc limit 1"}
{"db_id": "flight_4", "sub_sql": "group by t1.name order by count routes desc limit 1", "question": "Find the busiest source airport that runs most number of routes in China.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count routes desc limit 1", "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "sub_ques": "airport that runs most number of routes", "sun_sql_new": "group by t1.name order by count routes desc limit 1"}
{"db_id": "flight_4", "sub_sql": "group by t1.name order by count routes desc limit 1", "question": "What is the name of the airport with the most number of routes that start in China?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count routes desc limit 1", "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the name of the airport with the most number of routes", "sun_sql_new": "group by t1.name order by count routes desc limit 1"}
{"db_id": "flight_4", "sub_sql": "group by t1.name order by count routes desc limit 1", "question": "Find the busiest destination airport that runs most number of routes in China.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count routes desc limit 1", "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "sub_ques": "airport that runs most number of routes", "sun_sql_new": "group by t1.name order by count routes desc limit 1"}
{"db_id": "flight_4", "sub_sql": "group by t1.name order by count routes desc limit 1", "question": "What is the name of the airport that is the destination of the most number of routes that start in China?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count routes desc limit 1", "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the name of the airport that is the destination of the most number of routes", "sun_sql_new": "group by t1.name order by count routes desc limit 1"}
{"db_id": "tracking_orders", "sub_sql": "group by t1.customer_id order by count orders desc limit 1", "question": "What is the name of the customer who has the most orders?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count orders desc limit 1", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the customer who has the most orders", "sun_sql_new": "group by t1.customer_id order by count orders desc limit 1"}
{"db_id": "tracking_orders", "sub_sql": "group by t1.customer_id order by count orders desc limit 1", "question": "Which customer made the most orders? Find the customer name.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count orders desc limit 1", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "customer made the most orders", "sun_sql_new": "group by t1.customer_id order by count orders desc limit 1"}
{"db_id": "tracking_orders", "sub_sql": "group by t1.customer_id order by count orders desc limit 1", "question": "What is the customer id of the customer who has the most orders?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count orders desc limit 1", "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the customer who has the most orders", "sun_sql_new": "group by t1.customer_id order by count orders desc limit 1"}
{"db_id": "tracking_orders", "sub_sql": "group by t1.customer_id order by count orders desc limit 1", "question": "Find the id of the customer who made the most orders.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count orders desc limit 1", "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the customer who made the most orders", "sun_sql_new": "group by t1.customer_id order by count orders desc limit 1"}
{"db_id": "tracking_orders", "sub_sql": "group by t1.order_id order by count order_items desc limit 1", "question": "What is the id of the order which has the most items?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count order_items desc limit 1", "query": "SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the order which has the most items", "sun_sql_new": "group by t1.order_id order by count order_items desc limit 1"}
{"db_id": "tracking_orders", "sub_sql": "group by t1.order_id order by count order_items desc limit 1", "question": "Which order deals with the most items? Return the order id.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count order_items desc limit 1", "query": "SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "order deals with the most items", "sun_sql_new": "group by t1.order_id order by count order_items desc limit 1"}
{"db_id": "tracking_orders", "sub_sql": "group by t1.customer_id order by count orders desc limit 1", "question": "What is the name of the customer who has the largest number of orders?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count orders desc limit 1", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the customer who has the largest number of orders", "sun_sql_new": "group by t1.customer_id order by count orders desc limit 1"}
{"db_id": "tracking_orders", "sub_sql": "group by t1.customer_id order by count orders desc limit 1", "question": "Find the name of the customer who made the most orders.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count orders desc limit 1", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the customer who made the most orders", "sun_sql_new": "group by t1.customer_id order by count orders desc limit 1"}
{"db_id": "tracking_orders", "sub_sql": "group by t2.customer_id having count orders >= 2", "question": "For each customer who has at least two orders, find the customer name and number of orders made.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.customer_name ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2", "sub_ques": "each customer who has at least two orders", "sun_sql_new": "group by t2.customer_id having count orders no less than 2"}
{"db_id": "tracking_orders", "sub_sql": "group by t2.customer_id having count orders >= 2", "question": "Which customers have made at least two orders? Give me each customer name and number of orders made.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.customer_name ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2", "sub_ques": "customers have made at least two orders", "sun_sql_new": "group by t2.customer_id having count orders no less than 2"}
{"db_id": "tracking_orders", "sub_sql": "group by t2.customer_id having count orders <= 2", "question": "Find the name of the customers who have at most two orders.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2", "sub_ques": "the customers who have at most two orders", "sun_sql_new": "group by t2.customer_id having count orders no more than 2"}
{"db_id": "tracking_orders", "sub_sql": "group by t2.customer_id having count orders <= 2", "question": "What are the names of the customers who have made two or less orders?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2", "sub_ques": "the customers who have made two or less orders", "sun_sql_new": "group by t2.customer_id having count orders no more than 2"}
{"db_id": "tracking_orders", "sub_sql": "group by t1.customer_id having count orders >= 1", "question": "List the names of the customers who have once bought product \\\\\\\\\\\\\\\"food\\\\\\\\\\\\\\\".", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = \\\\\\\\\\\\\\\"food\\\\\\\\\\\\\\\" GROUP BY T1.customer_id HAVING count(*)  >=  1", "sub_ques": "the customers who have once bought product", "sun_sql_new": "group by t1.customer_id having count orders no less than 1"}
{"db_id": "tracking_orders", "sub_sql": "group by t1.customer_id having count orders >= 1", "question": "What are the names of the customers who bought product \\\\\\\\\\\\\\\"food\\\\\\\\\\\\\\\" at least once?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = \\\\\\\\\\\\\\\"food\\\\\\\\\\\\\\\" GROUP BY T1.customer_id HAVING count(*)  >=  1", "sub_ques": "the customers who bought product at least once", "sun_sql_new": "group by t1.customer_id having count orders no less than 1"}
{"db_id": "tracking_orders", "sub_sql": "group by t1.customer_id having count orders >= 1", "question": "List the names of customers who have once canceled the purchase of the product \\\\\\\\\\\\\\\"food\\\\\\\\\\\\\\\" (the item status is \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\").", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\" AND T4.product_name = \\\\\\\\\\\\\\\"food\\\\\\\\\\\\\\\" GROUP BY T1.customer_id HAVING count(*)  >=  1", "sub_ques": "customers who have once canceled the purchase of the product", "sun_sql_new": "group by t1.customer_id having count orders no less than 1"}
{"db_id": "tracking_orders", "sub_sql": "group by t1.customer_id having count orders >= 1", "question": "Which customers have ever canceled the purchase of the product \\\\\\\\\\\\\\\"food\\\\\\\\\\\\\\\" (the item status is \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\")?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = \\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\" AND T4.product_name = \\\\\\\\\\\\\\\"food\\\\\\\\\\\\\\\" GROUP BY T1.customer_id HAVING count(*)  >=  1", "sub_ques": "customers have ever canceled the purchase of the product", "sun_sql_new": "group by t1.customer_id having count orders no less than 1"}
{"db_id": "architecture", "sub_sql": "group by t1.id having count bridge >= 3", "question": "What are the ids and names of the architects who built at least 3 bridges ?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT T1.id ,  T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  >=  3", "sub_ques": "the architects who built at least 3 bridges", "sun_sql_new": "group by t1.id having count bridge no less than 3"}
{"db_id": "architecture", "sub_sql": "group by t1.id order by count mill desc limit 1", "question": "What is the id, name and nationality of the architect who built most mills?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count mill desc limit 1", "query": "SELECT T1.id ,  T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the architect who built most mills", "sun_sql_new": "group by t1.id order by count mill desc limit 1"}
{"db_id": "architecture", "sub_sql": "group by type order by count mill desc limit 1", "question": "What is the most common mill type, and how many are there?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count mill desc limit 1", "query": "SELECT TYPE ,  count(*) FROM mill GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the most common mill type", "sun_sql_new": "group by type order by count mill desc limit 1"}
{"db_id": "culture_company", "sub_sql": "group by publisher order by count book_club desc limit 1", "question": "What is the publisher with most number of books?", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count book_club desc limit 1", "query": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the publisher with most number of books", "sun_sql_new": "group by publisher order by count book_club desc limit 1"}
{"db_id": "culture_company", "sub_sql": "group by publisher order by count book_club desc limit 1", "question": "Return the publisher that has published the most books.", "sub_sql_type": "null null agg col null null limv", "sub_sql_new": "order by count book_club desc limit 1", "query": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count(*) DESC LIMIT 1", "sub_ques": "the publisher that has published the most books", "sun_sql_new": "group by publisher order by count book_club desc limit 1"}
{"db_id": "culture_company", "sub_sql": "group by category having count book_club >= 2", "question": "List categories that have at least two books after year 1989.", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2", "sub_ques": "categories that have at least two books", "sun_sql_new": "group by category having count book_club no less than 2"}
{"db_id": "culture_company", "sub_sql": "group by category having count book_club >= 2", "question": "What categories have two or more corresponding books that were made after 1989?", "sub_sql_type": "", "sub_sql_new": "", "query": "SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2", "sub_ques": "categories have two or more corresponding books", "sun_sql_new": "group by category having count book_club no less than 2"}
